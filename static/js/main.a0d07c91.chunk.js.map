{"version":3,"sources":["services/configs/client.js","services/configs/server.js","services/configs/status.js","services/configs/browser.js","services/configs/gamesetting.js","globals/state/GlobalContext.jsx","commons/NavigationBar.jsx","tools/notification.js","services/http/httpService.js","services/http/userServices.js","globals/redux/actions/player.js","games/gameplay/GameLogics.js","globals/redux/actions/game.js","services/http/leagueServices.js","globals/redux/actions/league.js","globals/state/GlobalStates.jsx","profile/panel/ProfilePanel.jsx","profile/panel/CollapsedPanel.jsx","users/AutoSignIn.jsx","services/http/chatServices.js","globals/redux/actions/interactions.js","commons/LoadingBar.jsx","layouts/ProfilePanelLayout.jsx","services/http/gameServices.js","commons/NoItems.jsx","tools/format.js","tables/scores/SingleScoreCard.jsx","tables/scores/ScoresTable.jsx","profile/friendgames/Record.jsx","globals/redux/actions/tools.js","profile/friendgames/FriendRecords.jsx","profile/friendgames/MyGamesAndFriends.jsx","services/http/noticeServices.js","profile/admin/NoticeManager.jsx","globals/redux/actions/message.js","chat/Message.jsx","chat/ChatBox.jsx","chat/ChatRoom.jsx","profile/edit/Credentials.jsx","profile/edit/PasswordChange.jsx","profile/edit/ImagePicker.jsx","profile/edit/AvatarChange.jsx","profile/edit/AcountManager.jsx","sidebars/SignInSideBar.jsx","sidebars/NoticeSideBar.jsx","sidebars/OnlineStatistics.jsx","chat/GameChatBox.jsx","sidebars/PlayerInfoSideBar.jsx","layouts/MainLayout.jsx","services/ws/gamePlaySocketServices.js","globals/redux/withReduxDashboard.js","games/gameplay/BriefScoreboard.jsx","games/gameplay/TableDesign.jsx","games/gameplay/MultiGamePlay.jsx","games/RandomGame.jsx","leagues/ModalContesters.jsx","leagues/SingleLeagueCard.jsx","leagues/Leagues.jsx","games/gameplay/ArtificialIntelligence.js","games/SinglePlayer.jsx","games/GameDeck.jsx","informations/GameGuide.jsx","informations/ContactUs.jsx","tables/scores/ScoresTableContainer.jsx","users/ModalSignIn.jsx","users/SignUp.jsx","tables/rankings/SingleRankCard.jsx","tables/rankings/Rankings.jsx","tables/rankings/RankingsContainer.jsx","profile/admin/EditStudent.jsx","profile/admin/StudentsManagement.jsx","profile/admin/LeaguesManager.jsx","leagues/matches/SingleMatchCard.jsx","leagues/matches/MatchesTable.jsx","leagues/LeagueHome.jsx","layouts/LeagueLayout.jsx","games/gameplay/SingleGamePlay.jsx","commons/MainRouter.jsx","globals/redux/actions/index.js","tools/NotificationCenter.jsx","services/ws/GlobalSocketManager.jsx","App.js","globals/redux/reducers/index.js","globals/redux/reducers/me.js","globals/redux/reducers/opponent.js","globals/redux/reducers/room.js","globals/redux/reducers/scoreboard.js","globals/redux/reducers/tools.js","globals/redux/reducers/statistics.js","globals/redux/reducers/message.js","globals/redux/reducers/interactions.js","globals/redux/reducers/league.js","globals/redux/reducers/game.js","globals/redux/store/index.js","index.js","services/configs/index.js"],"names":["Profile","Admin","module","exports","Root","SignUp","SignIn","GameDeck","SingleGameplay","Rankings","GameGuide","ContactUs","League","ChatRoom","MyGamesAndFriends","Notices","StudentManagement","Documents","LeaguesManager","WebSocketRoot","wsGamePlayRoute","wsGlobalRoute","Users","Private","Credentials","MyAvatar","PasswordChange","Friends","Records","Administrators","Games","Mine","Leagues","NewLeague","LeaguesList","Attend","Chats","Interactions","SingleChat","NoticeManagement","Successful","CreatedSuccessfully","BadRequest","Unauthorized","Forbidden","NotFound","MethodNotAllowed","NotAcceptable","Conflict","SessionExpired","UnprocessableEntity","LeagueNotFound","MatchNotFound","NonSenseToken","ForgedToken","InternalServerError","isErrorExpected","error","response","status","save","token","sessionStorage","setItem","enter_league","leagueID","reset","clear","TOKEN","getItem","LEAGUE","RandomSearchRepeatLimit","GlobalContext","createContext","device","signOut","goTo","redirectToGamePlay","cancelGame","openLeaguePage","NavigationBar","me","useSelector","state","context","useContext","Navbar","style","borderBottom","bg","className","Container","Nav","activeClassName","to","Routes","Client","Devices","SmartPhone","fullname","exact","Desktop","Sorry","text","toast","position","closeOnClick","icon","float","OK","success","Notify","info","Attention","onClick","warn","type","Boolean","axios","defaults","headers","post","put","interceptors","request","use","config","browserStorage","Authorization","Promise","reject","Status","err","console","log","http","get","delete","Server","userServices","signUp","user","JSON","stringify","signIn","getPlayer","userID","getAvatar","getAllPlayers","getMe","getMyCredentials","editMyCredentials","newMe","changeMyPassword","passwords","uploadAvatar","password","avatar","formData","FormData","append","getMyFriends","isMyFriend","targetID","ResetOpponent","dispatch","a","ResetMyPlayer","LoadThisPlayer","data","player","payload","LoadMyPlayer","T3DLogic","TurnTimeOut","dimension","indexes","i","push","empties","table","map","myTurn","Math","floor","random","dim","row","column","cellID","dimen","onFloorId","onClose","players","oppTurn","Number","score","connectScoreLines","playerInTheCell","rowCount","columnCount","floorMainDiagCount","floorSideDiagCount","tableMainDiagCount","tableSideDiagCount","tableAltitudeCount","tableRowFloorMainDiagCount","tableRowFloorSideDiagCount","tableColumnFloorMainDiagCount","tableColumnFloorSideDiagCount","EnterRoom","name","scoreless","getState","rivalID","split","filter","playerID","toString","CloseOngoingGame","RegisterSinglePlayer","difficulty","multy","leagueServices","loadLeague","listLeagues","joinLeague","teamID","attendLeagueGame","createLeague","Mode","title","capacity","prize","EnterLeague","league","matches","ongoing","length","match","playerXIndex","contesters","findIndex","cont","playerOIndex","forEach","index","progress","schedule","ExitLeague","withRouter","children","history","isDesktop","useMediaQuery","query","isSmartPhone","isTablet","useState","setDevice","useDispatch","useEffect","mode","Provider","value","room","destination","setTimeout","ProfilePanel","Row","Configs","isAdmin","Button","variant","CollapsedPanel","border","borderRadius","AutoSignIn","opponent","storageToken","chatServices","getOurChat","friendID","getMyInteractions","UpdateMyChatList","sent","recieved","myinteractions","interactions","find","interact","with","messages","friend","date","Date","LoadingBar","loading","whichOne","setWhichOne","useLayoutEffect","document","body","overflowY","height","selectedLoader","time","customLoading","ProfilePanelLayout","setLoading","myInteractions","Array","ownerOf","msg","owner","Error","Col","lg","sm","gameServices","getAllGames","getMyGames","NoItems","Card","Body","Text","objectify","DateObject","calendar","persian","locale","persian_fa","toHijri","format","toTimeShort","SingleScoreCard","Type","playerXName","playerOName","xScore","oScore","xBadge","setXBadge","oBadge","setOBadge","hijriDate","setHijriDate","Footer","block","disabled","size","ScoresTable","scores","gameID","Record","small","ListGroup","Item","Badge","pill","RepeatRandomSearch","tools","randomSearchRepeats","GameSetting","CloseRandomSearch","EndFriendRequest","friendRequestTarget","EndFriendlyInvitation","friendlyGameTarget","RecieveGameInvitation","ID","gameType","gameInvitation","ReloadRecords","recordReloadTrigger","reloadTrigger","FriendRecords","person","thisIsMe","setGameType","setAvatar","records","md","Image","src","alt","roundedCircle","points","wins","draws","loses","xs","InviteToFriendlyGame","InputGroup","Prepend","Radio","onChange","defaultChecked","myGames","setMyGames","filterID","setFilterID","selectedFriendIndex","setSelectedFriendIndex","friends","setFriends","friendsCount","setFriendsCount","serverResponse","reverse","Header","Tab","defaultActiveKey","onSelect","key","Link","eventKey","Content","Pane","game","id","noticeServices","createNotice","notice","getAdvancedNotics","getShortNotices","editNotice","noticeID","NoticeManager","undefined","isAllowed","setAllowed","setTitle","setText","startDate","setStartDate","endDate","setEndDate","notices","setNotices","selectedNoticeID","setSelectedNoticeID","updateTrigger","setUpdateTrigger","resetStates","decoded_token","jwtdecode","admin","exp","now","createNewNotice","saveChanges","Form","Label","Control","e","target","pattern","onInput","setCustomValidity","onInvalid","placeholder","required","as","calendarPosition","Alert","color","fontSize","_id","selecteNotice","SendMessageTo","RecieveMessageFrom","Message","previousDay","showDate","setShowDate","setTime","hDate","hTime","getDate","ChatBox","chat","myMessage","setMyMessage","message","mostRecentMessageRef","useRef","current","scrollIntoView","behavior","top","offsetTop","ref","onSubmit","event","preventDefault","composeMessage","sort","i1","i2","getTime","setFullname","studentID","setStudentID","email","setEmail","setPassword","pageUpdateTrigger","triggerPageUpdate","newPassword","setNewPassword","confirmNewPassword","setConfirmNewPassword","checkConfirmPassword","ImagePicker","selector","preview","setPreview","Group","rounded","imageFile","oFReader","FileReader","readAsDataURL","onload","oFREvent","result","updatePreview","files","accept","htmlFor","AvatarChange","myAvatar","selectMyAvatar","upload","AcountManager","TABS","Tabs","SignInSideBar","onSignInSubmitted","setState","props","replace","this","autoComplete","sitekey","Component","NoticeSideBar","uuidv1","OnlineStatistics","statistics","games","GameChatBox","PlayerInfoSideBar","scoreboard","personIsFriend","setPersonIsFriend","piece","setPiece","opp","isFriend","onFriendRequestClick","innerHTML","Heading","shape","pathname","location","leftSideBar","setLeftSideBar","rightSideBar","setRightSideBar","setPrimaryRightSideBar","Tablet","createSocketRequest","rname","connect","resolve","server","WebSocket","onopen","send","onerror","close","onclose","withReduxDashboard","component","UpdateScoreboard","details","RegisterMultiplayer","BriefScoreboard","timeRemaining","turn","timeStamp","setTimeStamp","aThird","textAlign","TableDesign","onEachCellClick","dimens","cell","setCell","cellWidths","cellHeights","deviceWidth","window","innerWidth","deviceHeight","innerHeight","width","margin","h","w","direction","marginLeft","MultiGamePlay","lineColor","socketGamePlay","playerOnline","deadlineID","connectionCheckTimerID","updateGameScorebaord","synchronizeDeadline","t0","remaining","clearInterval","setInterval","updatePlayerStates","disableAllTimers","clearTimeout","socketOnMessage","parse","cmd","surrender","startTime","IDs","opponentID","newMove","cellIndex","verifyAndApplyTheMove","cellButtons","focus","madeBy","onCloseGame","forceConnectWS","nextJob","socket","onmessage","enableConnectionCheckTimer","navigator","onLine","loadCurrentGame","selectedCellButton","cellButton","tempTable","opacity","firstCell","step","getElementsByClassName","RandomGame","setDimension","isScoreless","setScoreless","searching","setSearching","onStartGameClick","padding","checked","ModalContesters","show","setShow","Modal","onHide","closeButton","contester","SingleLeagueCard","reload","showMore","toggleShow","ready","setReady","join","started","Title","leagues","setLeagues","triggerReload","ArtificialIntelligence","level","LEVELS","Ordinary","dimenstion","update","moves","unshift","by","weigh","playerInIntersection","sign","weights","heaviest","maxWeight","maxPossibleWeight","pow","f","r","c","weight","abs","reaction","Noob","strike","Pro","movesToCheck","slice","move","count","empty","defend","attack","test","SinglePlayer","setDifficulty","onStartSinglePlayerClick","continueGame","setContinueGame","setSurrender","transition","href","ScoresTableContainer","liveScores","finalScores","showLiveOnes","btnShowLiveScores","btnShowFinalScores","allGames","then","isLive","catch","ModalSignIn","showModal","onCloseClick","onShowClick","onForgotPasswordClick","backdrop","contextType","confirmPassword","firstname","lastname","onSignUpSubmit","trim","newUser","SingleRankCard","rowNumber","scope","rankByProgress","p","RankingsContainer","tempPlayers","p1","p2","EditStudent","preventDefaults","StudentsManagement","lookFor","setLookFor","setMode","setCapacity","setPrize","create","Modes","attendThisGame","SingleMatchCard","playerX","playerO","onClickForThis","setOnClickForThis","cardColor","setCardColor","MatchesTable","LeagueHome","LeagueLayout","SingleGamePlay","ai","rescheduleDeadline","react","nextMove","MainRouter","path","UpdateStatistics","pushed","NewMsg","inviterID","acceptedGame","expirationLength","iat","GlobalSocketManager","socketGlobal","setSocketGlobal","incommingFriendRequest","setIncommingFriendRequest","showFriendshipModal","setShowFriendshipModal","clientOnline","toggleClientOnline","pack","useCallback","reconnectingTimerID","setReconnectingTimerID","iamSignedIn","iamBusy","nextReconnectingTimeout","command","found","stats","answer","targetName","askerID","askerName","timerID","respondToFriendshipRequest","App","reducers","combineReducers","action","store","createStore","applyMiddleware","thunk","subscribe","render","getElementById","ClientRoutes","require","ServerRoutes"],"mappings":"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","file":"static/js/main.a0d07c91.chunk.js","sourcesContent":["//client routes\r\n// Partial Routes\r\nconst Profile = \"/profile\",\r\n    Admin = \"/admin\",\r\n    ChatRoom = \"chatroom\",\r\n    MyGamesAndFriends = \"games\",\r\n    Notices = \"notices\",\r\n    StManagement = \"students\",\r\n    Documents = \"documents\",\r\n    Leagues = \"leagues\";\r\n\r\nmodule.exports = {\r\n    Root: \"/\",\r\n    SignUp: \"/register\",\r\n    SignIn: \"/login\",\r\n    GameDeck: \"/gamedeck\",\r\n    SingleGameplay: \"/single\",\r\n    Rankings: \"/rankings\",\r\n    GameGuide: \"/guide\",\r\n    ContactUs: \"/contactme\",\r\n    League: \"/league\",\r\n    Profile,\r\n    Admin,\r\n    ChatRoom: `${Profile}/${ChatRoom}`,\r\n    MyGamesAndFriends: `${Profile}/${MyGamesAndFriends}`,\r\n    Notices: `${Admin}/${Notices}`,\r\n    StudentManagement: `${Admin}/${StManagement}`,\r\n    Documents: `${Admin}/${Documents}`,\r\n    LeaguesManager: `${Admin}/${Leagues}`\r\n};","//server routes\r\nmodule.exports = {\r\n    Root: \"https://t3dweb.herokuapp.com\",\r\n    WebSocketRoot: \"wss://t3dweb.herokuapp.com/ws\",\r\n    wsGamePlayRoute: \"gameplay\",\r\n    wsGlobalRoute: \"global\",\r\n    SignUp: \"signup\",\r\n    SignIn: \"signin\",\r\n    Users: \"users\",\r\n    Private: \"private\",\r\n    Credentials: \"credentials\",\r\n    MyAvatar: \"avatar\",\r\n    PasswordChange: \"password\",\r\n    Friends: \"friends\",\r\n    Records: \"records\",\r\n    Administrators: \"administrators\",\r\n    Games: \"games\",\r\n    Mine: \"mine\",\r\n    Leagues: \"leagues\",\r\n    NewLeague: \"new\",\r\n    LeaguesList: \"list\",\r\n    Attend: \"attend\",\r\n    Chats: \"chats\",\r\n    Interactions: \"interact\",\r\n    SingleChat: \"single\",\r\n    Notices: \"notices\",\r\n    NoticeManagement: \"manage\"\r\n};","const isErrorExpected = (error) => {\r\n    return (\r\n        error.response &&\r\n        error.response.status >= 400 && // >= : bad request\r\n        error.response.status <= 500 // <= 500: internal server error\r\n    );\r\n    // other errors are not expected\r\n};\r\n\r\nmodule.exports = {\r\n    Successful: 200,\r\n    CreatedSuccessfully: 201,\r\n    BadRequest: 400,\r\n    Unauthorized: 401,\r\n    Forbidden: 403,\r\n    NotFound: 404,\r\n    MethodNotAllowed: 405,\r\n    NotAcceptable: 406,\r\n    Conflict: 409,\r\n    SessionExpired: 420,\r\n    UnprocessableEntity: 422,\r\n    LeagueNotFound: 432,\r\n    MatchNotFound: 433,\r\n    NonSenseToken: 465,\r\n    ForgedToken: 466,\r\n    InternalServerError: 500,\r\n    isErrorExpected,\r\n};","//browser storage keywords\r\nconst KeyToken = \"ptk\", KeyLeague = \"lgk\";\r\nmodule.exports = {\r\n    save: (token) => {\r\n        // use remember me option\r\n        sessionStorage.setItem(KeyToken, token);\r\n    },\r\n    enter_league: (leagueID) => {\r\n        sessionStorage.setItem(KeyLeague, leagueID);\r\n    },\r\n    reset: () => {\r\n        sessionStorage.clear();\r\n    },\r\n    TOKEN: () => sessionStorage.getItem(KeyToken),\r\n    LEAGUE: () => sessionStorage.getItem(KeyLeague)\r\n};\r\n","module.exports = {\r\n    RandomSearchRepeatLimit: 5,\r\n};","import { createContext } from \"react\";\r\n\r\nconst GlobalContext = createContext({\r\n    device: 0,\r\n    signOut: () => {},\r\n    goTo: () => {},\r\n    redirectToGamePlay: () => {},\r\n    cancelGame: () => {},\r\n    openLeaguePage: () => {}\r\n});\r\n\r\nexport default GlobalContext;","import { useContext } from \"react\";\r\nimport { Container, Nav, Navbar } from \"react-bootstrap\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport GlobalContext from \"../globals/state/GlobalContext\";\r\nimport { Devices, Routes } from \"../services/configs\";\r\n\r\nconst NavigationBar = () => {\r\n\tconst me = useSelector((state) => state.me);\r\n\tconst context = useContext(GlobalContext);\r\n\r\n\treturn (\r\n\t\t<Navbar style={{borderBottom: '1px solid grey'}}  bg=\"light\" className=\"nav-pills text-right\">\r\n\t\t\t<Container className=\"text-right\">\r\n\t\t\t\t<Nav className=\"me-auto\">\r\n\t\t\t\t\t<NavLink\r\n\t\t\t\t\t\tclassName=\"nav-link text-primary\"\r\n\t\t\t\t\t\tactiveClassName=\"btn-success text-dark\"\r\n\t\t\t\t\t\tto={\r\n\t\t\t\t\t\t\tme\r\n\t\t\t\t\t\t\t\t? Routes.Client.Profile\r\n\t\t\t\t\t\t\t\t: Routes.Client.SignUp\r\n\t\t\t\t\t\t}>\r\n\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\tclassName=\"fa fa-address-card px-2\"\r\n\t\t\t\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t\t\t\t\t{me\r\n\t\t\t\t\t\t\t? context.device !== Devices.SmartPhone && me.fullname\r\n\t\t\t\t\t\t\t: \"ثبت نام\"}\r\n\t\t\t\t\t</NavLink>\r\n\t\t\t\t\t<NavLink\r\n\t\t\t\t\t\tclassName=\"nav-link text-primary\"\r\n\t\t\t\t\t\tto={Routes.Client.Root}\r\n\t\t\t\t\t\texact\r\n\t\t\t\t\t\tactiveClassName=\"btn-outline-secondary text-dark\">\r\n\t\t\t\t\t\t<i className=\"fa fa-home px-2\" aria-hidden=\"true\"></i>\r\n\t\t\t\t\t\t{context.device === Devices.Desktop && \"صفحه اصلی\"}\r\n\t\t\t\t\t</NavLink>\r\n\r\n\t\t\t\t\t<NavLink\r\n\t\t\t\t\t\tclassName=\"nav-link text-primary\"\r\n\t\t\t\t\t\tto={Routes.Client.GameDeck}\r\n\t\t\t\t\t\tactiveClassName=\"btn-outline-secondary text-dark\">\r\n\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\tclassName=\"fa fa-gamepad px-2\"\r\n\t\t\t\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t\t\t\t\t{context.device === Devices.Desktop && \"بازی ها\"}\r\n\t\t\t\t\t</NavLink>\r\n\t\t\t\t\t{me && (\r\n\t\t\t\t\t\t<NavLink\r\n\t\t\t\t\t\t\tclassName=\"nav-link text-primary\"\r\n\t\t\t\t\t\t\tto={Routes.Client.ChatRoom}\r\n\t\t\t\t\t\t\tactiveClassName=\"btn-outline-secondary text-dark\">\r\n\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\tclassName=\"fa fa-comment px-2\"\r\n\t\t\t\t\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t\t\t\t\t\t{context.device === Devices.Desktop && \"چت روم\"}\r\n\t\t\t\t\t\t</NavLink>\r\n\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t<NavLink\r\n\t\t\t\t\t\tclassName=\"nav-link text-primary\"\r\n\t\t\t\t\t\tto={Routes.Client.Rankings}\r\n\t\t\t\t\t\tactiveClassName=\"btn-outline-secondary text-dark\">\r\n\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\tclassName=\"fa fa-list-ol px-2\"\r\n\t\t\t\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t\t\t\t\t{context.device === Devices.Desktop && \"رنکینگ\"}\r\n\t\t\t\t\t</NavLink>\r\n\t\t\t\t\t<NavLink\r\n\t\t\t\t\t\tclassName=\"nav-link text-primary\"\r\n\t\t\t\t\t\tto={Routes.Client.GameGuide}\r\n\t\t\t\t\t\tactiveClassName=\"btn-outline-secondary text-dark\">\r\n\t\t\t\t\t\t<i className=\"fa fa-eye px-2\" aria-hidden=\"true\"></i>\r\n\t\t\t\t\t\t{context.device === Devices.Desktop && \"راهنما\"}\r\n\t\t\t\t\t</NavLink>\r\n\t\t\t\t\t<NavLink\r\n\t\t\t\t\t\tclassName=\"nav-link text-primary\"\r\n\t\t\t\t\t\tto={Routes.Client.ContactUs}\r\n\t\t\t\t\t\tactiveClassName=\"btn-outline-secondary text-dark\">\r\n\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\tclassName=\"fa fa-phone-square px-2\"\r\n\t\t\t\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t\t\t\t\t{context.device === Devices.Desktop && \"تماس با ما\"}\r\n\t\t\t\t\t</NavLink>\r\n\t\t\t\t</Nav>\r\n\t\t\t</Container>\r\n\t\t</Navbar>\r\n\t);\r\n};\r\n\r\nexport default NavigationBar;\r\n","import { toast } from \"react-toastify\";\r\n\r\nexport const Sorry = (text) => {\r\n\ttoast.error(text, {\r\n\t\t// theme: \"light\",\r\n\t\tposition: \"top-right\",\r\n\t\tcloseOnClick: true,\r\n\t\ticon: (\r\n\t\t\t<i\r\n\t\t\t\tstyle={{ float: \"right\" }}\r\n\t\t\t\tclassName=\"fa fa-times\"\r\n\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t),\r\n\t});\r\n};\r\n\r\nexport const OK = (text) => {\r\n\ttoast.success(text, {\r\n\t\t// theme: \"light\",\r\n\t\tposition: \"top-left\",\r\n\t\tcloseOnClick: true,\r\n\t\ticon: (\r\n\t\t\t<i\r\n\t\t\t\tstyle={{ float: \"right\" }}\r\n\t\t\t\tclassName=\"fa fa-check\"\r\n\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t),\r\n\t});\r\n};\r\n\r\nexport const Notify = (text) => {\r\n\ttoast.info(text, {\r\n\t\t// theme: \"light\",\r\n\t\tposition: \"top-center\",\r\n\t\tcloseOnClick: true,\r\n\t\ticon: (\r\n\t\t\t<i\r\n\t\t\t\tstyle={{ float: \"right\" }}\r\n\t\t\t\tclassName=\"fa fa-info\"\r\n\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t),\r\n\t});\r\n};\r\n\r\nexport const Attention = (text, onClick) => {\r\n\t/*toast.warn(text, {\r\n        type: \"colored\",\r\n        position: \"top-center\",\r\n        closeOnClick: true,\r\n        icon: <i style={{float:'right'}} className=\"fa fa-gavel\" aria-hidden=\"true\"></i>,\r\n    });*/\r\n\ttoast.warn(text, {\r\n\t\ttype: \"dark\",\r\n\t\tposition: \"top-center\",\r\n\t\tonClick, // check these two lines functionality to make sure they doesnt interfere with eachother\r\n\t\tcloseOnClick: !Boolean(onClick), //if it has an onClick, then dont close it, but if it hasnt any onClick then set closeOnClick to true\r\n\t\ticon: (\r\n\t\t\t<i\r\n\t\t\t\tstyle={{ float: \"right\" }}\r\n\t\t\t\tclassName=\"fa fa-gavel\"\r\n\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t),\r\n\t});\r\n};\r\n\r\n//add maximum number of simultanious NewMsg s\r\nexport const NewMsg = ({ name, text }, onClick) => {\r\n\ttoast(\r\n\t\t<p className=\"text-right\">\r\n\t\t\t{`${name} : ${text}`}\r\n\t\t</p>,\r\n\t\t{\r\n\t\t\ttype: \"dark\",\r\n\t\t\tposition: \"top-left\",\r\n\t\t\tonClick,\r\n\t\t\ticon: (\r\n\t\t\t\t<i\r\n\t\t\t\t\tstyle={{ float: \"right\" }}\r\n\t\t\t\t\tclassName=\"fa fa-envelope-o px-2 py-1\"\r\n\t\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t\t),\r\n\t\t}\r\n\t);\r\n};\r\n\r\nexport const Invitation = (by, accept, reject) => {\r\n\ttoast(\r\n\t\t<p className=\"text-right text-primary\">\r\n\t\t\t{`درخواست بازی ${by.type}*${by.type}*${by.type} از ${by.name}\\n برای پذیرفتن دعوت کلیک کنید`}\r\n\t\t</p>,\r\n\t\t{\r\n\t\t\tposition: \"top-left\",\r\n\t\t\tonClick: () => accept(by.ID, by.type),\r\n\t\t\tonClose: () => reject(),\r\n\t\t\ticon: (\r\n\t\t\t\t<i\r\n\t\t\t\t\tstyle={{ float: \"right\" }}\r\n\t\t\t\t\tclassName=\"fa fa-gamepad px-2 py-1\"\r\n\t\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t\t),\r\n\t\t}\r\n\t);\r\n};\r\n","import axios from \"axios\";\r\nimport { Status, browserStorage } from \"../configs\";\r\nimport { Attention, Sorry } from \"../../tools/notification\";\r\naxios.defaults.headers.post[\"Content-Type\"] = \"application/json\";\r\naxios.defaults.headers.put[\"Content-Type\"] = \"application/json\";\r\n\r\n// put token in all request headers:\r\naxios.interceptors.request.use(\r\n\t(config) => {\r\n\t\tconst token = browserStorage.TOKEN();\r\n\t\tif (token) config.headers.Authorization = `Bearer ${token}`;\r\n\t\telse config.headers.Authorization = null;\r\n\t\treturn config;\r\n\t},\r\n\t(error) => {\r\n\t\t// what to do?\r\n\t\treturn Promise.reject(error);\r\n\t}\r\n);\r\n// what the f should i do?\r\n// (() => {\r\n//     const token = sessionStorage.getItem(\"token\");\r\n//     if (token)\r\n//         axios.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`;\r\n//     else {\r\n//         delete axios.defaults.headers.common[\"Authorization\"];\r\n//         /*if setting null does not remove `Authorization` header then try\r\n//               delete axios.defaults.headers.common['Authorization'];\r\n//             */\r\n//     }\r\n//     console.log(\"token\", token);\r\n// })();\r\n\r\naxios.interceptors.response.use(null, (error) => {\r\n\ttry {\r\n\t\t//*****notice: */\r\n\t\t//remove some oftheese errors... because they need to be costomized in every use in each components\r\n\t\t// change to switch\r\n\t\t\r\n\t\tif (error.response.status === Status.BadRequest) {\r\n\t\t\tSorry(\r\n\t\t\t\t\"مشکلی در ارسال درخواست شما به سرور وجود داشت، لطفا دوباره تلاش کنید\"\r\n\t\t\t);\r\n\t\t} else if (error.response.status === Status.Unauthorized) {\r\n\t\t\t// is this needed? browserStorage.reset();\r\n\t\t\tSorry(\r\n\t\t\t\t\"احراز هویت موفقیت آمیز نبود. لطفا وارد حساب کاربری خود شوید\"\r\n\t\t\t);\r\n\t\t\tbrowserStorage.reset();\r\n\t\t} else if (error.response.status === Status.Forbidden) {\r\n\t\t\tSorry(\"شماره دانشجویی یا رمز عبور نادرست است\");\r\n\t\t} else if (error.response.status === Status.NotAcceptable) {\r\n\t\t\t//or used Locked: 423\r\n\t\t\tSorry(\"این قسمت فقط مختص کاربران ادمین می باشد\");\r\n\t\t} else if (error.response.status === Status.Conflict) {\r\n\t\t\tAttention(\r\n\t\t\t\t\"کاربری با این شماره دانشجویی یا ایمیل قبلا ثبت نام کرده است\"\r\n\t\t\t);\r\n\t\t} else if (error.response.status === Status.SessionExpired) {\r\n\t\t\tSorry(\"نشست شما منقضی شده است، لطفا دوباره وارد حساب خود شوید.\");\r\n\t\t\tbrowserStorage.reset();\r\n\t\t\t//redirect to sign in page !\r\n\t\t} else if (error.response.status === Status.UnprocessableEntity) {\r\n\t\t\tSorry(\"ورودی شما با استانداردهای سایت مطابقت ندارد\");\r\n\t\t} else if (error.response.status === Status.InternalServerError) {\r\n\t\t\tSorry(\"مشکلی از سمت سرور پیش آمده است ... لطفا لحظاتی بعد دوباره تلاش کنید\");\r\n\t\t}\r\n\t\telse if (!Status.isErrorExpected(error)) {\r\n\t\t\t// console.log(error);\r\n\t\t\tSorry(\r\n\t\t\t\t\"خطای غیرمنتظره ای رخ داده است. اگر برای چندمین بار است که این پیغلم را می بینید، لطفا مشکل خود را باه ما اطلاع دهید.\"\r\n\t\t\t);\r\n\t\t}\r\n\t} catch (err) {\r\n        console.log(error);\r\n    }\r\n\treturn Promise.reject(error);\r\n});\r\n\r\nconst http = {\r\n\tget: axios.get,\r\n\tpost: axios.post,\r\n\tput: axios.put,\r\n\tdelete: axios.delete,\r\n};\r\n\r\nexport default http;\r\n","import http from \"./httpService\";\r\nimport { Routes } from \"../configs\";\r\n\r\nconst { Server } = Routes;\r\n\r\nconst userServices = {\r\n\tsignUp: (user) =>\r\n\t\thttp.post(\r\n\t\t\t`${Server.Root}/${Server.Users}/${Server.SignUp}`,\r\n\t\t\tJSON.stringify(user)\r\n\t\t),\r\n\tsignIn: (user) =>\r\n\t\thttp.post(\r\n\t\t\t`${Server.Root}/${Server.Users}/${Server.SignIn}`,\r\n\t\t\tJSON.stringify(user)\r\n\t\t),\r\n\tgetPlayer: (userID) =>\r\n\t\thttp.get(`${Server.Root}/${Server.Users}/${Server.Records}/${userID}`),\r\n\tgetAvatar: (userID) =>\r\n\t\thttp.get(\r\n\t\t\t`${Server.Root}/${Server.Users}/${Server.MyAvatar}/${userID}`\r\n\t\t),\r\n\tgetAllPlayers: () =>\r\n\t\thttp.get(`${Server.Root}/${Server.Users}/${Server.Records}`),\r\n\tgetMe: () => http.get(`${Server.Root}/${Server.Users}/${Server.Private}`),\r\n\tgetMyCredentials: () =>\r\n\t\thttp.get(\r\n\t\t\t`${Server.Root}/${Server.Users}/${Server.Private}/${Server.Credentials}`\r\n\t\t),\r\n\teditMyCredentials: (newMe) =>\r\n\t\thttp.put(\r\n\t\t\t`${Server.Root}/${Server.Users}/${Server.Private}/${Server.Credentials}`,\r\n\t\t\tJSON.stringify(newMe)\r\n\t\t),\r\n\tchangeMyPassword: (passwords) =>\r\n\t\thttp.put(\r\n\t\t\t`${Server.Root}/${Server.Users}/${Server.Private}/${Server.Credentials}/${Server.PasswordChange}`,\r\n\t\t\tJSON.stringify(passwords)\r\n\t\t),\r\n\tuploadAvatar: (password, avatar) => {\r\n\t\tlet formData = new FormData();\r\n\t\tformData.append(\"avatar\", avatar);\r\n\t\treturn http.post(\r\n\t\t\t`${Server.Root}/${Server.Users}/${Server.Private}/${Server.MyAvatar}`,\r\n\t\t\tformData,\r\n\t\t\t{\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t\"Content-Type\": \"multipart/form-data\",\r\n\t\t\t\t},\r\n\t\t\t}\r\n\t\t);\r\n\t},\r\n\tgetMyFriends: () =>\r\n\t\thttp.get(\r\n\t\t\t`${Server.Root}/${Server.Users}/${Server.Private}/${Server.Credentials}/${Server.Friends}`\r\n\t\t),\r\n\tisMyFriend: (targetID) =>\r\n\t\thttp.get(\r\n\t\t\t`${Server.Root}/${Server.Users}/${Server.Private}/${Server.Credentials}/${Server.Friends}/${targetID}`\r\n\t\t)\r\n};\r\n\r\nexport default userServices;\r\n","import { Status } from \"../../../services/configs\";\r\nimport userServices from \"./../../../services/http/userServices\";\r\nimport { Sorry } from \"./../../../tools/notification\";\r\n\r\nexport const ResetOpponent = () => {\r\n\treturn async (dispatch) => {\r\n\t\tawait dispatch({ type: \"RESET_OPPONENT\" });\r\n\t};\r\n};\r\n\r\nexport const ResetMyPlayer = () => {\r\n\treturn async (dispatch) => {\r\n\t\tawait dispatch({ type: \"RESET_MINE\" });\r\n\t};\r\n};\r\n\r\nexport const LoadThisPlayer = (userID) => {\r\n\treturn async (dispatch) => {\r\n\t\tif (userID) {\r\n\t\t\ttry {\r\n\t\t\t\tconst { data, status } = await userServices.getPlayer(userID);\r\n\t\t\t\tif (status === Status.Successful) {\r\n\t\t\t\t\tconst { player } = data;\r\n\t\t\t\t\tawait dispatch({ type: \"LOAD_OPPONENT\", payload: player });\r\n\t\t\t\t}\r\n\t\t\t} catch (err) {\r\n\t\t\t\t// console.log(err);\r\n\t\t\t\tif (!Status.isErrorExpected(err))\r\n\t\t\t\t\tSorry(\r\n\t\t\t\t\t\t\"مشکلی حین بارگذاری اطلاعات حریف پیش آمد. لطفا وضعیت اینترنت خود را بررسی کنید.\"\r\n\t\t\t\t\t);\r\n\t\t\t\t// ... toast proper message?\r\n\t\t\t\tawait dispatch(ResetOpponent());\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t// ...propere message\r\n\t\t\tawait dispatch(ResetOpponent());\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const LoadMyPlayer = () => {\r\n\treturn async (dispatch) => {\r\n\t\ttry {\r\n\t\t\tconst { data, status } = await userServices.getMe();\r\n\t\t\tif (status === Status.Successful) {\r\n\t\t\t\tconst { player } = data;\r\n\t\t\t\tawait dispatch({ type: \"LOAD_MINE\", payload: player });\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log(err);\r\n\t\t\t// ... toast proper message?\r\n\t\t\tif (!Status.isErrorExpected(err))\r\n\t\t\t\tSorry(\"مشکلی در بارگذاری اطلاعات کاربری شما پیش آمد. لطفا ارتباط اینترنتی خود را بررسی کنید.\")\r\n\t\t\tawait dispatch(ResetMyPlayer());\r\n\t\t}\r\n\t};\r\n};\r\n","import { Notify } from \"./../../tools/notification\";\r\n\r\nexport const T3DLogic = {\r\n    Rules: { TurnTimeOut: 45 }, //secs\r\n    initiate: (dimension) => {\r\n        let indexes = [];\r\n        for (let i = 0; i < dimension; i++) indexes.push(i);\r\n        return {\r\n            empties: dimension * dimension * dimension,\r\n            table: indexes.map(() =>\r\n                indexes.map(() => indexes.map(() => null))\r\n            ),\r\n            myTurn: Math.floor(Math.random() * 2),\r\n        };\r\n    },\r\n    getButtonCoordinates: (dim, { floor, row, column }) =>\r\n        floor * dim * dim + row * dim + column,\r\n    getCellCoordinates: (cellID, dimen) => {\r\n        const cellFloor = Math.floor(cellID / (dimen * dimen));\r\n        const onFloorId = cellID % (dimen * dimen);\r\n        const cellRow = Math.floor(onFloorId / dimen);\r\n        const cellColumn = onFloorId % dimen;\r\n        // just test a random id to see how above formula works!\r\n        return { floor: cellFloor, row: cellRow, column: cellColumn };\r\n    },\r\n    endThisGame: ({ players, myTurn }, onClose) => {\r\n        const oppTurn = Number(!myTurn);\r\n        //NOTE: u can deliver this message to socket global to make sure toast shows all the tie but its no need really :|\r\n        if (players[myTurn].score > players[oppTurn].score)\r\n            Notify(\"شما برنده شدید و سه امتیاز کسب کردید\");\r\n        else if (players[myTurn].score === players[oppTurn].score)\r\n            Notify(\"شما مساوی شدید و یک امتیاز کسب کردید\");\r\n        else Notify(\"شما باختید\");\r\n        //reset everything:\r\n        onClose();\r\n    },\r\n    inspectAreaAroundTheCell: ({ floor, row, column }, { players, table, dimension },\r\n        connectScoreLines\r\n    ) => {\r\n        // inpect the table in all ways around a selected cell (new selected one), to update points and color the score routes\r\n        // is it needed to write a inspectAll method ?\r\n        const playerInTheCell = table[floor][row][column];\r\n        let rowCount = 0,\r\n            columnCount = 0,\r\n            floorMainDiagCount = 0,\r\n            floorSideDiagCount = 0,\r\n            tableMainDiagCount = 0,\r\n            tableSideDiagCount = 0,\r\n            tableAltitudeCount = 0,\r\n            tableRowFloorMainDiagCount = 0,\r\n            tableRowFloorSideDiagCount = 0,\r\n            tableColumnFloorMainDiagCount = 0,\r\n            tableColumnFloorSideDiagCount = 0;\r\n        for (let i = 0; i < dimension; i++) {\r\n            if (table[floor][row][i] === playerInTheCell) rowCount++; // inspect in a row\r\n            if (table[floor][i][column] === playerInTheCell) columnCount++; // inspect in a column\r\n            if (table[i][row][column] === playerInTheCell) tableAltitudeCount++; // inspect in a altitude line\r\n            if (row === column) {\r\n                if (table[floor][i][i] === playerInTheCell)\r\n                    floorMainDiagCount++; // inspect in a 2D main diagonal line through the cell's floor\r\n                if (row === floor && table[i][i][i] === playerInTheCell)\r\n                    tableMainDiagCount++; // inspect in a 3D main diagonal line through the whole table\r\n            }\r\n            if (row + column + 1 === dimension) {\r\n                if (table[floor][i][dimension - i - 1] === playerInTheCell)\r\n                    floorSideDiagCount++; // inpect in a 2D side Diagonal line through the cell's floor\r\n                if (\r\n                    row === floor &&\r\n                    table[i][i][dimension - i - 1] === playerInTheCell\r\n                )\r\n                    tableSideDiagCount++; // inspect in a 3D side diagonal line through the whole table\r\n            }\r\n            if (floor === column && table[i][row][i] === playerInTheCell)\r\n                tableRowFloorMainDiagCount++;\r\n            if (\r\n                floor + column + 1 === dimension &&\r\n                table[i][row][dimension - i - 1] === playerInTheCell\r\n            )\r\n                tableRowFloorSideDiagCount++;\r\n            if (floor === row && table[i][i][column] === playerInTheCell)\r\n                tableColumnFloorMainDiagCount++;\r\n            if (\r\n                floor + row + 1 === dimension &&\r\n                table[i][dimension - i - 1][column] === playerInTheCell\r\n            )\r\n                tableColumnFloorSideDiagCount++;\r\n        }\r\n\r\n        // now inspect whether a line has been made and take action for it\r\n        // the actual purpose of lines below, is to convert cell:{floor, row, format} format to ButtonID format;\r\n        // ButtonID (or cellID) format is an integer between 0 and (dimension^3)\r\n        rowCount === dimension &&\r\n            connectScoreLines(\r\n                floor * dimension * dimension + row * dimension,\r\n                1,\r\n                playerInTheCell - 1\r\n            );\r\n        columnCount === dimension &&\r\n            connectScoreLines(\r\n                floor * dimension * dimension + column,\r\n                dimension,\r\n                playerInTheCell - 1\r\n            );\r\n        floorMainDiagCount === dimension &&\r\n            connectScoreLines(\r\n                floor * dimension * dimension,\r\n                dimension + 1,\r\n                playerInTheCell - 1\r\n            );\r\n        floorSideDiagCount === dimension &&\r\n            connectScoreLines(\r\n                floor * dimension * dimension + (dimension - 1),\r\n                dimension - 1,\r\n                playerInTheCell - 1\r\n            );\r\n        tableMainDiagCount === dimension &&\r\n            connectScoreLines(\r\n                0,\r\n                dimension * (dimension + 1) + 1,\r\n                playerInTheCell - 1\r\n            );\r\n        tableSideDiagCount === dimension &&\r\n            connectScoreLines(\r\n                dimension - 1,\r\n                dimension * (dimension + 1) - 1,\r\n                playerInTheCell - 1\r\n            );\r\n        tableAltitudeCount === dimension &&\r\n            connectScoreLines(\r\n                row * dimension + column,\r\n                dimension * dimension,\r\n                playerInTheCell - 1\r\n            );\r\n        tableRowFloorMainDiagCount === dimension &&\r\n            connectScoreLines(\r\n                row * dimension,\r\n                dimension * dimension + 1,\r\n                playerInTheCell - 1\r\n            );\r\n        tableRowFloorSideDiagCount === dimension &&\r\n            connectScoreLines(\r\n                (row + 1) * dimension - 1,\r\n                dimension * dimension - 1,\r\n                playerInTheCell - 1\r\n            );\r\n        tableColumnFloorMainDiagCount === dimension &&\r\n            connectScoreLines(\r\n                column,\r\n                dimension * (dimension + 1),\r\n                playerInTheCell - 1\r\n            );\r\n        tableColumnFloorSideDiagCount === dimension &&\r\n            connectScoreLines(\r\n                dimension * (dimension - 1) + column,\r\n                dimension * (dimension - 1),\r\n                playerInTheCell - 1\r\n            );\r\n    },\r\n};","import { LoadThisPlayer } from \"./player\";\r\nimport { Sorry, Notify } from \"../../../tools/notification\";\r\nimport { T3DLogic } from '../../../games/gameplay/GameLogics';\r\nexport const EnterRoom = ({ name, type, scoreless }) => {\r\n    return async(dispatch, getState) => {\r\n        const me = getState().me;\r\n        try {\r\n            await dispatch({\r\n                type: \"ENTER_ROOM\",\r\n                payload: { name, type, scoreless },\r\n            });\r\n            // now dispatch opponent\r\n            if (name) {\r\n                const rivalID = name\r\n                    .split(\"_\")\r\n                    .filter(\r\n                        (playerID) =>\r\n                        playerID.toString() !== me.userID.toString()\r\n                    );\r\n                await dispatch(LoadThisPlayer(rivalID));\r\n            }\r\n        } catch (err) {\r\n            Sorry(\r\n                \"مشکلی حین بارکذاری داده های بازی پیش آمد. ممکن است اطلاعاتی که برای شما نمایش داده شده است، اشتباه باشد\"\r\n            );\r\n            console.log(\"sth went wrong while entering the room 'cause: \", err);\r\n        }\r\n    };\r\n};\r\n\r\nexport const ExitRoom = () => {\r\n    return async(dispatch) => {\r\n        await dispatch({\r\n            type: \"EXIT_ROOM\",\r\n        });\r\n        await dispatch({ type: \"RESET_OPPONENT\" });\r\n    };\r\n};\r\n\r\nexport const CleanScoreboard = () => {\r\n    return async(dispatch) => { await dispatch({ type: \"CLEAN_SCOREBOARD\" }); };\r\n};\r\n\r\nexport const UpdateScoreboard = (details) => {\r\n    return async(dispatch) => {\r\n        await dispatch({\r\n            type: \"UPDATE_SCOREBOARD\",\r\n            payload: details,\r\n        });\r\n    };\r\n};\r\n\r\nexport const RegisterMultiplayer = (gameID) => {\r\n    return async(dispatch) => {\r\n        try {\r\n            if (gameID)\r\n                await dispatch({\r\n                    type: \"REGISTER_GAME\",\r\n                    payload: { multy: true, gameID },\r\n                });\r\n        } catch (err) {\r\n            console.log(err);\r\n            await dispatch({ type: \"RESET_GAME\" });\r\n        }\r\n    };\r\n};\r\n\r\nexport const CloseOngoingGame = () => {\r\n    return async(dispatch) => {\r\n        try {\r\n\r\n            await dispatch({ type: \"RESET_GAME\" });\r\n            await dispatch({ type: \"CLEAN_SCOREBOARD\" });\r\n            await dispatch({ type: \"EXIT_ROOM\" });\r\n            await dispatch({ type: \"RESET_OPPONENT\" });\r\n        } catch (err) {\r\n            console.log(\"closing the ongoing game failed completing cause: \", err);\r\n            Notify(\"مشکلی حین بستن بازی کنونی پیش آمد.\");\r\n        }\r\n    }\r\n}\r\n\r\nexport const RegisterSinglePlayer = (dimension, scoreless, difficulty) => {\r\n    return async(dispatch) => {\r\n        try {\r\n            const { myTurn, table, empties } = T3DLogic.initiate(dimension);\r\n            await dispatch({\r\n                type: \"REGISTER_GAME\",\r\n                payload: { multy: false, dimension, scoreless, difficulty, myTurn, table, empties },\r\n            });\r\n        } catch (err) {\r\n            console.log(err);\r\n            Sorry(\"مشکلی در اجرای بازی تک نفره پیش آمد. لطفا مجددا تلاش کنید.\")\r\n        }\r\n    }\r\n}","import { Routes } from \"../configs\";\r\n\r\nimport http from \"./httpService\";\r\n\r\nconst { Server } = Routes;\r\n\r\nconst leagueServices = {\r\n    loadLeague: (leagueID) =>\r\n        http.get(\r\n            `${Server.Root}/${Server.Leagues}/${Server.LeaguesList}/${leagueID}`\r\n        ),\r\n    listLeagues: () =>\r\n        http.get(`${Server.Root}/${Server.Leagues}`),\r\n    joinLeague: (leagueID, teamID = null) =>\r\n        http.post(\r\n            `${Server.Root}/${Server.Leagues}/${Server.LeaguesList}/${leagueID}`,\r\n            JSON.stringify({ teamID })\r\n        ),\r\n    attendLeagueGame: (leagueID) =>\r\n        http.get(\r\n            `${Server.Root}/${Server.Leagues}/${Server.Attend}/${leagueID}`\r\n        ),\r\n    createLeague: (\r\n            password,\r\n            Mode,\r\n            scoreless,\r\n            dimension,\r\n            title,\r\n            capacity,\r\n            prize\r\n        ) =>\r\n        http.post(\r\n            `${Server.Root}/${Server.Leagues}/${Server.NewLeague}`,\r\n            JSON.stringify({\r\n                password,\r\n                title,\r\n                Mode,\r\n                dimension,\r\n                scoreless,\r\n                capacity,\r\n                prize,\r\n            })\r\n        ),\r\n};\r\n\r\nexport default leagueServices;","import { Sorry } from \"./../../../tools/notification\";\r\nimport leagueServices from \"./../../../services/http/leagueServices\";\r\nimport { Status } from \"../../../services/configs\";\r\n\r\nexport const EnterLeague = (leagueID) => {\r\n    return async(dispatch) => {\r\n        if (leagueID) {\r\n            try {\r\n                // check laugue object for validty(?)\r\n                const { data, status } = await leagueServices.loadLeague(\r\n                    leagueID\r\n                );\r\n                if (status === Status.Successful) {\r\n                    const { league } = data;\r\n                    if (league && league.matches) {\r\n                        // league.ongoing is a shortcut like field that translates current round of the league with sufficient data\r\n                        // this code just returns ongoing round:(last index on the league.matches list)\r\n                        league.ongoing = league.matches[\r\n                            league.matches.length - 1\r\n                        ].map((match) => {\r\n                            const playerXIndex = league.contesters.findIndex(\r\n                                (cont) => cont.userID === match.players[0]\r\n                            );\r\n                            const playerOIndex = league.contesters.findIndex(\r\n                                (cont) => cont.userID === match.players[1]\r\n                            );\r\n\r\n                            const players = [];\r\n                            [playerXIndex, playerOIndex].forEach((index) => {\r\n                                if (\r\n                                    index >= 0 &&\r\n                                    index <= league.contesters.length\r\n                                ) {\r\n                                    //index and is found and has a valid value\r\n                                    const { fullname, userID, progress } =\r\n                                    league.contesters[index];\r\n                                    players.push({ fullname, userID, progress }); //put contesters .progress into .records for ranking table\r\n                                } else {\r\n                                    players.push({\r\n                                        fullname: \"ناشناس\",\r\n                                        userID: null,\r\n                                        progress: null\r\n                                    });\r\n                                }\r\n                            });\r\n\r\n                            return { players, schedule: match.schedule };\r\n                        });\r\n                    }\r\n                    await dispatch({\r\n                        type: \"ENTER_LEAGUE\",\r\n                        payload: data.league,\r\n                    });\r\n                }\r\n            } catch (err) {\r\n                Sorry(\r\n                    \"مشکلی حین ورود به لیگ پیش آمد. لطفا وضعیت اینترنت خود را بررسی کنید.\"\r\n                );\r\n                // ... toast proper message?\r\n                await dispatch(ExitLeague());\r\n            }\r\n        } else {\r\n            // ...propere message\r\n            await dispatch(ExitLeague());\r\n        }\r\n    };\r\n};\r\n\r\nexport const ExitLeague = () => {\r\n    return async(dispatch) => {\r\n        await dispatch({ type: \"EXIT_LEAGUE\" });\r\n    };\r\n};","import { useMediaQuery } from \"react-responsive\";\r\nimport { useEffect, useState } from \"react\";\r\nimport GlobalContext from \"./GlobalContext\";\r\nimport { withRouter } from \"react-router\";\r\nimport { browserStorage, Routes } from \"../../services/configs\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { ResetMyPlayer } from \"./../redux/actions/player\";\r\nimport { CloseOngoingGame, EnterRoom } from \"./../redux/actions/game\";\r\nimport { Sorry } from \"./../../tools/notification\";\r\nimport { EnterLeague } from './../redux/actions/league';\r\nconst GlobalStates = ({ children, history }) => {\r\n\tconst isDesktop = useMediaQuery({ query: \"(min-width: 1200px)\" });\r\n\tconst isSmartPhone = useMediaQuery({ query: \"(max-width: 850px)\" });\r\n\tconst isTablet = !isDesktop && !isSmartPhone;\r\n\tconst [device, setDevice] = useState(null);\r\n\tconst dispatch = useDispatch();\r\n\r\n\tuseEffect(() => {\r\n\t\t// find device mode\r\n\t\t// array is sorted according to Configs.Devices\r\n\t\tsetDevice(\r\n\t\t\t[isDesktop, isTablet, isSmartPhone].findIndex((mode) => mode)\r\n\t\t); //return the index of the one that is true -> wich is the curret device mode\r\n\t}, [isDesktop, isTablet, isSmartPhone]);\r\n\r\n\tconst signOut = () => {\r\n\t\ttry {\r\n\t\t\tbrowserStorage.reset(); //sign out\r\n\t\t\thistory.push(Routes.Client.SignUp);\r\n\t\t\tdispatch(ResetMyPlayer());\r\n\t\t\t// edit .replace; use a function that doesnt recent BACK key on browser\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log(err);\r\n\t\t}\r\n\t};\r\n\r\n\tconst redirectToGamePlay = (room) => {\r\n\t\tdispatch(EnterRoom(room));\r\n\t\thistory.push(Routes.Client.GameDeck);\r\n\t};\r\n\r\n\tconst cancelGame = () => {\r\n\t\tdispatch(CloseOngoingGame());\r\n\t\thistory.push(Routes.Client.Root);\r\n\t\tSorry(\"بازی از سوی یکی از بازیکنان لغو شد.\");\r\n\t\tsetTimeout(() => {\r\n\t\t\thistory.push(Routes.Client.GameDeck);\r\n\t\t}, 500);\r\n\t};\r\n\r\n\tconst openLeaguePage = (leagueID) => {\r\n\t\tbrowserStorage.enter_league(leagueID);\r\n\t\tdispatch(EnterLeague(leagueID));\r\n\t\thistory.push(Routes.Client.League);\r\n\r\n\t}\r\n\tconst goTo = (destination) => {\r\n\t\thistory.push(destination);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<GlobalContext.Provider\r\n\t\t\tvalue={{ device, signOut, redirectToGamePlay, goTo, cancelGame, openLeaguePage }}>\r\n\t\t\t{children}\r\n\t\t</GlobalContext.Provider>\r\n\t);\r\n};\r\n\r\nexport default withRouter(GlobalStates);\r\n","import { NavLink } from \"react-router-dom\";\r\nimport { Button, Row } from \"react-bootstrap\";\r\nimport \"../profile.css\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Fragment, useContext } from \"react\";\r\nimport Configs from \"../../services/configs\";\r\nimport GlobalContext from './../../globals/state/GlobalContext';\r\n\r\nconst ProfilePanel = () => {\r\n    const me = useSelector((state) => state.me);\r\n    const context = useContext(GlobalContext);\r\n\r\n    return (\r\n            <Row className=\"profile-panel-sidebar d-flex flex-column flex-shrink-0\">\r\n                {/* <Button\r\n                    style={{ border: \"none\" }}\r\n                    variant=\"outline-warning\"\r\n                    className=\"d-flex align-items-center mb-3 mb-md-0 me-md-auto link-dark text-decoration-none\">\r\n                    <i className=\"fa fa-cogs px-2\" aria-hidden=\"true\"></i>\r\n                    پنل کاربری\r\n                </Button> */}\r\n                <hr />\r\n                <ul className=\"nav nav-pills flex-column mb-auto\">\r\n                    <li className=\"nav-item animated-button\">\r\n                        <NavLink\r\n                            exact\r\n                            to={Configs.Routes.Client.Profile}\r\n                            className=\"nav-link\"\r\n                            aria-current=\"page\">\r\n                            <i\r\n                                className=\"fa fa-user-o px-2\"\r\n                                aria-hidden=\"true\"></i>\r\n                            مشخصات\r\n                        </NavLink>\r\n                    </li>\r\n                    <li className=\"animated-button\" >\r\n                        <NavLink\r\n                            className=\"nav-link link-dark\"\r\n                            to={Configs.Routes.Client.MyGamesAndFriends}>\r\n                            <i\r\n                                className=\"fa fa-users px-2\"\r\n                                aria-hidden=\"true\"></i>\r\n                            دوستان و بازی ها\r\n                        </NavLink>\r\n                    </li>\r\n                    <li className=\"animated-button\" >\r\n                        <NavLink\r\n                            className=\"nav-link link-dark\"\r\n                            to={Configs.Routes.Client.ChatRoom}>\r\n                            <i\r\n                                className=\"fa fa-comment px-2\"\r\n                                aria-hidden=\"true\"></i>\r\n                            چت روم\r\n                        </NavLink>\r\n                    </li>\r\n                    <hr />\r\n                    {me && me.isAdmin && (\r\n                        <Fragment>\r\n                            {/* admin tools */}\r\n                            <li className=\"animated-button\" > \r\n                                <NavLink\r\n                                    className=\"nav-link link-dark border-top\"\r\n                                    to={Configs.Routes.Client.Notices}>\r\n                                    <i\r\n                                        className=\"fa fa-newspaper-o px-2\"\r\n                                        aria-hidden=\"true\"></i>\r\n                                    اطلاعیه ها\r\n                                </NavLink>\r\n                            </li>\r\n                            <li className=\"animated-button\" >\r\n                                <NavLink\r\n                                    className=\"nav-link link-dark\"\r\n                                    to={Configs.Routes.Client.StudentManagement}>\r\n                                    مدیریت دانشجویان\r\n                                </NavLink>\r\n                            </li>\r\n                            <li className=\"animated-button\" >\r\n                                <NavLink\r\n                                    className=\"nav-link link-dark\"\r\n                                    to={Configs.Routes.Client.LeaguesManager}>\r\n                                    لیگ منیجر\r\n                                </NavLink>\r\n                            </li>\r\n                            <li className=\"animated-button\" >\r\n                                <NavLink\r\n                                    className=\"nav-link link-dark\"\r\n                                    to={Configs.Routes.Client.Documents}>\r\n                                    توضیحات سایت\r\n                                </NavLink>\r\n                            </li>\r\n                        </Fragment>\r\n                    )}\r\n                </ul>\r\n                <hr />\r\n                <Button variant=\"outline-danger\" className=\"animated-button\" onClick={context.signOut}>\r\n                    <i className=\"fa fa-sign-out px-2\" aria-hidden=\"true\"></i>\r\n                    خروج از حساب کاربری\r\n                </Button>\r\n            </Row>\r\n    );\r\n};\r\n\r\nexport default ProfilePanel;\r\n","import { NavLink } from \"react-router-dom\";\r\nimport { Button, Navbar } from \"react-bootstrap\";\r\nimport \"../profile.css\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Fragment, useContext } from \"react\";\r\nimport Configs from \"../../services/configs\";\r\nimport GlobalContext from \"../../globals/state/GlobalContext\";\r\n\r\nconst CollapsedPanel = () => {\r\n\tconst me = useSelector((state) => state.me);\r\n\tconst context = useContext(GlobalContext);\r\n\treturn (\r\n\t\t<Navbar\r\n\t\t\tbg=\"transparent\"\r\n\t\t\tstyle={{ border: \"1px solid grey\", borderRadius: \"5px\" }}\r\n\t\t\tclassName=\"justify-content-center p-2 mt-2 nav-pills text-right w-100\">\r\n\t\t\t<NavLink\r\n\t\t\t\tactiveClassName=\"btn btn-primary\"\r\n\t\t\t\texact\r\n\t\t\t\tto={Configs.Routes.Client.Profile}\r\n\t\t\t\tclassName=\"nav-link mx-1\"\r\n\t\t\t\taria-current=\"page\">\r\n\t\t\t\t<i className=\"fa fa-user-o\" aria-hidden=\"true\"></i>\r\n\t\t\t</NavLink>\r\n\t\t\t<NavLink\r\n\t\t\t\tactiveClassName=\"btn btn-primary\"\r\n\t\t\t\tclassName=\"nav-link mx-1\"\r\n\t\t\t\tto={Configs.Routes.Client.MyGamesAndFriends}>\r\n\t\t\t\t<i className=\"fa fa-users\" aria-hidden=\"true\"></i>\r\n\t\t\t</NavLink>\r\n\t\t\t<NavLink\r\n\t\t\t\tactiveClassName=\"btn btn-primary\"\r\n\t\t\t\tclassName=\"nav-link mx-1\"\r\n\t\t\t\tto={Configs.Routes.Client.ChatRoom}>\r\n\t\t\t\t<i className=\"fa fa-weixin\" aria-hidden=\"true\"></i>\r\n\t\t\t</NavLink>\r\n\r\n\t\t\t{me && me.isAdmin && (\r\n\t\t\t\t<Fragment>\r\n\t\t\t\t\t{/* admin tools */}\r\n\t\t\t\t\t<NavLink\r\n\t\t\t\t\t\tactiveClassName=\"btn btn-primary\"\r\n\t\t\t\t\t\tclassName=\"nav-link mx-1 border-top\"\r\n\t\t\t\t\t\tto={Configs.Routes.Client.Notices}>\r\n\t\t\t\t\t\t<i className=\"fa fa-newspaper-o\" aria-hidden=\"true\"></i>\r\n\t\t\t\t\t</NavLink>\r\n\t\t\t\t\t<NavLink\r\n\t\t\t\t\t\tclassName=\"nav-link link-dark\"\r\n\t\t\t\t\t\tto={Configs.Routes.Client.StudentManagement}>\r\n\t\t\t\t\t\t<i className=\"fa fa-cogs\" aria-hidden=\"true\"></i>\r\n\t\t\t\t\t</NavLink>\r\n\t\t\t\t\t<NavLink\r\n\t\t\t\t\t\tclassName=\"nav-link link-dark\"\r\n\t\t\t\t\t\tto={Configs.Routes.Client.LeaguesManager}>\r\n\t\t\t\t\t\tلیگ منیجر\r\n\t\t\t\t\t</NavLink>\r\n\r\n\t\t\t\t\t<NavLink\r\n\t\t\t\t\t\tclassName=\"nav-link link-dark\"\r\n\t\t\t\t\t\tto={Configs.Routes.Client.Documents}>\r\n\t\t\t\t\t\t<i className=\"fa fa-cogs\" aria-hidden=\"true\"></i>\r\n\t\t\t\t\t</NavLink>\r\n\t\t\t\t</Fragment>\r\n\t\t\t)}\r\n\r\n\t\t\t<Button\r\n\t\t\t\tvariant=\"outline-danger\"\r\n\t\t\t\tclassName=\"mx-3\"\r\n\t\t\t\tonClick={context.signOut}>\r\n\t\t\t\t<i className=\"fa fa-sign-out\" aria-hidden=\"true\"></i>\r\n\t\t\t</Button>\r\n\t\t</Navbar>\r\n\t);\r\n};\r\n\r\nexport default CollapsedPanel;\r\n","import { useDispatch } from \"react-redux\";\r\nimport { browserStorage } from \"../services/configs\";\r\nimport { useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { LoadMyPlayer } from \"../globals/redux/actions/player\";\r\nimport { ResetMyPlayer } from \"./../globals/redux/actions/player\";\r\n\r\n// auto-sign in if store sign in data was reset\r\nconst AutoSignIn = () => {\r\n\tconst dispatch = useDispatch();\r\n\tconst opponent = useSelector((state) => state.opponent); //this is just to add opponent to useEffect dependencies\r\n\t// tis way, every time player game ends ( opponent resets ), player records will update\r\n\tconst storageToken = browserStorage.TOKEN();\r\n\tuseEffect(() => {\r\n\t\ttry {\r\n\t\t\t(async () => {\r\n\t\t\t\tif (storageToken) {\r\n\t\t\t\t\tawait dispatch(LoadMyPlayer());\r\n\t\t\t\t} else {\r\n\t\t\t\t\tawait dispatch(ResetMyPlayer());\r\n\t\t\t\t}\r\n\t\t\t})();\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log(err);\r\n\t\t}\r\n\t}, [storageToken, opponent, dispatch]);\r\n\r\n\treturn null;\r\n};\r\n\r\nexport default AutoSignIn;\r\n","import { Routes } from '../configs';\r\n\r\nimport http from \"./httpService\";\r\n\r\nconst {Server} = Routes;\r\n\r\nconst chatServices = {\r\n    \r\n    getOurChat: (friendID) => {\r\n        return http.get(`${Server.Root}/${Server.Chats}/${Server.SingleChat}/${friendID}`);\r\n    },\r\n    getMyInteractions: () => {\r\n        return http.get(`${Server.Root}/${Server.Chats}/${Server.Interactions}`);\r\n    }\r\n};\r\n\r\nexport default chatServices;","import { Status } from \"../../../services/configs\";\r\nimport chatServices from \"../../../services/http/chatServices\";\r\nimport { Sorry } from \"../../../tools/notification\";\r\n\r\n// chats and friends\r\nexport const LoadInteractions = () => {\r\n\treturn async (dispatch) => {\r\n\t\ttry {\r\n\t\t\tvar myInteractions = [];\r\n\t\t\tconst { status, data } = await chatServices.getMyInteractions();\r\n\t\t\tif (status === Status.Successful) {\r\n\t\t\t\tconst { interactions } = data;\r\n\t\t\t\tif (interactions instanceof Array) {\r\n\t\t\t\t\t//interactions catched from server side, but it requires modification: sorting, formatting messages\r\n\t\t\t\t\tinteractions.forEach((interact) => {\r\n\t\t\t\t\t\t// reformat clients chats in his/her own viewpoint\r\n\t\t\t\t\t\tconst { friend, messages, ownerOf } = interact;\r\n\t\t\t\t\t\tmyInteractions.push({\r\n\t\t\t\t\t\t\twith: friend,\r\n\t\t\t\t\t\t\tmessages: messages.map((msg) =>\r\n\t\t\t\t\t\t\t\townerOf === msg.owner\r\n\t\t\t\t\t\t\t\t\t? {\r\n\t\t\t\t\t\t\t\t\t\t\tme: msg.text,\r\n\t\t\t\t\t\t\t\t\t\t\tfriend: null,\r\n\t\t\t\t\t\t\t\t\t\t\tdate: msg.date,\r\n\t\t\t\t\t\t\t\t\t  }\r\n\t\t\t\t\t\t\t\t\t: {\r\n\t\t\t\t\t\t\t\t\t\t\tme: null,\r\n\t\t\t\t\t\t\t\t\t\t\tfriend: msg.text,\r\n\t\t\t\t\t\t\t\t\t\t\tdate: msg.date,\r\n\t\t\t\t\t\t\t\t\t  }\r\n\t\t\t\t\t\t\t),\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t});\r\n\t\t\t\t\tawait dispatch({\r\n\t\t\t\t\t\ttype: \"LOAD_INTERACTIONS\",\r\n\t\t\t\t\t\tpayload: myInteractions,\r\n\t\t\t\t\t});\r\n\t\t\t\t\t// dispatch friends here\r\n\t\t\t\t\t// myChats key-value array: its keys are friendID that is relative to a special chat\r\n\t\t\t\t} else\r\n\t\t\t\t\tthrow new Error(\r\n\t\t\t\t\t\t\"null interaction response! means sth went wrong\"\r\n\t\t\t\t\t);\r\n\t\t\t} else throw new Error(\"Error happened while forming chats list\");\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log(\r\n\t\t\t\t`Loading chats interrupted cause of this error: ${err}`\r\n\t\t\t);\r\n\t\t\t//show proper message\r\n\t\t\tif (!Status.isErrorExpected(err))\r\n\t\t\t\tSorry(\r\n\t\t\t\t\t\"حین بارگذاری پیام ها مشکلی پیش آمد. لطفا لحظاتی بعد دوباره تلاش کنید\"\r\n\t\t\t\t);\r\n\t\t\tawait dispatch({ type: \"RESET_INTERACTIONS\" });\r\n\t\t}\r\n\t};\r\n};\r\n\r\n// export const ExtractFriends = () => {\r\n// \treturn async (dispatch, getState) => {\r\n// \t\tconst interactions = getState().interactions;\r\n// \t\tconst friends = Interactions\r\n// \t}\r\n// }\r\nexport const UpdateMyChatList = (name, friendID, text, { sent, recieved }) => {\r\n\t// one time u load from server, then new messages are simply pushed to previous data\r\n\treturn async (dispatch, getState) => {\r\n\t\ttry {\r\n\t\t\tconst myinteractions = getState().interactions;\r\n\t\t\tmyinteractions\r\n\t\t\t\t.find((interact) => interact.with.userID === friendID)\r\n\t\t\t\t.messages.push({\r\n\t\t\t\t\tname: name, //is name needed?\r\n\t\t\t\t\tme: sent ? text : null,\r\n\t\t\t\t\tfriend: recieved ? text : null,\r\n\t\t\t\t\tdate: new Date(),\r\n\t\t\t\t});\r\n\r\n\t\t\tawait dispatch({\r\n\t\t\t\ttype: \"LOAD_INTERACTIONS\",\r\n\t\t\t\tpayload: myinteractions,\r\n\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log(err);\r\n\t\t\t//..propeer message\r\n\t\t\t// ...reset?\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const ResetInteractions = () => {\r\n\treturn async (dispatch) => {\r\n\t\tawait dispatch({ type: \"RESET_INTERACTIONS\" });\r\n\t};\r\n};\r\n","import { Fragment, useLayoutEffect, useState, useEffect } from \"react\";\r\nimport { Planets, Circle2, Sugar } from \"react-preloaders2\";\r\n\r\nconst LoadingBar = ({ loading }) => {\r\n    const [whichOne, setWhichOne] = useState(0);\r\n    useEffect(() => {\r\n        setWhichOne(Math.floor(Math.random() * 100)); //randomize animation\r\n    }, []);\r\n    useLayoutEffect(() => {\r\n        document.body.style = { overflowY: \"auto\" };\r\n        document.body.style = { height: \"auto\" };\r\n    }, [loading, whichOne]); //may have bug yet!!\r\n    //random animation\r\n    const selectedLoader =\r\n        whichOne % 3 === 0 ? (\r\n            <Circle2 time={0} customLoading={loading} />\r\n        ) : whichOne % 3 === 1 ? (\r\n            <Planets time={0} customLoading={loading} />\r\n        ) : (\r\n            <Sugar time={0} customLoading={loading} />\r\n        );\r\n\r\n    return <Fragment>{loading ? selectedLoader : null}</Fragment>;\r\n};\r\n\r\nexport default LoadingBar;\r\n","import { Fragment, useContext, useEffect, useState } from \"react\";\r\nimport { Devices } from \"../services/configs\";\r\nimport ProfilePanel from \"../profile/panel/ProfilePanel\";\r\nimport CollapsedPanel from \"../profile/panel/CollapsedPanel\";\r\nimport { Col, Row } from \"react-bootstrap\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport AutoSignIn from \"../users/AutoSignIn\";\r\nimport GlobalContext from \"../globals/state/GlobalContext\";\r\nimport {\r\n\tLoadInteractions,\r\n\tResetInteractions,\r\n} from \"../globals/redux/actions/interactions\";\r\nimport { LoadMyPlayer } from \"../globals/redux/actions/player\";\r\nimport LoadingBar from \"../commons/LoadingBar\";\r\n\r\nconst ProfilePanelLayout = ({ children }) => {\r\n\tconst context = useContext(GlobalContext);\r\n\tconst [loading, setLoading] = useState(false);\r\n\tconst dispatch = useDispatch();\r\n\r\n\tuseEffect(() => {\r\n\t\t// this form of dispatching is used to support preloaders\r\n\t\t(async () => {\r\n\t\t\ttry {\r\n\t\t\t\tsetLoading(true);\r\n\t\t\t\tawait dispatch(LoadMyPlayer());\r\n\t\t\t\tawait dispatch(LoadInteractions());\r\n\t\t\t\t// profile unmounted\r\n\t\t\t} catch (err) {\r\n\t\t\t\tsetLoading(false);\r\n\t\t\t}\r\n\t\t\tsetLoading(false);\r\n\t\t})();\r\n\r\n\t\treturn () => {\r\n\t\t\t// remove chat list from redux to save memory\r\n\t\t\tdispatch(ResetInteractions());\r\n\t\t};\r\n\t}, [dispatch]);\r\n\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t<LoadingBar loading={loading} />\r\n\t\t\t<AutoSignIn />\r\n\t\t\t{context.device === Devices.Desktop ? (\r\n\t\t\t\t<Row className=\"w-100 mx-auto\">\r\n\t\t\t\t\t<Col lg={3}>\r\n\t\t\t\t\t\t<ProfilePanel />\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col lg={9}>{children}</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t) : (\r\n\t\t\t\t<Row className=\"w-100 mx-auto\">\r\n\t\t\t\t\t<Col className=\"mx-auto\" sm={12}>\r\n\t\t\t\t\t\t<CollapsedPanel />\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col sm={12}>{children}</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t)}\r\n\t\t</Fragment>\r\n\t);\r\n};\r\n\r\nexport default ProfilePanelLayout;\r\n","import { Routes } from \"../configs\";\r\n\r\nimport http from \"./httpService\";\r\n\r\nconst { Server } = Routes;\r\n\r\nconst gameServices = {\r\n    getAllGames: () => http.get(`${Server.Root}/${Server.Games}`),\r\n    getMyGames: () => http.get(`${Server.Root}/${Server.Games}/${Server.Mine}`),\r\n};\r\n\r\nexport default gameServices;","import { Card } from 'react-bootstrap';\r\nconst NoItems = ({children}) => {\r\n\treturn (\r\n\t\t<Card className=\"bg-transparent mx-auto mt-3\" border=\"danger\">\r\n\t\t\t<Card.Body className=\"text-center\">\r\n\t\t\t\t<Card.Text>{children}.</Card.Text>\r\n\t\t\t</Card.Body>\r\n\t\t</Card>\r\n\t);\r\n};\r\n\r\nexport default NoItems;\r\n","import DateObject from \"react-date-object\";\r\nimport persian from \"react-date-object/calendars/persian\";\r\nimport persian_fa from \"react-date-object/locales/persian_fa\";\r\n\r\nconst objectify = (date) => {\r\n    return new DateObject({\r\n\t\tdate: new Date(date),\r\n\t\tcalendar: persian,\r\n\t\tlocale: persian_fa,\r\n\t});\r\n}\r\nexport const toHijri = (date) => {\r\n\treturn [\r\n\t\tobjectify(date).format(\"dddd DD MMMM YYYY\"),\r\n\t\tobjectify(date).format(\"hh:mm\"),\r\n\t];\r\n};\r\n\r\nexport const toTimeShort = (date) => {\r\n\treturn objectify(date).format(\"hh:mm\");\r\n};\r\n","import { Button, Card, Container, Row } from \"react-bootstrap\";\r\nimport \"./scores.css\";\r\nimport { useEffect, useState, useContext } from \"react\";\r\nimport { toHijri } from \"../../tools/format\";\r\nimport GlobalContext from \"./../../globals/state/GlobalContext\";\r\nimport { Devices } from \"../../services/configs\";\r\n\r\nconst SingleScoreCard = ({\r\n\tType,\r\n\tdate,\r\n\tplayerXName,\r\n\tplayerOName,\r\n\txScore,\r\n\toScore,\r\n}) => {\r\n\t// format score text:\r\n\tconst [xBadge, setXBadge] = useState(null);\r\n\tconst [oBadge, setOBadge] = useState(null);\r\n\tconst [hijriDate, setHijriDate] = useState(null);\r\n\tconst context = useContext(GlobalContext);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetHijriDate(toHijri(date)[0]); //toHijri = [date, time]\r\n\t\tif (xScore > oScore) {\r\n\t\t\t// x won\r\n\t\t\tsetXBadge(\"badge-success\");\r\n\t\t\tsetOBadge(\"badge-danger\");\r\n\t\t} else if (xScore === oScore) {\r\n\t\t\t//draw\r\n\t\t\tsetXBadge(\"badge-warning\");\r\n\t\t\tsetOBadge(\"badge-warning\");\r\n\t\t} else {\r\n\t\t\t// o won\r\n\t\t\tsetOBadge(\"badge-success\");\r\n\t\t\tsetXBadge(\"badge-danger\");\r\n\t\t}\r\n\t}, [date, xScore, oScore]);\r\n\t// make this card 'bg-transparent' too?\r\n\treturn (\r\n\t\t<Card border=\"dark\" className=\"single-score-card\">\r\n\t\t\t{/* <Card.Header className=\"text-center border-dark\">{`T3D ${Type}x${Type}x${Type}`}</Card.Header> */}\r\n\t\t\t<Card.Body>\r\n\t\t\t\t<Row className=\"text-center mx-auto\">\r\n\t\t\t\t\t{context.device !== Devices.SmartPhone ? (\r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t<span className=\"col-lg-5 col-md-5\">\r\n\t\t\t\t\t\t\t\t{playerXName}\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\tclassName={`badge badge-pill ${xBadge} single-score-badge col-lg-1 col-md-1`}>\r\n\t\t\t\t\t\t\t\t{xScore}\r\n\t\t\t\t\t\t\t</span>\r\n\r\n\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\tclassName={`badge badge-pill ${oBadge} single-score-badge col-lg-1 col-md-1`}>\r\n\t\t\t\t\t\t\t\t{oScore}\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t<span className=\"col-lg-5 col-md-5\">\r\n\t\t\t\t\t\t\t\t{playerOName}\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<Container>\r\n\t\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t\t<span className=\"col-10 text-right\">{playerXName}</span>\r\n\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\tclassName={`badge badge-pill ${xBadge} single-score-badge col-2`}>\r\n\t\t\t\t\t\t\t\t\t{xScore}\r\n\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t</Row>\r\n                            <hr />\r\n\t\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t\t<span className=\"col-10 text-right\">\r\n\t\t\t\t\t\t\t\t\t{playerOName}\r\n\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\tclassName={`badge badge-pill ${oBadge} single-score-badge col-2`}>\r\n\t\t\t\t\t\t\t\t\t{oScore}\r\n\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t</Container>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</Row>\r\n\t\t\t</Card.Body>\r\n\t\t\t<Card.Footer className=\"p-0\">\r\n\t\t\t\t<Button\r\n\t\t\t\t\tvariant=\"outline-dark\"\r\n\t\t\t\t\tblock\r\n\t\t\t\t\tdisabled\r\n\t\t\t\t\tsize=\"lg\"\r\n\t\t\t\t\tclassName=\"replay-game-button\">\r\n\t\t\t\t\t{hijriDate}\r\n\t\t\t\t\t<i className=\"fa fa-pie-chart px-3\" aria-hidden=\"true\"></i>\r\n\t\t\t\t</Button>\r\n\t\t\t</Card.Footer>\r\n\t\t</Card>\r\n\t);\r\n};\r\n\r\nexport default SingleScoreCard;\r\n","import { Fragment } from \"react\";\r\nimport NoItems from \"../../commons/NoItems\";\r\nimport SingleScoreCard from \"./SingleScoreCard\";\r\n\r\nconst ScoresTable = ({ scores }) => {\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t{scores.length ? (\r\n\t\t\t\tscores.map((score) => (\r\n\t\t\t\t\t<SingleScoreCard\r\n\t\t\t\t\t\tkey={score.gameID}\r\n\t\t\t\t\t\tType={score.Type}\r\n\t\t\t\t\t\tdate={score.date}\r\n\t\t\t\t\t\tplayerXName={score.players[0].name}\r\n\t\t\t\t\t\tplayerOName={score.players[1].name}\r\n\t\t\t\t\t\txScore={score.players[0].score}\r\n\t\t\t\t\t\toScore={score.players[1].score}></SingleScoreCard>\r\n\t\t\t\t))\r\n\t\t\t) : (\r\n\t\t\t\t<NoItems>هیچ بازی ای انجام نگرفته است</NoItems>\r\n\t\t\t)}\r\n\t\t</Fragment>\r\n\t);\r\n};\r\n\r\nexport default ScoresTable;\r\n","\r\nimport { Card, Col, ListGroup, Row } from 'react-bootstrap';\r\nimport { Badge } from 'react-bootstrap';\r\nimport '../profile.css';\r\n\r\nconst Record = ({children,title, small}) => {\r\n    return (\r\n        <ListGroup.Item className=\"h-100 bg-transparent\">\r\n            <Row className={!small && \"h-100 py-2\"}>\r\n                <Col className=\"text-right\">\r\n                    <Card.Text>{title}</Card.Text>\r\n                </Col>\r\n                <Col className={small ? \"text-left\" : \"text-center\"}>\r\n                    <Badge\r\n                        className=\"friend-badge-font-size\"\r\n                        pill\r\n                        variant=\"primary\">\r\n                        {children}\r\n                    </Badge>\r\n                </Col>\r\n            </Row>\r\n        </ListGroup.Item>\r\n    );\r\n};\r\n\r\nexport default Record;\r\n","import { GameSetting } from \"../../../services/configs\";\r\n\r\nexport const RepeatRandomSearch = () => {\r\n    return async(dispatch, getState) => {\r\n        const tools = {...(getState().tools) };\r\n        tools.randomSearchRepeats = (tools.randomSearchRepeats + 1) % GameSetting.RandomSearchRepeatLimit;\r\n        // randomSearchRepeats === 0 => means nor search is not happening or its happening and has reached to maximum allowed retries\r\n        await dispatch({ type: \"UPDATE_TOOLS\", payload: tools });\r\n    };\r\n};\r\n\r\nexport const CloseRandomSearch = () => {\r\n    return async(dispatch, getState) => {\r\n        const tools = {...(getState().tools) };\r\n        tools.randomSearchRepeats = 0;\r\n        await dispatch({ type: \"UPDATE_TOOLS\", payload: tools });\r\n    };\r\n};\r\n\r\nexport const SendFriendRequestTo = (targetID) => {\r\n    return async(dispatch, getState) => {\r\n        const tools = {...(getState().tools) };\r\n        tools.friendRequestTarget = targetID;\r\n        await dispatch({ type: \"UPDATE_TOOLS\", payload: tools });\r\n    };\r\n};\r\n\r\nexport const EndFriendRequest = () => {\r\n    return async(dispatch, getState) => {\r\n        const tools = {...(getState().tools) };\r\n        tools.friendRequestTarget = null;\r\n        await dispatch({ type: \"UPDATE_TOOLS\", payload: tools });\r\n    };\r\n};\r\n\r\nexport const InviteToFriendlyGame = (targetID, gameType) => {\r\n    return async(dispatch, getState) => {\r\n        const tools = {...(getState().tools) };\r\n        tools.friendlyGameTarget = { targetID, type: gameType };\r\n        await dispatch({ type: \"UPDATE_TOOLS\", payload: tools });\r\n    };\r\n};\r\n\r\nexport const EndFriendlyInvitation = () => {\r\n    return async(dispatch, getState) => {\r\n        const tools = {...(getState().tools) };\r\n        tools.friendlyGameTarget = null;\r\n        await dispatch({ type: \"UPDATE_TOOLS\", payload: tools });\r\n    };\r\n};\r\n\r\nexport const RecieveGameInvitation = (ID, name, gameType) => {\r\n    return async(dispatch, getState) => {\r\n        const tools = {...(getState().tools) };\r\n        tools.gameInvitation = { ID, name, type: gameType };\r\n        await dispatch({ type: \"UPDATE_TOOLS\", payload: tools });\r\n    };\r\n};\r\n\r\nexport const RejectGameInvitation = () => {\r\n    return async(dispatch, getState) => {\r\n        const tools = {...(getState().tools) };\r\n        tools.gameInvitation = null;\r\n        await dispatch({ type: \"UPDATE_TOOLS\", payload: tools });\r\n    };\r\n};\r\n\r\nexport const AcceptInvitation = (inviterID, gameType) => {\r\n    return async(dispatch, getState) => {\r\n        const tools = {...(getState().tools) };\r\n        tools.acceptedGame = { inviterID, type: gameType };\r\n        tools.gameInvitation = null;\r\n        await dispatch({ type: \"UPDATE_TOOLS\", payload: tools });\r\n    };\r\n};\r\n\r\nexport const EmptyGameInvitations = () => {\r\n    return async(dispatch, getState) => {\r\n        const tools = {...(getState().tools) };\r\n        tools.friendlyGameTarget = null;\r\n        tools.acceptedGame = null;\r\n        tools.gameInvitation = null;\r\n        await dispatch({ type: \"UPDATE_TOOLS\", payload: tools });\r\n    };\r\n}\r\nexport const ReloadRecords = () => {\r\n    return async(dispatch, getState) => {\r\n        const tools = {...(getState().tools) };\r\n        tools.recordReloadTrigger = !tools.reloadTrigger;\r\n        await dispatch({ type: \"UPDATE_TOOLS\", payload: tools });\r\n    };\r\n};","import {\r\n\tButton,\r\n\tCard,\r\n\tCol,\r\n\tListGroup,\r\n\tRow,\r\n\tInputGroup,\r\n\tImage,\r\n} from \"react-bootstrap\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport \"../profile.css\";\r\nimport Record from \"./Record\";\r\nimport { Sorry } from \"./../../tools/notification\";\r\nimport { useState, useEffect } from \"react\";\r\nimport userServices from \"./../../services/http/userServices\";\r\nimport {\r\n\tEndFriendlyInvitation,\r\n\tInviteToFriendlyGame,\r\n} from \"../../globals/redux/actions/tools\";\r\nimport { Status } from \"../../services/configs\";\r\nconst FriendRecords = ({ person, thisIsMe }) => {\r\n\tconst room = useSelector((state) => state.room);\r\n\tconst [gameType, setGameType] = useState(4);\r\n\tconst [avatar, setAvatar] = useState(null); //s\r\n\tconst dispatch = useDispatch();\r\n\r\n\tuseEffect(() => {\r\n\t\tif (person) {\r\n\t\t\t(async () => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tconst { data, status } = await userServices.getAvatar(\r\n\t\t\t\t\t\tperson.userID\r\n\t\t\t\t\t);\r\n\t\t\t\t\tif (status === Status.Successful) setAvatar(data.avatar);\r\n\t\t\t\t} catch (err) {\r\n\t\t\t\t\tif (!Status.isErrorExpected(err))\r\n\t\t\t\t\t\tSorry(\r\n\t\t\t\t\t\t\t\"مشکلی در بارگذاری آواتار این شخص پیش آمد ... لطفا اتصال اینترنت خود را بررسی کنید.\"\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t// use- no-avatar.png here too?\r\n\t\t\t\t\t// in case server return wrong?\r\n\t\t\t\t}\r\n\t\t\t})();\r\n\t\t}\r\n\t}, [person]);\r\n\tconst onInviteToGameClick = () => {\r\n\t\tif (!room.type && !room.type && !thisIsMe) {\r\n\t\t\t//if you want to enable players play multiple games then remove this\r\n\t\t\t// if player isnt still in a game\r\n\t\t\t//check room info?\r\n\t\t\tdispatch(InviteToFriendlyGame(person.userID, gameType));\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\t//Notify('دوست مورد نظر درخواست شما را نپذیرفت')\r\n\t\t\t\tdispatch(EndFriendlyInvitation());\r\n\t\t\t}, 10000);\r\n\t\t} else {\r\n\t\t\tSorry(\"برای شروع بازی جدید، باید بازی قبلی شما به اتمام برسد\");\r\n\t\t}\r\n\t};\r\n\tconst { records } = person;\r\n\r\n\treturn (\r\n\t\t<Card border=\"success\" bg=\"transparent\" className=\"friend-records\">\r\n\t\t\t<Card.Body>\r\n\t\t\t\t<Row className=\"w-100 p-0 mx-auto\">\r\n\t\t\t\t\t{/* <hr /> */}\r\n\t\t\t\t\t<Col\r\n\t\t\t\t\t\tsm={12}\r\n\t\t\t\t\t\tmd={12}\r\n\t\t\t\t\t\tlg={3}\r\n\t\t\t\t\t\tclassName=\"text-center mx-auuto\">\r\n\t\t\t\t\t\t<Image\r\n\t\t\t\t\t\t\tclassName=\"friends-section-avatar\"\r\n\t\t\t\t\t\t\tsrc={avatar}\r\n\t\t\t\t\t\t\talt=\"خطا\"\r\n\t\t\t\t\t\t\troundedCircle\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col sm={12} md={12} lg={9}>\r\n\t\t\t\t\t\t<ListGroup className=\"list-group list-group-flush\">\r\n\t\t\t\t\t\t\t<Row className=\"h-100\">\r\n\t\t\t\t\t\t\t\t<Col className=\"p-0 h-100 w-100\">\r\n\t\t\t\t\t\t\t\t\t<Record title=\"امتیاز بازیکن\">\r\n\t\t\t\t\t\t\t\t\t\t{records.points}\r\n\t\t\t\t\t\t\t\t\t</Record>\r\n\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t<Col className=\"p-0 h-100 w-100\">\r\n\t\t\t\t\t\t\t\t\t<Record title=\"تعداد بردها\">\r\n\t\t\t\t\t\t\t\t\t\t{records.wins}\r\n\t\t\t\t\t\t\t\t\t</Record>\r\n\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t\t<Row className=\"h-100\">\r\n\t\t\t\t\t\t\t\t<Col className=\"p-0 h-100 w-100\">\r\n\t\t\t\t\t\t\t\t\t<Record title=\"تعداد تساوی\">\r\n\t\t\t\t\t\t\t\t\t\t{records.draws}\r\n\t\t\t\t\t\t\t\t\t</Record>\r\n\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t<Col className=\"p-0 h-100 w-100\">\r\n\t\t\t\t\t\t\t\t\t<Record title=\"تعداد باختها\">\r\n\t\t\t\t\t\t\t\t\t\t{records.loses}\r\n\t\t\t\t\t\t\t\t\t</Record>\r\n\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t</ListGroup>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t</Card.Body>\r\n\t\t\t{!thisIsMe && person && (\r\n\t\t\t\t<Card.Footer>\r\n\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t<Col sm={4} xs={12}>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tvariant=\"secondary\"\r\n\t\t\t\t\t\t\t\tblock\r\n\t\t\t\t\t\t\t\tonClick={onInviteToGameClick}>\r\n\t\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\t\tclassName=\"fa fa-handshake-o px-2\"\r\n\t\t\t\t\t\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t\t\t\t\t\t\tدرخواست بازی\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t<Col sm={8} xs={12}>\r\n\t\t\t\t\t\t\t<InputGroup>\r\n\t\t\t\t\t\t\t\t<InputGroup.Prepend>\r\n\t\t\t\t\t\t\t\t\t<InputGroup.Radio\r\n\t\t\t\t\t\t\t\t\t\tvalue={3}\r\n\t\t\t\t\t\t\t\t\t\tname=\"dimension\"\r\n\t\t\t\t\t\t\t\t\t\tonChange={() => setGameType(3)}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<InputGroup.Text>3 * 3 * 3</InputGroup.Text>\r\n\t\t\t\t\t\t\t\t</InputGroup.Prepend>\r\n\t\t\t\t\t\t\t\t<InputGroup.Prepend>\r\n\t\t\t\t\t\t\t\t\t<InputGroup.Radio\r\n\t\t\t\t\t\t\t\t\t\tvalue={4}\r\n\t\t\t\t\t\t\t\t\t\tname=\"dimension\"\r\n\t\t\t\t\t\t\t\t\t\tonChange={() => setGameType(4)}\r\n\t\t\t\t\t\t\t\t\t\tdefaultChecked\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<InputGroup.Text>4 * 4 * 4</InputGroup.Text>\r\n\t\t\t\t\t\t\t\t</InputGroup.Prepend>\r\n\t\t\t\t\t\t\t\t<InputGroup.Prepend>\r\n\t\t\t\t\t\t\t\t\t<InputGroup.Radio\r\n\t\t\t\t\t\t\t\t\t\tvalue={5}\r\n\t\t\t\t\t\t\t\t\t\tname=\"dimension\"\r\n\t\t\t\t\t\t\t\t\t\tonChange={() => setGameType(5)}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<InputGroup.Text>5 * 5 * 5</InputGroup.Text>\r\n\t\t\t\t\t\t\t\t</InputGroup.Prepend>\r\n\t\t\t\t\t\t\t</InputGroup>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t</Card.Footer>\r\n\t\t\t)}\r\n\t\t</Card>\r\n\t);\r\n};\r\n\r\nexport default FriendRecords;\r\n","import { useState, useEffect } from \"react\";\r\nimport LoadingBar from \"../../commons/LoadingBar\";\r\nimport Configs, { Status } from \"../../services/configs\";\r\nimport gameServices from \"../../services/http/gameServices\";\r\nimport { Card, Col, Nav, Row, Tab } from \"react-bootstrap\";\r\nimport ScoresTable from \"../../tables/scores/ScoresTable\";\r\nimport \"../profile.css\";\r\nimport FriendRecords from \"./FriendRecords\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Sorry } from \"../../tools/notification\";\r\n\r\nconst MyGamesAndFriends = () => {\r\n\tconst me = useSelector((state) => state.me);\r\n\tconst [loading, setLoading] = useState(false);\r\n\tconst [myGames, setMyGames] = useState([]);\r\n\tconst [filterID, setFilterID] = useState(\"me\");\r\n\tconst [selectedFriendIndex, setSelectedFriendIndex] = useState(-1);\r\n\tconst [friends, setFriends] = useState([]);\r\n\tconst [friendsCount, setFriendsCount] = useState(0);\r\n\tconst interactions = useSelector((state) => state.interactions); //.map((interact) => interact.with)\r\n\r\n\tuseEffect(() => {\r\n\t\tif (friendsCount !== interactions.length) {\r\n\t\t\t//thsi if checks whether change made in interaction is friend/unfriend operation or not\r\n\t\t\t//otherwise, every new message sent or recieved cause a new .map calling!\r\n\r\n\t\t\t// const temp = interactions;\r\n\t\t\t// const sorted = temp.sort((f1, f2) => f2.name - f1.name);\r\n\t\t\tsetFriends(interactions.map((interact) => interact.with));\r\n\t\t\tsetFriendsCount(interactions.length);\r\n\t\t}\r\n\t}, [interactions, friendsCount]);\r\n\r\n\tuseEffect(() => {\r\n\t\t(async () => {\r\n\t\t\ttry {\r\n\t\t\t\tsetLoading(true); // use preloader here?\r\n\t\t\t\tlet serverResponse = await gameServices.getMyGames();\r\n\t\t\t\tif (serverResponse.status === Configs.Status.Successful)\r\n\t\t\t\t\tsetMyGames([...serverResponse.data.myGames.reverse()]);\r\n\t\t\t} catch (err) {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t\tif (!Status.isErrorExpected(err))\r\n\t\t\t\t\tSorry(\r\n\t\t\t\t\t\t\"مشکلی حین بارگذاری لیست بازی ها پیش آمد. ارتباط اینترنتی خود را بررسی کنید.\"\r\n\t\t\t\t\t);\r\n\t\t\t\tsetLoading(false);\r\n\t\t\t}\r\n\t\t\tsetLoading(false);\r\n\t\t})();\r\n\t}, []);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetSelectedFriendIndex(\r\n\t\t\tfilterID !== \"me\"\r\n\t\t\t\t? friends.findIndex((friend) => friend.userID === filterID)\r\n\t\t\t\t: -1\r\n\t\t);\r\n\t\t// if filterID === \"me\" || frined id wia .findIndex not found ---> returns -1\r\n\t}, [filterID, friends]);\r\n\r\n\tconst unfriend = (friend) => {\r\n\t\t//... show a modal or sth to ask if user's sure\r\n\t\t// send proper http request to clear both from each others friend list\r\n\t};\r\n\treturn (\r\n\t\t<Card border=\"secondary\" bg=\"transparent\" className=\"big-single-card\">\r\n\t\t\t<Card.Header className=\"text-center\">\r\n\t\t\t\tلیست دوستان و آمار بازی ها\r\n\t\t\t</Card.Header>\r\n\t\t\t<LoadingBar loading={loading} />\r\n\t\t\t<Card.Body>\r\n\t\t\t\t<LoadingBar loading={loading} />\r\n\t\t\t\t<Tab.Container\r\n\t\t\t\t\tdefaultActiveKey={filterID}\r\n\t\t\t\t\tonSelect={(key) => setFilterID(key)}>\r\n\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t<Col\r\n\t\t\t\t\t\t\tlg={3}\r\n\t\t\t\t\t\t\tmd={4}\r\n\t\t\t\t\t\t\tsm={12}\r\n\t\t\t\t\t\t\tclassName=\"friend-list-name-length tabs-list-friends-in-games-scrollable\">\r\n\t\t\t\t\t\t\t<Nav\r\n\t\t\t\t\t\t\t\tvariant=\"pills\"\r\n\t\t\t\t\t\t\t\tclassName=\"flex-column text-right\">\r\n\t\t\t\t\t\t\t\t<Nav.Link\r\n\t\t\t\t\t\t\t\t\tclassName=\"animated-navitem\"\r\n\t\t\t\t\t\t\t\t\teventKey=\"me\">\r\n\t\t\t\t\t\t\t\t\tهمه بازی ها\r\n\t\t\t\t\t\t\t\t</Nav.Link>\r\n\r\n\t\t\t\t\t\t\t\t{friends.map((friend) => (\r\n\t\t\t\t\t\t\t\t\t<Nav.Link\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"animated-navitem\"\r\n\t\t\t\t\t\t\t\t\t\teventKey={friend.userID}>\r\n\t\t\t\t\t\t\t\t\t\t<Row className=\"m-0 w-100\">\r\n\t\t\t\t\t\t\t\t\t\t\t<Col>{friend.name}</Col>\r\n\t\t\t\t\t\t\t\t\t\t\t<Col xs={1}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tunfriend(friend)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"icon-unfriend fa fa-times pl-2\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tarea-hidden=\"true\"></i>\r\n\t\t\t\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t\t\t\t</Nav.Link>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t</Nav>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t{/* EDIT MAIL LAYOUT <Col> LIKE THIS */}\r\n\t\t\t\t\t\t<Col lg={9} md={8} sm={12}>\r\n\t\t\t\t\t\t\t<Tab.Content>\r\n\t\t\t\t\t\t\t\t<Tab.Pane eventKey=\"me\">\r\n\t\t\t\t\t\t\t\t\t{me && (\r\n\t\t\t\t\t\t\t\t\t\t<FriendRecords\r\n\t\t\t\t\t\t\t\t\t\t\tperson={me}\r\n\t\t\t\t\t\t\t\t\t\t\tthisIsMe={true}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t<ScoresTable scores={myGames} />\r\n\t\t\t\t\t\t\t\t</Tab.Pane>\r\n\t\t\t\t\t\t\t\t{friends.map((friend) => (\r\n\t\t\t\t\t\t\t\t\t<Tab.Pane eventKey={friend.userID}>\r\n\t\t\t\t\t\t\t\t\t\t<FriendRecords\r\n\t\t\t\t\t\t\t\t\t\t\tperson={\r\n\t\t\t\t\t\t\t\t\t\t\t\tselectedFriendIndex !== -1\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t? friends[\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tselectedFriendIndex\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t  ]\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t: me\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\tthisIsMe={\r\n\t\t\t\t\t\t\t\t\t\t\t\tme.userID ===\r\n\t\t\t\t\t\t\t\t\t\t\t\tselectedFriendIndex\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t<ScoresTable\r\n\t\t\t\t\t\t\t\t\t\t\tscores={myGames.filter(\r\n\t\t\t\t\t\t\t\t\t\t\t\t(game) =>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tfriend.userID ===\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tgame.players[0].id ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tfriend.userID ===\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tgame.players[1].id\r\n\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</Tab.Pane>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t</Tab.Content>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t</Tab.Container>\r\n\t\t\t</Card.Body>\r\n\t\t</Card>\r\n\t);\r\n};\r\n\r\nexport default MyGamesAndFriends;\r\n","import http from \"./httpService\";\r\nimport { Routes } from \"../configs\";\r\n\r\nconst {Server} = Routes;\r\nconst noticeServices = {\r\n    createNotice: (notice) => {\r\n        return http.post(\r\n            `${Server.Root}/${Server.Notices}/${Server.NoticeManagement}`,\r\n            JSON.stringify(notice)\r\n        );\r\n    },\r\n    getAdvancedNotics: () => { //returns all notices with complete data esp. with ID\r\n        return http.get(\r\n            `${Server.Root}/${Server.Notices}/${Server.NoticeManagement}`\r\n        );\r\n    },\r\n    getShortNotices: () => {\r\n        return http.get(`${Server.Root}/${Server.Notices}`);\r\n    },\r\n    editNotice: (noticeID, notice) => {\r\n        return http.put(\r\n            `${Server.Root}/${Server.Notices}/${Server.NoticeManagement}/${noticeID}`,\r\n            JSON.stringify(notice)\r\n        );\r\n    }\r\n};\r\n\r\nexport default noticeServices;\r\n","import { Fragment, useState, useEffect } from \"react\";\r\nimport { Form, Card, Col, Row, Button, Alert } from \"react-bootstrap\";\r\nimport { useSelector } from \"react-redux\";\r\nimport DatePicker from \"react-multi-date-picker\";\r\nimport persian from \"react-date-object/calendars/persian\";\r\nimport persian_fa from \"react-date-object/locales/persian_fa\";\r\nimport noticeServices from \"../../services/http/noticeServices\";\r\nimport { Status, browserStorage } from \"../../services/configs\";\r\nimport \"../profile.css\";\r\nimport LoadingBar from \"../../commons/LoadingBar\";\r\nimport jwtdecode from \"jwt-decode\";\r\nimport { OK, Sorry } from \"../../tools/notification\";\r\nconst NoticeManager = () => {\r\n\t//u can create another component for listing notices ?\r\n\tconst me = useSelector((state) => state.me);\r\n\tconst [isAllowed, setAllowed] = useState(undefined);\r\n\tconst [title, setTitle] = useState(\"\");\r\n\tconst [text, setText] = useState(\"\");\r\n\tconst [startDate, setStartDate] = useState(null);\r\n\tconst [endDate, setEndDate] = useState(null);\r\n\tconst [notices, setNotices] = useState([]);\r\n\tconst [selectedNoticeID, setSelectedNoticeID] = useState(null);\r\n\tconst [updateTrigger, setUpdateTrigger] = useState(false);\r\n\tconst [loading, setLoading] = useState(false);\r\n\r\n\tconst resetStates = () => {\r\n\t\tsetTitle(\"\");\r\n\t\tsetText(\"\");\r\n\t\tsetStartDate(null);\r\n\t\tsetEndDate(null);\r\n\t\tsetSelectedNoticeID(null);\r\n\t\tsetUpdateTrigger(!updateTrigger); // updateTrigger: true <===> false -> chane -> useEffects calls\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\t//use another simpler preloader\r\n\t\t//load all notices in left side for selecting: load all and push them in notices state\r\n\t\t(async () => {\r\n\t\t\ttry {\r\n\t\t\t\tsetLoading(true);\r\n\t\t\t\tconst { status, data } =\r\n\t\t\t\t\tawait noticeServices.getAdvancedNotics();\r\n\t\t\t\tif (status === Status.Successful) {\r\n\t\t\t\t\t//return data.notices;\r\n\t\t\t\t\tif (data.notices.length) setNotices([...data.notices.reverse()]);\r\n\t\t\t\t\t//if all is empty\r\n\t\t\t\t\tif (data.notices.length === 0) {\r\n\t\t\t\t\t\tsetNotices([\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\ttitle: \"پیام\",\r\n\t\t\t\t\t\t\t\ttext: \"اطلاعیه جدیدی وجود ندارد\",\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} catch (err) {\r\n\t\t\t\t//put error message in notice side bar?\r\n\t\t\t\tsetNotices([\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"خطا\",\r\n\t\t\t\t\t\ttext: \"...مشکلی حین بارگذاری اطلاعیه ها پیش آمد. دوباره امتحان کنید\",\r\n\t\t\t\t\t},\r\n\t\t\t\t]);\r\n\t\t\t\tsetLoading(false);\r\n\t\t\t}\r\n\t\t\tsetLoading(false);\r\n\t\t})();\r\n\t}, [updateTrigger]);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst token = browserStorage.TOKEN();\r\n        let isAdmin = undefined;\r\n\t\tif (token) {\r\n\t\t\tconst decoded_token = jwtdecode(browserStorage.TOKEN());\r\n\t\t\tisAdmin = decoded_token &&\r\n\t\t\t\tdecoded_token.user.admin &&\r\n\t\t\t\tdecoded_token.exp > Date.now() / 1000; //user is admin and token not expired\r\n\t\t\t// show proper message for simple users\r\n\t\t\tif (!me || isAdmin === false) {\r\n\t\t\t\t//in first render a wronge message will be shown! find a fix\r\n\t\t\t\t//2nd condition must be exactly the same\r\n\t\t\t\tSorry(\"متاسفانه شما مجوز دسترسی به این صفحه را ندارید.\");\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t}\r\n        else isAdmin = false;\r\n\t\tsetAllowed(isAdmin);\r\n\t}, [me]);\r\n\t//***** in server implemented a middleware for this, is this needed? */\r\n\r\n\t//runs when create notice button clicks\r\n\tconst createNewNotice = async () => {\r\n\t\t//add patern and stuff to states and inputs\r\n\t\ttry {\r\n\t\t\tsetLoading(true);\r\n\t\t\tconst { status } = await noticeServices.createNotice({\r\n\t\t\t\ttitle,\r\n\t\t\t\ttext,\r\n\t\t\t\tstartDate: new Date(startDate),\r\n\t\t\t\tendDate: new Date(endDate),\r\n\t\t\t});\r\n\t\t\t//*********** */\r\n\t\t\t//COMPLETELY CHECK NOTICE IN CLIENT AND SERVER\r\n\t\t\tif (status === Status.CreatedSuccessfully) {\r\n\t\t\t\tOK(`اطلاعیه ی ${title} با موفقیت ساخته شد`);\r\n\t\t\t\tresetStates();\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tif (!Status.isErrorExpected(err))\r\n\t\t\t\tSorry(\r\n\t\t\t\t\t\"خطایی در ذخیره اطلاعیه بوجود امد ... لطفا دوباره تلاش کنید\"\r\n\t\t\t\t);\r\n\t\t}\r\n\t\tsetLoading(false);\r\n\t};\r\n\r\n\tconst selecteNotice = (notice) => {\r\n\t\t// console.log(notice);\r\n\t\tsetSelectedNoticeID(notice._id);\r\n\t\tsetTitle(notice.title);\r\n\t\tsetText(notice.text);\r\n\t\tsetStartDate(new Date(notice.startDate));\r\n\t\tsetEndDate(new Date(notice.endDate));\r\n\t};\r\n\r\n\tconst cancelEditing = () => {\r\n\t\tresetStates();\r\n\t};\r\n\r\n\tconst saveChanges = async () => {\r\n\t\t//add patern and stuff to states and inputs\r\n\t\tif (!selectedNoticeID) return;\r\n\t\tsetLoading(true);\r\n\t\ttry {\r\n\t\t\tconst { status } = await noticeServices.editNotice(\r\n\t\t\t\tselectedNoticeID,\r\n\t\t\t\t{ title, text, startDate, endDate }\r\n\t\t\t);\r\n\t\t\tif (status === Status.Successful) {\r\n\t\t\t\tOK(`اطلاعیه ی ${title} با مورفقیت ویرایش شد`);\r\n\t\t\t\tresetStates();\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tif (!Status.isErrorExpected(err))\r\n\t\t\t\tSorry(\r\n\t\t\t\t\t\"خطایی در ذخیره تغییرات بوجود امد ... لطفا دوباره تلاش کنید\"\r\n\t\t\t\t);\r\n\t\t}\r\n\t\tsetLoading(false);\r\n\t};\r\n\t// if admin status is checked directly by server then start rendering the page\r\n\t//consists two part\" right part => used for creating and editing notices\r\n\t//left part lists all notices and allows admin to select one => after selecting the notice will be ready to be edited on right side\r\n\r\n\t//edit all heights in control panel\r\n\t//add patern and stuff to states and inputs\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t{me && isAllowed && (\r\n\t\t\t\t<Row style={{ height: \"100%\" }}>\r\n\t\t\t\t\t<LoadingBar loading={loading} />\r\n\t\t\t\t\t<Col lg={6} md={5} sm={12}>\r\n\t\t\t\t\t\t<Card\r\n\t\t\t\t\t\t\tborder=\"success\"\r\n\t\t\t\t\t\t\tbg=\"transparent\"\r\n\t\t\t\t\t\t\tclassName=\"mx-auto notice-manager-card\">\r\n\t\t\t\t\t\t\t<Card.Header className=\"text-center\">\r\n\t\t\t\t\t\t\t\tاطلاعیه جدید\r\n\t\t\t\t\t\t\t</Card.Header>\r\n\t\t\t\t\t\t\t<Card.Body className=\"text-right\">\r\n\t\t\t\t\t\t\t\t<Form.Label className=\"my-1 mx-auto\">\r\n\t\t\t\t\t\t\t\t\tعنوان اطلاعیه\r\n\t\t\t\t\t\t\t\t</Form.Label>\r\n\t\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\t\tvalue={title}\r\n\t\t\t\t\t\t\t\t\tonChange={(e) => setTitle(e.target.value)}\r\n\t\t\t\t\t\t\t\t\tpattern=\".{3,30}\"\r\n\t\t\t\t\t\t\t\t\tonInput={(e) =>\r\n\t\t\t\t\t\t\t\t\t\te.target.setCustomValidity(\"\")\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tonInvalid={(e) =>\r\n\t\t\t\t\t\t\t\t\t\te.target.setCustomValidity(\r\n\t\t\t\t\t\t\t\t\t\t\t\"عنوان اطلاعیه باید حداقل 3 و حداکثر 30 کاراکتر داشته باشد\"\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tclassName=\"my-1 mx-auto animated-textbox\"\r\n\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\tplaceholder=\"عنوان\"\r\n\t\t\t\t\t\t\t\t\trequired=\"required\"\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<hr />\r\n\t\t\t\t\t\t\t\t<Form.Label className=\"my-1 mx-auto\">\r\n\t\t\t\t\t\t\t\t\tتوضیحات\r\n\t\t\t\t\t\t\t\t</Form.Label>\r\n\t\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\t\tas=\"textarea\"\r\n\t\t\t\t\t\t\t\t\tpattern=\".{5,200}\"\r\n\t\t\t\t\t\t\t\t\tonInput={(e) =>\r\n\t\t\t\t\t\t\t\t\t\te.target.setCustomValidity(\"\")\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tonInvalid={(e) =>\r\n\t\t\t\t\t\t\t\t\t\te.target.setCustomValidity(\r\n\t\t\t\t\t\t\t\t\t\t\t\"متن اطلاعیه باید حداقل 5 و حداکثر 200 کاراکتر داشته باشد\"\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tclassName=\"my-1 animated-textbox h-25\"\r\n\t\t\t\t\t\t\t\t\tplaceholder=\"متن کامل اطلاعیه را وارد کنید\"\r\n\t\t\t\t\t\t\t\t\tvalue={text}\r\n\t\t\t\t\t\t\t\t\trequired=\"required\"\r\n\t\t\t\t\t\t\t\t\tonChange={(e) => setText(e.target.value)}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<hr />\r\n\t\t\t\t\t\t\t\t<Form.Label className=\"my-1 mx-2\">\r\n\t\t\t\t\t\t\t\t\tتاریخ شروع نمایش\r\n\t\t\t\t\t\t\t\t</Form.Label>\r\n\r\n\t\t\t\t\t\t\t\t<DatePicker\r\n\t\t\t\t\t\t\t\t\tclassName=\"my-1 mx-auto w-100\"\r\n\t\t\t\t\t\t\t\t\tcalendar={persian}\r\n\t\t\t\t\t\t\t\t\tlocale={persian_fa}\r\n\t\t\t\t\t\t\t\t\tcalendarPosition=\"bottom-right\"\r\n\t\t\t\t\t\t\t\t\tvalue={startDate}\r\n\t\t\t\t\t\t\t\t\tonChange={setStartDate}\r\n\t\t\t\t\t\t\t\t\trequired=\"required\"\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<hr />\r\n\t\t\t\t\t\t\t\t<Form.Label className=\"my-1 mx-2\">\r\n\t\t\t\t\t\t\t\t\tتاریخ پایان نمایش\r\n\t\t\t\t\t\t\t\t</Form.Label>\r\n\r\n\t\t\t\t\t\t\t\t<DatePicker\r\n\t\t\t\t\t\t\t\t\tclassName=\"my-1 mx-auto\"\r\n\t\t\t\t\t\t\t\t\tcalendar={persian}\r\n\t\t\t\t\t\t\t\t\tlocale={persian_fa}\r\n\t\t\t\t\t\t\t\t\tcalendarPosition=\"bottom-right\"\r\n\t\t\t\t\t\t\t\t\tvalue={endDate}\r\n\t\t\t\t\t\t\t\t\tonChange={setEndDate}\r\n\t\t\t\t\t\t\t\t\trequired=\"required\"\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<hr />\r\n\t\t\t\t\t\t\t</Card.Body>\r\n\t\t\t\t\t\t\t<Card.Footer>\r\n\t\t\t\t\t\t\t\t{!selectedNoticeID ? (\r\n\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\tblock\r\n\t\t\t\t\t\t\t\t\t\tvariant=\"success\"\r\n\t\t\t\t\t\t\t\t\t\tonClick={createNewNotice}>\r\n\t\t\t\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"fa fa-floppy-o px-3\"\r\n\t\t\t\t\t\t\t\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t\t\t\t\t\t\t\t\tایجاد اطلاعیه\r\n\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t\t\t\t<Col lg={6} md={12}>\r\n\t\t\t\t\t\t\t\t\t\t\t<Button \r\n\t\t\t\t\t\t\t\t\t\t\t\tblock\r\n\t\t\t\t\t\t\t\t\t\t\t\tvariant=\"outline-primary\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={saveChanges}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"fa fa-floppy-o px-3\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t\t\t\t\t\t\t\t\t\t\tذخیره تغییرات\r\n\t\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t\t\t<Col lg={6} md={12}>\r\n\t\t\t\t\t\t\t\t\t\t\t<Button \r\n\t\t\t\t\t\t\t\t\t\t\t\tblock\r\n\t\t\t\t\t\t\t\t\t\t\t\tvariant=\"outline-warning text-secondary\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={cancelEditing}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"fa fa-floppy-o px-3\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t\t\t\t\t\t\t\t\t\t\tلغو ویرایش\r\n\t\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</Card.Footer>\r\n\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col lg={6} md={7} sm={12}>\r\n\t\t\t\t\t\t<Card\r\n\t\t\t\t\t\t\tborder=\"info\"\r\n\t\t\t\t\t\t\tbg=\"transparent\"\r\n\t\t\t\t\t\t\tclassName=\"mx-auto notice-manager-card\">\r\n\t\t\t\t\t\t\t<Card.Header className=\"text-center\">\r\n\t\t\t\t\t\t\t\tاطلاعیه های قبلی\r\n\t\t\t\t\t\t\t</Card.Header>\r\n\t\t\t\t\t\t\t<Card.Body\r\n\t\t\t\t\t\t\t\tstyle={{ overflowY: \"scroll\" }}\r\n\t\t\t\t\t\t\t\tclassName=\"text-right\">\r\n\t\t\t\t\t\t\t\t{notices.map((notice) => {\r\n\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t<Fragment>\r\n\t\t\t\t\t\t\t\t\t\t\t<Alert variant=\"secondary\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"fa fa-info-circle px-3\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor: \"red\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfontSize: \"18px\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{notice.title}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t: {notice.text}\r\n\t\t\t\t\t\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"icon-edit-notice fa fa-pencil-square-o px-3\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\taria-hidden=\"true\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tselecteNotice(notice)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}></i>\r\n\t\t\t\t\t\t\t\t\t\t\t</Alert>\r\n\t\t\t\t\t\t\t\t\t\t\t<hr />\r\n\t\t\t\t\t\t\t\t\t\t</Fragment>\r\n\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t</Card.Body>\r\n\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t)}\r\n\t\t</Fragment>\r\n\t);\r\n};\r\n\r\nexport default NoticeManager;\r\n","import { UpdateMyChatList } from \"./interactions\";\r\n\r\nexport const SendMessageTo = (name, friendID, text) => {\r\n\treturn async (dispatch) => {\r\n\t\ttry {\r\n\t\t\tif (text && friendID && name) {\r\n\t\t\t\tawait dispatch({\r\n\t\t\t\t\ttype: \"SEND_MESSAGE\",\r\n\t\t\t\t\tpayload: { name, friendID, text },\r\n\t\t\t\t});\r\n\t\t\t\tawait dispatch(UpdateMyChatList(name, friendID, text, {sent: true}));\r\n\t\t\t} else {\r\n\t\t\t\tconsole.log(\"msg not sent: data missing...\");\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const RecieveMessageFrom = (name, friendID, text) => {\r\n\treturn async (dispatch) => {\r\n\t\ttry {\r\n\t\t\tif (text && friendID && name) {\r\n\t\t\t\tawait dispatch({\r\n                    type: \"RECIEVE_MESSAGE\",\r\n                    payload: { name, friendID, text },\r\n                });\r\n\t\t\t\tawait dispatch(UpdateMyChatList(name, friendID, text, {recieved: true}));\r\n\t\t\t} else {\r\n\t\t\t\tconsole.log(\"msg not recieved: data missing...\");\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log(err);\r\n\t\t}\r\n\t};\r\n};","import { Fragment, useState, useEffect } from \"react\";\r\nimport { Alert, Col, Row } from \"react-bootstrap\";\r\nimport \"./chat.css\";\r\nimport { toHijri } from \"../tools/format\";\r\nconst Message = ({ msg, previousDay }) => {\r\n\tconst { date } = msg; // destructure date from msg then make a new date object\r\n\t// reason for making new Date objects is that react throws error some time when you use it without new Date :|\r\n\tconst [showDate, setShowDate] = useState(false); //for each day, the first message in that day has persian date above it\r\n\tconst [time, setTime] = useState(null);\r\n\tconst [hijriDate, setHijriDate] = useState(null);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst [hDate, hTime] = toHijri(date);\r\n\t\tsetTime(hTime);\r\n\t\tsetHijriDate(hDate);\r\n\t\tsetShowDate(\r\n\t\t\tnew Date(date).getDate() !== previousDay || previousDay === 0\r\n\t\t); //     0 means this is the first message in the chat\r\n\t}, [date, previousDay]);\r\n\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t{!showDate ? null : (\r\n\t\t\t\t<Fragment>\r\n\t\t\t\t\t<hr />\r\n\t\t\t\t\t<p className=\"message-date\">{hijriDate}</p>\r\n\t\t\t\t</Fragment>\r\n\t\t\t)}\r\n\t\t\t<Row>\r\n\t\t\t\t<Col md={6} sm={msg.me ? 8 : 4} xs={msg.me ? 9 : 3}>\r\n\t\t\t\t\t{msg.me && (\r\n\t\t\t\t\t\t<Alert className=\"text-right\" variant=\"dark\">\r\n\t\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t\t<Col lg={9} xs={12}>\r\n\t\t\t\t\t\t\t\t\t{msg.me}\r\n\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t<Col className=\"message-time\" lg={3} xs={12}>\r\n\t\t\t\t\t\t\t\t\t{time}\r\n\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t</Alert>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col md={6} sm={msg.friend ? 8 : 4} xs={msg.friend ? 9 : 3}>\r\n\t\t\t\t\t{msg.friend && (\r\n\t\t\t\t\t\t<Alert className=\"text-right\" variant=\"primary\">\r\n\t\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t\t<Col lg={9} xs={12}>\r\n\t\t\t\t\t\t\t\t\t{msg.friend}\r\n\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t<Col className=\"message-time\" lg={3} xs={12}>\r\n\t\t\t\t\t\t\t\t\t{time}\r\n\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t</Alert>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t</Fragment>\r\n\t);\r\n};\r\n\r\nexport default Message;\r\n","import { Button, Card, Container, Form, Row, Tab, Col } from \"react-bootstrap\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useState, useEffect, useRef } from \"react\";\r\nimport \"./chat.css\";\r\nimport { SendMessageTo } from \"../globals/redux/actions/message\";\r\nimport Message from \"./Message\";\r\n\r\nconst ChatBox = ({ friend, chat }) => {\r\n\tconst [myMessage, setMyMessage] = useState(\"\");\r\n\tconst message = useSelector((state) => state.message);\r\n\tconst dispatch = useDispatch();\r\n\tconst me = useSelector((state) => state.me);\r\n\tconst mostRecentMessageRef = useRef(null);\r\n\r\n\tconst composeMessage = (event) => {\r\n\t\tevent.preventDefault();\r\n\t\t// init state vears ro get chat\r\n\t\tif (myMessage) {\r\n\t\t\tdispatch(SendMessageTo(me.fullname, friend.userID, myMessage));\r\n\t\t\tsetMyMessage(\"\");\r\n\t\t}\r\n\t};\r\n\r\n\t//how to scroll to last recent message in the start?\r\n\t// useEffect(() => {\r\n\t// \tsetTimeout(() => {\r\n\t// \t\tif (mostRecentMessageRef && mostRecentMessageRef.current)\r\n\t// \t\t\tmostRecentMessageRef.current.scrollIntoView({\r\n\t// \t\t\t\tbehavior: \"smooth\",\r\n\t// \t\t\t\ttop: mostRecentMessageRef.current.offsetTop,\r\n\t// \t\t\t});\r\n\t// \t}, 1000);\r\n\t// }, [])\r\n\tuseEffect(() => {\r\n\t\tsetTimeout(() => {\r\n\t\t\tif (mostRecentMessageRef && mostRecentMessageRef.current)\r\n\t\t\t\tmostRecentMessageRef.current.scrollIntoView({\r\n\t\t\t\t\tbehavior: \"smooth\",\r\n\t\t\t\t\ttop: mostRecentMessageRef.current.offsetTop,\r\n\t\t\t\t});\r\n\t\t}, 100);\r\n\t}, [message]);\r\n\r\n\treturn (\r\n\t\t<Tab.Pane eventKey={friend.userID}>\r\n\t\t\t<Container>\r\n\t\t\t\t<Row>\r\n\t\t\t\t\t<Card\r\n\t\t\t\t\t\tborder=\"dark\"\r\n\t\t\t\t\t\tbg=\"transparent\"\r\n\t\t\t\t\t\tclassName=\"chat-main-card chat-box-scrollable\">\r\n\t\t\t\t\t\t<Card.Body>\r\n\t\t\t\t\t\t\t{chat &&\r\n\t\t\t\t\t\t\t\tchat instanceof Array &&\r\n\t\t\t\t\t\t\t\tchat.map((msg, index) => (\r\n\t\t\t\t\t\t\t\t\t<div ref={mostRecentMessageRef}>\r\n\t\t\t\t\t\t\t\t\t\t<Message\r\n\t\t\t\t\t\t\t\t\t\t\t// key={msg.key}\r\n\t\t\t\t\t\t\t\t\t\t\tmsg={msg}\r\n\t\t\t\t\t\t\t\t\t\t\tpreviousDay={\r\n\t\t\t\t\t\t\t\t\t\t\t\tindex !== 0\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t? new Date(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tchat[index - 1].date\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t  ).getDate()\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t: 0\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</Card.Body>\r\n\t\t\t\t\t</Card>\r\n\t\t\t\t</Row>\r\n\t\t\t\t<Row>\r\n\t\t\t\t\t<Form\r\n\t\t\t\t\t\tonSubmit={(event) => composeMessage(event)}\r\n\t\t\t\t\t\tclassName=\"w-100 mt-3\">\r\n\t\t\t\t\t\t<Row className=\"w-100 p-0 m-0\">\r\n\t\t\t\t\t\t\t<Col xs={1} className=\"m-0 p-0 text-center\">\r\n\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\t\t\tclassName=\"w-100 mx-auto\"\r\n\t\t\t\t\t\t\t\t\tvariant=\"outline-info\">\r\n\t\t\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"fa fa-paper-plane\"\r\n\t\t\t\t\t\t\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t<Col xs={11} className=\"m-0 p-0 w-100\">\r\n\t\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\t\tclassName=\"py-0 px-3 bg-transparent chat-room-message-box animated-textbox text-right\"\r\n\t\t\t\t\t\t\t\t\tvalue={myMessage}\r\n\t\t\t\t\t\t\t\t\tonChange={(e) =>\r\n\t\t\t\t\t\t\t\t\t\tsetMyMessage(e.target.value)\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tplaceholder=\"پیام...\"></Form.Control>\r\n\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t</Form>\r\n\t\t\t\t</Row>\r\n\t\t\t</Container>\r\n\t\t</Tab.Pane>\r\n\t);\r\n};\r\n\r\nexport default ChatBox;\r\n","import { Card, Row, Col, Nav, Tab } from \"react-bootstrap\";\r\nimport { useContext } from \"react\";\r\nimport { Devices } from \"../services/configs\";\r\nimport ChatBox from \"./ChatBox\";\r\nimport \"./chat.css\";\r\nimport GlobalContext from \"../globals/state/GlobalContext\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst ChatRoom = () => {\r\n\tconst context = useContext(GlobalContext);\r\n\tconst interactions = useSelector((state) => state.interactions).sort(\r\n\t\t//first sort all by last recieved message => this makes chat list contacts sorted properly\r\n\t\t(i1, i2) =>\r\n\t\t\tnew Date(i2.messages[i2.messages.length - 1].date).getTime() -\r\n\t\t\tnew Date(i1.messages[i1.messages.length - 1].date).getTime()\r\n\t);\r\n\r\n\treturn (\r\n\t\t<Card border=\"secondary\" bg=\"transparent\" className=\"chat-main-card\">\r\n\t\t\t<Card.Header className=\"text-center\">چت روم شما</Card.Header>\r\n\t\t\t<Card.Body>\r\n\t\t\t\t<Tab.Container>\r\n\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t<Col\r\n\t\t\t\t\t\t\tclassName={\r\n\t\t\t\t\t\t\t\tcontext.device !== Devices.SmartPhone\r\n\t\t\t\t\t\t\t\t\t? \"chat-room-devider chat-scrollable-friends \"\r\n\t\t\t\t\t\t\t\t\t: \"smartphone-chat-scrollable-friends\"\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tlg={3}\r\n\t\t\t\t\t\t\tmd={3}\r\n\t\t\t\t\t\t\tsm={12}>\r\n\t\t\t\t\t\t\t<Nav\r\n\t\t\t\t\t\t\t\tvariant=\"pills\"\r\n\t\t\t\t\t\t\t\tclassName=\"flex-column text-right\">\r\n\t\t\t\t\t\t\t\t{interactions.map((interact) => (\r\n\t\t\t\t\t\t\t\t\t\t<Nav.Link className=\"animated-navitem\"\r\n\t\t\t\t\t\t\t\t\t\t\t// key={friend.userID}\r\n\t\t\t\t\t\t\t\t\t\t\teventKey={interact.with.userID}>\r\n\t\t\t\t\t\t\t\t\t\t\t{interact.with.name}\r\n\t\t\t\t\t\t\t\t\t\t</Nav.Link>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t</Nav>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t{/* EDIT MAIL LAYOUT <Col> LIKE THIS */}\r\n\t\t\t\t\t\t<Col lg={9} md={9} sm={12}>\r\n\t\t\t\t\t\t\t<Tab.Content>\r\n\t\t\t\t\t\t\t\t{interactions.map((interact) => (\r\n\t\t\t\t\t\t\t\t\t<ChatBox\r\n\t\t\t\t\t\t\t\t\t\tfriend={interact.with}\r\n\t\t\t\t\t\t\t\t\t\tchat={interact.messages}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t</Tab.Content>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t</Tab.Container>\r\n\t\t\t</Card.Body>\r\n\t\t</Card>\r\n\t);\r\n};\r\n\r\nexport default ChatRoom;\r\n","import { Form, Card, Row, Col, Button } from \"react-bootstrap\";\r\nimport Configs from \"../../services/configs\";\r\nimport userServices from \"../../services/http/userServices\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { OK, Sorry } from \"../../tools/notification\";\r\nimport LoadingBar from \"../../commons/LoadingBar\";\r\n\r\nimport \"../profile.css\";\r\n\r\nconst Credentials = () => {\r\n\tconst [fullname, setFullname] = useState(\"\");\r\n\tconst [studentID, setStudentID] = useState(\"\");\r\n\tconst [email, setEmail] = useState(\"\");\r\n\tconst [password, setPassword] = useState(\"\");\r\n\tconst [loading, setLoading] = useState(\"\");\r\n\r\n\tconst [pageUpdateTrigger, triggerPageUpdate] = useState(false); // true <=> false -> triggers page , ==> see useEffect\r\n\r\n\tconst reloadPage = () => {\r\n\t\tsetLoading(false);\r\n\t\ttriggerPageUpdate(!pageUpdateTrigger);\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\t(async () => {\r\n\t\t\ttry {\r\n\t\t\t\tsetLoading(true);\r\n\t\t\t\tconst { status, data } = await userServices.getMyCredentials();\r\n\t\t\t\tif (status === Configs.Status.Successful) {\r\n\t\t\t\t\tconst { me } = data;\r\n\t\t\t\t\tsetFullname(me.fullname);\r\n\t\t\t\t\tsetStudentID(me.studentID);\r\n\t\t\t\t\tsetEmail(me.email);\r\n\t\t\t\t}\r\n\t\t\t} catch (err) {\r\n\t\t\t\tif (!Configs.Status.isErrorExpected(err))\r\n\t\t\t\t\tSorry(\r\n\t\t\t\t\t\t\"حین دریافت اطلاعات کاربر ایرادی پیش آمد. ... لطفا دوباره تلاش کنید.\"\r\n\t\t\t\t\t);\r\n\t\t\t\tsetLoading(false);\r\n\t\t\t}\r\n\t\t\tsetLoading(false);\r\n\t\t})();\r\n\t}, [pageUpdateTrigger]);\r\n\r\n\tconst saveChanges = async (event) => {\r\n\t\t//add patern and stuff to states and inputs\r\n\t\t// check all inputs plz\r\n\t\tevent.preventDefault();\r\n\t\tsetLoading(true);\r\n\t\ttry {\r\n\t\t\tconst { status } = await userServices.editMyCredentials({\r\n\t\t\t\tstudentID,\r\n\t\t\t\tfullname,\r\n\t\t\t\temail,\r\n\t\t\t\tpassword,\r\n\t\t\t});\r\n\t\t\tif (status === Configs.Status.Successful) {\r\n\t\t\t\tOK(`تغییرات با موفقیت اعمال شد`);\r\n\t\t\t\t// dispatch(TriggerRecordUpdate());\r\n\t\t\t\t// find another way to update\r\n\r\n\t\t\t\treloadPage();\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tif (!Configs.Status.isErrorExpected(err))\r\n\t\t\t\tSorry(\r\n\t\t\t\t\t\"خطایی در ذخیره تغییرات بوجود امد ... لطفا دوباره تلاش کنید\"\r\n\t\t\t\t);\r\n\t\t}\r\n\t\tsetPassword(\"\");\r\n\t\tsetLoading(false);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Form onSubmit={(e) => saveChanges(e)}>\r\n\t\t\t<LoadingBar loading={loading} />\r\n\r\n\t\t\t<Row>\r\n\t\t\t\t<Col className=\"mt-3 text-center\" xs={4}>\r\n\t\t\t\t\t<Form.Label className=\"text-center\">نام کاربر</Form.Label>\r\n\t\t\t\t</Col>\r\n\r\n\t\t\t\t<Col>\r\n\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tclassName=\"account-info-textbox\"\r\n\t\t\t\t\t\tpattern=\"[آ-ی ]{6,}\" // persian characters and space\r\n\t\t\t\t\t\tonInput={(e) => e.target.setCustomValidity(\"\")}\r\n\t\t\t\t\t\tonInvalid={(e) =>\r\n\t\t\t\t\t\t\te.target.setCustomValidity(\r\n\t\t\t\t\t\t\t\t\"نام خانوادگی باید با حروف فارسی و با حداقل طول سه حرف باشد\"\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tplaceholder=\"نام و نام خانوادگی\"\r\n\t\t\t\t\t\tvalue={fullname}\r\n\t\t\t\t\t\trequired=\"required\"\r\n\t\t\t\t\t\tonChange={(e) => setFullname(e.target.value)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\r\n\t\t\t<Row>\r\n\t\t\t\t<Col className=\"mt-3 text-center\" xs={4}>\r\n\t\t\t\t\t<Form.Label className=\"text-center\">ایمیل</Form.Label>\r\n\t\t\t\t</Col>\r\n\r\n\t\t\t\t<Col>\r\n\t\t\t\t<Form.Control\r\n\t\t\t\t\ttype=\"email\"\r\n\t\t\t\t\tpattern=\".{6,}\"\r\n\t\t\t\t\tonInput={(e) => e.target.setCustomValidity(\"\")}\r\n\t\t\t\t\tonInvalid={(e) =>\r\n\t\t\t\t\t\te.target.setCustomValidity(\r\n\t\t\t\t\t\t\t\"ورودی باید فرمت معتبر ایمیل را رعایت کرده و حداقل 6 کاراکتر باشد\"\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t}\r\n\t\t\t\t\tclassName=\"account-info-textbox text-left\"\r\n\t\t\t\t\tplaceholder=\"E-mail\"\r\n\t\t\t\t\tvalue={email}\r\n\t\t\t\t\trequired=\"required\"\r\n\t\t\t\t\tonChange={(e) => setEmail(e.target.value)}\r\n\t\t\t\t/>\r\n\t\t\t\t</Col>\r\n\r\n\t\t\t</Row>\r\n\t\t\t<Row>\r\n\t\t\t\t<Col className=\"mt-3 text-center\" xs={4}>\r\n\t\t\t\t\t<Form.Label className=\"text-center\">\r\n\t\t\t\t\t\tشماره دانشجویی\r\n\t\t\t\t\t</Form.Label>\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col>\r\n\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tdisabled\r\n\t\t\t\t\t\tclassName=\"account-info-textbox text-left\"\r\n\t\t\t\t\t\tplaceholder=\"Student ID\"\r\n\t\t\t\t\t\tvalue={studentID}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t\t<Card.Footer className=\"p-1 m-0 mt-4\">\r\n\t\t\t\t<Row>\r\n\t\t\t\t\t<Col lg={2} md={2} sm={4} xs={4}>\r\n\t\t\t\t\t\t<Form.Label className=\"text-center w-100 mt-3\">\r\n\t\t\t\t\t\t\tرمزعبور فعلی\r\n\t\t\t\t\t\t</Form.Label>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col lg={7} md={7} sm={8} xs={8}>\r\n\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\t\tclassName=\"text-left account-info-textbox animated-textbox\"\r\n\t\t\t\t\t\t\tplaceholder=\"Password\"\r\n\t\t\t\t\t\t\tvalue={password}\r\n\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\tonInput={(e) => e.target.setCustomValidity(\"\")}\r\n\t\t\t\t\t\t\tonInvalid={(e) =>\r\n\t\t\t\t\t\t\t\te.target.setCustomValidity(\r\n\t\t\t\t\t\t\t\t\t\"جهت اعمال هر گونه تغییر در حساب کاربری تان باید رمز عبور خود را وارد نمایید\"\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tonChange={(e) => setPassword(e.target.value)}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col lg={3} md={3} sm={12} xs={12}>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\tblock\r\n\t\t\t\t\t\t\tvariant=\"success\"\r\n\t\t\t\t\t\t\tclassName=\"mt-2 animated-button\">\r\n\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\tclassName=\"fa fa-floppy-o px-2\"\r\n\t\t\t\t\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t\t\t\t\t\tثبت تغییرات\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t</Card.Footer>\r\n\t\t</Form>\r\n\t);\r\n};\r\n\r\nexport default Credentials;\r\n","import { Form, Card, Row, Col, Button } from \"react-bootstrap\";\r\nimport { useState, useContext } from \"react\";\r\nimport { OK, Sorry } from \"../../tools/notification\";\r\nimport GlobalContext from \"../../globals/state/GlobalContext\";\r\nimport userServices from \"../../services/http/userServices\";\r\nimport Configs from \"../../services/configs\";\r\nimport LoadingBar from \"../../commons/LoadingBar\";\r\n\r\nimport \"../profile.css\";\r\n\r\nconst PasswordChange = () => {\r\n\tconst [password, setPassword] = useState(\"\");\r\n\r\n\tconst [newPassword, setNewPassword] = useState(\"\");\r\n\tconst [confirmNewPassword, setConfirmNewPassword] = useState(\"\");\r\n\tconst context = useContext(GlobalContext);\r\n\tconst [loading, setLoading] = useState(\"\");\r\n\r\n\tconst checkConfirmPassword = (event) => {\r\n\t\tsetConfirmNewPassword(event.target.value);\r\n\t\tif (newPassword !== event.target.value) {\r\n\t\t\tevent.target.setCustomValidity(\r\n\t\t\t\t\"تایید رمز عبور جدید باید با خود رمز عبور جدید مطابقت کامل داشته باشد\"\r\n\t\t\t);\r\n\t\t\t//console.log(password, confirmPassword);\r\n\t\t} else event.target.setCustomValidity(\"\");\r\n\t};\r\n\r\n\tconst changeMyPassword = async (event) => {\r\n\t\tevent.preventDefault();\r\n\t\tsetLoading(true);\r\n\t\ttry {\r\n\t\t\tconst { status } = await userServices.changeMyPassword({\r\n\t\t\t\tpassword,\r\n\t\t\t\tnewPassword,\r\n\t\t\t});\r\n\t\t\tif (status === Configs.Status.Successful) {\r\n\t\t\t\tOK(\"رمز شما با موفقیت تغییر داده شد\");\r\n\t\t\t\tcontext.signOut();\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tif (!Configs.Status.isErrorExpected(err))\r\n\t\t\t\tSorry(\r\n\t\t\t\t\t\"خطایی در ذخیره تغییرات بوجود امد ... لطفا دوباره تلاش کنید\"\r\n\t\t\t\t);\r\n\t\t}\r\n\t\tsetPassword(\"\");\r\n\t\tsetLoading(false);\r\n\t};\r\n\treturn (\r\n\t\t<Form onSubmit={(e) => changeMyPassword(e)}>\r\n\t\t\t<LoadingBar loading={loading} />\r\n\t\t\t<Row>\r\n\t\t\t\t<Col className=\"mt-3 text-center\" xs={4}>\r\n\t\t\t\t\t<Form.Label className=\"text-center\">\r\n\t\t\t\t\t\tرمز عبور جدید\r\n\t\t\t\t\t</Form.Label>\r\n\t\t\t\t</Col>\r\n\r\n\t\t\t\t<Col>\r\n\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\tpattern=\".{6,15}\"\r\n\t\t\t\t\t\tonInput={(e) => e.target.setCustomValidity(\"\")}\r\n\t\t\t\t\t\tonInvalid={(e) =>\r\n\t\t\t\t\t\t\te.target.setCustomValidity(\r\n\t\t\t\t\t\t\t\t\"رمز عبور باید حداقل 6 کاراکتر و حداکثر 15 کاراکتر داشته باشد\"\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tclassName=\"account-info-textbox text-left animated-textbox\"\r\n\t\t\t\t\t\tplaceholder=\"New Password\"\r\n\t\t\t\t\t\tvalue={newPassword}\r\n\t\t\t\t\t\trequired=\"required\"\r\n\t\t\t\t\t\tonChange={(e) => setNewPassword(e.target.value)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t\t<Row>\r\n\t\t\t\t<Col className=\"mt-3 text-center\" xs={4}>\r\n\t\t\t\t\t<Form.Label className=\"text-center\">\r\n\t\t\t\t\t\tتایید رمز عبور جدید\r\n\t\t\t\t\t</Form.Label>\r\n\t\t\t\t</Col>\r\n\r\n\t\t\t\t<Col>\r\n\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\tclassName=\"account-info-textbox text-left animated-textbox\"\r\n\t\t\t\t\t\tplaceholder=\"Confirm New Password\"\r\n\t\t\t\t\t\tvalue={confirmNewPassword}\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t\tonChange={(event) => checkConfirmPassword(event)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t\t<Card.Footer className=\"p-1 m-0  mt-4\">\r\n\t\t\t\t<Row>\r\n\t\t\t\t\t<Col lg={2} md={2} sm={4} xs={4}>\r\n\t\t\t\t\t\t<Form.Label className=\"text-center w-100 mt-3\">\r\n\t\t\t\t\t\t\tرمزعبور فعلی\r\n\t\t\t\t\t\t</Form.Label>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col lg={7} md={7} sm={8} xs={8}>\r\n\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\t\tclassName=\"text-left account-info-textbox animated-textbox\"\r\n\t\t\t\t\t\t\tplaceholder=\"Password\"\r\n\t\t\t\t\t\t\tvalue={password}\r\n\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\tonInput={(e) => e.target.setCustomValidity(\"\")}\r\n\t\t\t\t\t\t\tonInvalid={(e) =>\r\n\t\t\t\t\t\t\t\te.target.setCustomValidity(\r\n\t\t\t\t\t\t\t\t\t\"جهت اعمال هر گونه تغییر در حساب کاربری تان باید رمز عبور خود را وارد نمایید\"\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tonChange={(e) => setPassword(e.target.value)}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col lg={3} md={3} sm={12} xs={12}>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\tblock\r\n\t\t\t\t\t\t\tvariant=\"success\"\r\n\t\t\t\t\t\t\tclassName=\"mt-2 animated-button\">\r\n\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\tclassName=\"fa fa-key px-2\"\r\n\t\t\t\t\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t\t\t\t\t\tتغییر رمز عبور\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t</Card.Footer>\r\n\t\t</Form>\r\n\t);\r\n};\r\n\r\nexport default PasswordChange;\r\n","import { Col, Form, Image, Row } from \"react-bootstrap\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Notify } from \"./../../tools/notification\";\r\nimport './avatar.css';\r\nconst ImagePicker = ({ selector }) => {\r\n\tconst [preview, setPreview] = useState(null);\r\n\tconst me = useSelector((state) => state.me);\r\n\r\n\tconst { avatar } = me ? me : { avatar: null };\r\n\tuseEffect(() => {\r\n\t\tsetPreview(avatar);\r\n\t}, [avatar]);\r\n\tconst updatePreview = (imageFile) => {\r\n\t\ttry {\r\n\t\t\tselector(imageFile);\r\n\t\t\tconst oFReader = new FileReader();\r\n\t\t\toFReader.readAsDataURL(imageFile);\r\n\r\n\t\t\toFReader.onload = (oFREvent) => {\r\n\t\t\t\tsetPreview(oFREvent.target.result);\r\n\t\t\t};\r\n\t\t} catch (err) {\r\n\t\t\tNotify(\"پیش نمایش فایل انتخابی با مشکل رو به رو شد.\");\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Form.Group>\r\n\t\t\t<Row>\r\n\t\t\t\t<Col className=\"text-center\" sm={4} xs={4} md={3} lg={2}>\r\n\t\t\t\t\t<Image\r\n\t\t\t\t\t\tclassName=\"friends-section-avatar\"\r\n\t\t\t\t\t\tsrc={preview}\r\n\t\t\t\t\t\trounded\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col\r\n\t\t\t\t\tclassName=\"dropbox-rectangle\">\r\n\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\tclassName=\"btn-outline-primary file-picker-control\"\r\n\t\t\t\t\t\ttype=\"file\"\r\n\t\t\t\t\t\tid=\"filepicker\"\r\n\t\t\t\t\t\tonChange={(e) => updatePreview(e.target.files[0])}\r\n\t\t\t\t\t\taccept=\".jpg,.jpeg,.png\"\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t\tonInput={(e) => e.target.setCustomValidity(\"\")}\r\n\t\t\t\t\t\tonInvalid={(e) =>\r\n\t\t\t\t\t\t\te.target.setCustomValidity(\r\n\t\t\t\t\t\t\t\t\"ابتدا عکس مورد نظر را از اینجا انتخاب کنید\"\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t\t<Row>\r\n\t\t\t\t<Form.Label\r\n\t\t\t\t\thtmlFor=\"filepicker\"\r\n\t\t\t\t\tclassName=\"btn-outline-primary file-picker-label animated-button\">\r\n\t\t\t\t\tبا کلیک روی اینجا عکس خود را انتخاب کنید و یا فایل آن را\r\n\t\t\t\t\tبکشید و در وسط کادر سبز رنگ رها کنید ...\r\n\t\t\t\t</Form.Label>\r\n\t\t\t</Row>\r\n\t\t</Form.Group>\r\n\t);\r\n};\r\n\r\nexport default ImagePicker;\r\n","import { useState } from \"react\";\r\nimport { Button, Card, Col, Form, Row } from \"react-bootstrap\";\r\nimport { OK } from \"../../tools/notification\";\r\nimport userServices from \"./../../services/http/userServices\";\r\nimport { Sorry } from \"./../../tools/notification\";\r\nimport Configs from \"../../services/configs\";\r\nimport LoadingBar from \"../../commons/LoadingBar\";\r\nimport ImagePicker from \"./ImagePicker\";\r\n\r\nconst AvatarChange = () => {\r\n\tconst [password, setPassword] = useState(\"\");\r\n\tconst [myAvatar, selectMyAvatar] = useState(null);\r\n\tconst [loading, setLoading] = useState(\"\");\r\n\r\n\tconst upload = async (event) => {\r\n\t\tevent.preventDefault();\r\n\t\tsetLoading(true);\r\n\t\ttry {\r\n\t\t\tconst { status } = await userServices.uploadAvatar(password, myAvatar);\r\n\t\t\tif (status === Configs.Status.Successful) {\r\n\t\t\t\tOK(\"آواتار شما با موفقیت تغییر داده شد\");\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tif (!Configs.Status.isErrorExpected(err))\r\n\t\t\t\tSorry(\r\n\t\t\t\t\t\"خطایی در ذخیره تغییرات بوجود امد ... لطفا دوباره تلاش کنید\"\r\n\t\t\t\t);\r\n\t\t}\r\n\t\tsetLoading(false);\r\n\t\tsetPassword(\"\");\r\n\t};\r\n\treturn (\r\n\t\t<Form onSubmit={(e) => upload(e)}>\r\n\t\t\t<LoadingBar loading={loading} />\r\n\t\t\t<ImagePicker selector={selectMyAvatar} />\r\n\t\t\t<Card.Footer className=\"p-1 m-0  mt-4\">\r\n\t\t\t\t<Row>\r\n\t\t\t\t\t<Col lg={2} md={2} sm={4} xs={4}>\r\n\t\t\t\t\t\t<Form.Label className=\"text-center w-100 mt-3\">\r\n\t\t\t\t\t\t\tرمزعبور فعلی\r\n\t\t\t\t\t\t</Form.Label>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col lg={7} md={7} sm={8} xs={8}>\r\n\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\t\tclassName=\"text-left account-info-textbox animated-textbox\"\r\n\t\t\t\t\t\t\tplaceholder=\"Password\"\r\n\t\t\t\t\t\t\tvalue={password}\r\n\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\tonInput={(e) => e.target.setCustomValidity(\"\")}\r\n\t\t\t\t\t\t\tonInvalid={(e) =>\r\n\t\t\t\t\t\t\t\te.target.setCustomValidity(\r\n\t\t\t\t\t\t\t\t\t\"جهت اعمال هر گونه تغییر در حساب کاربری تان باید رمز عبور خود را وارد نمایید\"\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tonChange={(e) => setPassword(e.target.value)}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col lg={3} md={3} sm={12} xs={12}>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\tblock\r\n\t\t\t\t\t\t\tvariant=\"success\"\r\n\t\t\t\t\t\t\tclassName=\"mt-2 animated-button\">\r\n\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\tclassName=\"fa fa-upload px-2\"\r\n\t\t\t\t\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t\t\t\t\t\tتغییر آواتار\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t</Card.Footer>\r\n\t\t</Form>\r\n\t);\r\n};\r\n\r\nexport default AvatarChange;\r\n","import { Card, Tab, Tabs } from \"react-bootstrap\";\r\nimport Credentials from \"./Credentials\";\r\nimport PasswordChange from \"./PasswordChange\";\r\nimport AvatarChange from \"./AvatarChange\";\r\n\r\nconst AcountManager = () => {\r\n\t//states\r\n\r\n\tconst TABS = { CREDENTIALS: 0, AVATAR: 1, PASSWORD: 2 };\r\n\r\n\treturn (\r\n\t\t<Card border=\"secondary\" bg=\"transparent\" className=\"game-deck-card\">\r\n\t\t\t<Card.Body>\r\n\t\t\t\t<Tabs\r\n\t\t\t\t\tdefaultActiveKey={TABS.CREDENTIALS}\r\n\t\t\t\t\tvariant=\"pills\"\r\n\t\t\t\t\t// transition={Fade}\r\n\t\t\t\t\tclassName=\"mb-3\">\r\n\t\t\t\t\t<Tab eventKey={TABS.CREDENTIALS} title=\"ویرایش مشخصات\">\r\n\t\t\t\t\t\t<hr />\r\n\t\t\t\t\t\t<Credentials />\r\n\t\t\t\t\t</Tab>\r\n\t\t\t\t\t<Tab eventKey={TABS.AVATAR} title=\"آواتار\">\r\n\t\t\t\t\t\t<hr />\r\n\t\t\t\t\t\t<AvatarChange />\r\n\t\t\t\t\t</Tab>\r\n\t\t\t\t\t<Tab eventKey={TABS.PASSWORD} title=\"تغییر رمزعبور\">\r\n\t\t\t\t\t\t<hr />\r\n\t\t\t\t\t\t<PasswordChange />\r\n\t\t\t\t\t</Tab>\r\n\t\t\t\t</Tabs>\r\n\t\t\t</Card.Body>\r\n\t\t</Card>\r\n\t);\r\n};\r\n\r\nexport default AcountManager;\r\n","import { Component } from \"react\";\r\nimport \"./sidebars.css\";\r\nimport userServices from \"../services/http/userServices\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport LoadingBar from \"../commons/LoadingBar\";\r\nimport Configs, { browserStorage } from \"../services/configs\";\r\nimport { Card, Form, Button, Col, Row } from \"react-bootstrap\";\r\nimport { Sorry } from \"../tools/notification\";\r\nimport ReCAPTCHA from \"react-google-recaptcha\";\r\nclass SignInSideBar extends Component {\r\n\t// *********************Objectives***********************\r\n\t// 1. handle errors particularly\r\n\tstate = {\r\n\t\tstudentID: \"\",\r\n\t\tpassword: \"\",\r\n\t\tloading: false,\r\n\t};\r\n\r\n\tonSignInSubmitted = async (event) => {\r\n\t\tevent.preventDefault();\r\n\t\tthis.setState({ loading: true });\r\n\t\tconst { studentID, password } = this.state;\r\n\t\tconst user = { studentID: Number(studentID), password };\r\n\t\ttry {\r\n\t\t\tconst { status, data } = await userServices.signIn(user);\r\n\t\t\tif (status === Configs.Status.Successful) {\r\n\t\t\t\tbrowserStorage.save(data.token);\r\n\t\t\t\tthis.props.history.replace(\"/\");\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\t// check nonserver errors\r\n\t\t\tconsole.log(err);\r\n\t\t\tthis.setState({ password: \"\" });\r\n\t\t\tif (!Configs.Status.isErrorExpected(err))\r\n\t\t\t\tSorry(\".ورود با مشکل رو به رو شد. لطفا دوباره تلاش کتنید.\");\r\n\t\t}\r\n\t\tthis.setState({ loading: false });\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst { studentID, password, loading } = this.state;\r\n\t\treturn (\r\n\t\t\t<Card\r\n\t\t\t\tborder=\"primary\"\r\n\t\t\t\tclassName=\"sign-in-sidebar animated-sidebar-intense\">\r\n\t\t\t\t<Card.Header\r\n\t\t\t\t\tborder=\"primary\"\r\n\t\t\t\t\tclassName=\"text-center text-primary\">\r\n\t\t\t\t\tورود کاربران\r\n\t\t\t\t</Card.Header>\r\n\t\t\t\t<LoadingBar loading={loading} />\r\n\t\t\t\t<Card.Body className=\"text-primary\">\r\n\t\t\t\t\t<Form onSubmit={(event) => this.onSignInSubmitted(event)}>\r\n\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\tautoComplete=\"username\"\r\n\t\t\t\t\t\t\tclassName=\"sign-in-sidebar-textbox txt-shaking\"\r\n\t\t\t\t\t\t\tplaceholder=\"شماره دانشجویی\"\r\n\t\t\t\t\t\t\tvalue={studentID}\r\n\t\t\t\t\t\t\tonChange={(e) =>\r\n\t\t\t\t\t\t\t\tthis.setState({ studentID: e.target.value })\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\t\tautoComplete=\"current-password\"\r\n\t\t\t\t\t\t\tclassName=\"sign-in-sidebar-textbox txt-shaking\"\r\n\t\t\t\t\t\t\tplaceholder=\"رمز عبور\"\r\n\t\t\t\t\t\t\tvalue={password}\r\n\t\t\t\t\t\t\tonChange={(e) =>\r\n\t\t\t\t\t\t\t\tthis.setState({ password: e.target.value })\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<hr />\r\n\t\t\t\t\t\t<Row className=\"justify-content-center my-3\">\r\n\t\t\t\t\t\t\t<ReCAPTCHA sitekey=\"Your client site key\" />\r\n\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t<Card.Footer className=\"bg-transparent border-primary\">\r\n\t\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t\t<Col className=\"text-right\" lg={6}>\r\n\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\t\t\t\tvariant=\"success\"\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"sign-in-sidebar-buttons animated-button\">\r\n\t\t\t\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"fa fa-sign-in px-3\"\r\n\t\t\t\t\t\t\t\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t<Col lg={6}>\r\n\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"sign-in-sidebar-buttons animated-button\"\r\n\t\t\t\t\t\t\t\t\t\tvariant=\"warning\">\r\n\t\t\t\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"fa fa-recycle px-3\"\r\n\t\t\t\t\t\t\t\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t</Card.Footer>\r\n\t\t\t\t\t</Form>\r\n\t\t\t\t</Card.Body>\r\n\t\t\t</Card>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default withRouter(SignInSideBar);\r\n","import \"./sidebars.css\";\r\nimport { Fragment, useEffect, useState } from \"react\";\r\nimport noticeServices from \"../services/http/noticeServices\";\r\nimport Configs from \"../services/configs\";\r\nimport { Alert, Card } from \"react-bootstrap\";\r\nimport { v1 as uuidv1 } from \"uuid\";\r\nconst NoticeSideBar = () => {\r\n    const [notices, setNotices] = useState([]);\r\n\r\n    // oncomponentMount or update\r\n    useEffect(() => {\r\n        (async () => {\r\n            try {\r\n                setNotices([{\r\n                    title: \"درحال بارگذاری\",\r\n                    text: \"لطفا کمی صبر کنید...\",\r\n                }]);\r\n                const { status, data } = await noticeServices.getShortNotices();\r\n                if (status === Configs.Status.Successful) {\r\n                    //return data.notices;\r\n                    \r\n                    if (data.notices.length) setNotices([...data.notices.reverse()]);\r\n                    //if all is empty\r\n                    else {\r\n                        setNotices([{\r\n                            title: \"پیام\",\r\n                            text: \"اطلاعیه جدیدی وجود ندارد.\",\r\n                        }]);\r\n                    }\r\n                }\r\n            } catch (err) {\r\n                // show error message within \r\n                setNotices([\r\n                    {\r\n                        title: \"خطا\",\r\n                        text: \"...مشکلی حین بارگذاری اطلاعیه ها پیش آمد. دوباره امتحان کنید\",\r\n                    },\r\n                ]);\r\n            }\r\n        })();\r\n        \r\n    }, []);\r\n\r\n    return (\r\n        <Card className=\"notice-sidebar animated-form\" border=\"success\">\r\n            <Card.Header className=\"text-center text-success\">\r\n                اطلاعیه ها\r\n            </Card.Header>\r\n            <Card.Body className=\"text-right\">\r\n                {Boolean(notices.length) && notices.map((notice) => {\r\n                    return (\r\n                        <Fragment key={uuidv1()}>\r\n                            <Alert variant=\"info\">\r\n                                <i\r\n                                    className=\"fa fa-rss px-3\"\r\n                                    aria-hidden=\"true\"></i>\r\n                                <span\r\n                                    style={{ color: \"red\", fontSize: \"18px\" }}>\r\n                                    {notice.title}\r\n                                </span>\r\n                                : {notice.text}\r\n                            </Alert>\r\n                            <hr />\r\n                        </Fragment>\r\n                    );\r\n                })}\r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default NoticeSideBar;\r\n","import { Badge, Card, Col, ListGroup, Row } from \"react-bootstrap\";\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst OnlineStatistics = () => {\r\n    const {players, games} = useSelector((state) => state.statistics);\r\n    return (\r\n        <ListGroup className=\"list-group list-group-flush\">\r\n            <ListGroup.Item className=\"bg-transparent\">\r\n                <Row>\r\n                    <Col xs={8}>\r\n                        <Card.Text className=\"w-100 text-right\">\r\n                            <i\r\n                                className=\"fa fa-wifi px-2\"\r\n                                aria-hidden=\"true\"></i>\r\n                            کاربران آنلاین\r\n                        </Card.Text>\r\n                    </Col>\r\n                    <Col>\r\n                        <Badge className=\"player-badge-font-size\" variant=\"info\" pill>\r\n                            {players}\r\n                        </Badge>\r\n                    </Col>\r\n                </Row>\r\n            </ListGroup.Item>\r\n            <ListGroup.Item className=\"bg-transparent\">\r\n                <Row>\r\n                    <Col xs={8}>\r\n                        <Card.Text className=\"w-100 text-right\">\r\n                            <i\r\n                                className=\"fa fa-gamepad px-2\"\r\n                                aria-hidden=\"true\"></i>\r\n                            بازی های درجریان\r\n                        </Card.Text>\r\n                    </Col>\r\n                    <Col>\r\n                        <Badge className=\"player-badge-font-size\" variant=\"info\" pill>\r\n                            {games}\r\n                        </Badge>\r\n\r\n                    </Col>\r\n                </Row>\r\n            </ListGroup.Item>\r\n        </ListGroup>\r\n    );\r\n};\r\n\r\nexport default OnlineStatistics;\r\n","import { Alert, Button, Form, Row, Col } from \"react-bootstrap\";\r\nimport { useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { SendMessageTo } from \"../globals/redux/actions/message\";\r\nconst GameChatBox = ({ friendID }) => {\r\n\tconst [myMessage, setMyMessage] = useState(\"\");\r\n\tconst message = useSelector((state) => state.message);\r\n\tconst dispatch = useDispatch();\r\n\tconst me = useSelector((state) => state.me);\r\n\r\n\tconst composeMessage = (event) => {\r\n\t\tif (myMessage) {\r\n\t\t\t//if message is not empty\r\n\t\t\tevent.preventDefault();\r\n\t\t\tdispatch(SendMessageTo(me.fullname, friendID, myMessage));\r\n\t\t\tsetMyMessage(\"\");\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Form onSubmit={(event) => composeMessage(event)}>\r\n\t\t\t<Row className=\"w-100 mt-3 mx-auto\">\r\n\t\t\t\t<Alert className=\"w-100 text-right\" variant=\"info\">\r\n\t\t\t\t\t{message && message.recieved ? (\r\n\t\t\t\t\t\tmessage.recieved.text\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<p className=\"p-1\"> </p>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</Alert>\r\n\t\t\t</Row>\r\n\t\t\t<Row className=\"w-100 p-0 m-0\">\r\n\t\t\t\t<Col lg={2} md={3} className=\"m-0 p-0 text-center\">\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\tclassName=\"w-100 mx-auto\"\r\n\t\t\t\t\t\tvariant=\"outline-info\">\r\n\t\t\t\t\t\t<i className=\"fa fa-paper-plane\" aria-hidden=\"true\"></i>\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col lg={10} md={9} className=\"m-0 p-0 w-100\">\r\n\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\tclassName=\"p-0 w-100 bg-transparent chat-room-message-box\r\n                                    mx-auto text-right\"\r\n\t\t\t\t\t\tvalue={myMessage}\r\n\t\t\t\t\t\tonChange={(e) => setMyMessage(e.target.value)}\r\n\t\t\t\t\t\tplaceholder=\"پیام...\"></Form.Control>\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t</Form>\r\n\t);\r\n};\r\n\r\nexport default GameChatBox;\r\n","import { Card, Col, Alert, ListGroup, Button, Image } from \"react-bootstrap\";\r\nimport OnlineStatistics from \"./OnlineStatistics\";\r\nimport { SendFriendRequestTo } from \"../globals/redux/actions/tools\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useEffect, useState } from \"react\";\r\nimport userServices from \"./../services/http/userServices\";\r\nimport Configs, { Status } from \"../services/configs\";\r\nimport GameChatBox from \"../chat/GameChatBox\";\r\nimport Record from \"../profile/friendgames/Record\";\r\nimport { Sorry } from \"../tools/notification\";\r\n\r\nconst PlayerInfoSideBar = (props) => {\r\n\tconst me = useSelector((state) => state.me);\r\n\tconst scoreboard = useSelector((state) => state.scoreboard);\r\n\tconst tools = useSelector((state) => state.tools);\r\n\tconst dispatch = useDispatch();\r\n\tconst [personIsFriend, setPersonIsFriend] = useState(false);\r\n\r\n\tconst { fullname, userID, records, avatar } = props.person\r\n\t\t? props.person\r\n\t\t: me;\r\n\tconst [piece, setPiece] = useState(null); //piece === mohreh\r\n\tconst thisIsMe = me && userID === me.userID;\r\n\tuseEffect(() => {\r\n\t\tsetPiece(!thisIsMe ? scoreboard.opp : scoreboard.me);\r\n\t}, [thisIsMe, scoreboard]);\r\n\r\n\tconst { recordReloadTrigger } = tools;\r\n\tuseEffect(() => {\r\n\t\tif (!thisIsMe) {\r\n\t\t\t(async () => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tconst { status, data } = await userServices.isMyFriend(\r\n\t\t\t\t\t\tuserID\r\n\t\t\t\t\t);\r\n\t\t\t\t\tif (status === Configs.Status.Successful) {\r\n\t\t\t\t\t\tsetPersonIsFriend(data.isFriend);\r\n\t\t\t\t\t}\r\n\t\t\t\t} catch (err) {\r\n\t\t\t\t\t// handle error.\r\n\t\t\tif (!Status.isErrorExpected(err))\r\n\t\t\t\t\tSorry(\"برقراری ارتباط با سرور موفقیت امیز نبود.لطفا از ارتباط اینترنتی خود اطمینان حاصل کنید.\");\r\n\t\t\t\t\tconsole.log(err);\r\n\t\t\t\t}\r\n\t\t\t})();\r\n\t\t}\r\n\t}, [userID, thisIsMe, recordReloadTrigger]);\r\n\r\n\tconst onFriendRequestClick = (event) => {\r\n\t\tevent.target.innerHTML = \"ارسال شد...\";\r\n\t\tevent.target.disabled = true;\r\n\t\tdispatch(SendFriendRequestTo(userID));\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Card border=\"info\" className=\"player-info-sidebar animated-form\">\r\n\t\t\t<Card.Header className=\"text-center text-info form-inline\">\r\n\t\t\t\t<Col>\r\n\t\t\t\t\t<Card.Text className=\"text-left\">{fullname}</Card.Text>\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col>\r\n\t\t\t\t\t<Image\r\n\t\t\t\t\t\tclassName=\"player-avatar\"\r\n\t\t\t\t\t\tsrc={avatar}\r\n\t\t\t\t\t\troundedCircle\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Col>\r\n\t\t\t</Card.Header>\r\n\r\n\t\t\t<Card.Body>\r\n\t\t\t\t<ListGroup className=\"list-group list-group-flush\">\r\n\t\t\t\t\t{piece && (\r\n\t\t\t\t\t\t<ListGroup.Item>\r\n\t\t\t\t\t\t\t<Alert variant={piece.index ? \"danger\" : \"primary\"}>\r\n\t\t\t\t\t\t\t\t<Alert.Heading className=\"text-center\">\r\n\t\t\t\t\t\t\t\t\t{piece.score} : {piece.shape}\r\n\t\t\t\t\t\t\t\t</Alert.Heading>\r\n\t\t\t\t\t\t\t</Alert>\r\n\t\t\t\t\t\t</ListGroup.Item>\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t<Record small title=\"امتیاز بازیکن\">\r\n\t\t\t\t\t\t{records.points}\r\n\t\t\t\t\t</Record>\r\n\t\t\t\t\t<Record small title=\"تعداد بردها\">\r\n\t\t\t\t\t\t{records.wins}\r\n\t\t\t\t\t</Record>\r\n\t\t\t\t\t<Record small title=\"تعداد تساوی\">\r\n\t\t\t\t\t\t{records.draws}\r\n\t\t\t\t\t</Record>\r\n\t\t\t\t\t<Record small title=\"تعداد باخت ها\">\r\n\t\t\t\t\t\t{records.loses}\r\n\t\t\t\t\t</Record>\r\n\t\t\t\t</ListGroup>\r\n\t\t\t</Card.Body>\r\n\t\t\t<Card.Footer>\r\n\t\t\t\t{thisIsMe ? (\r\n\t\t\t\t\t<OnlineStatistics />\r\n\t\t\t\t) : personIsFriend ? (\r\n\t\t\t\t\t<GameChatBox friendID={userID} />\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tvariant={\"outline-info\"}\r\n\t\t\t\t\t\tblock\r\n\t\t\t\t\t\tonClick={(event) => onFriendRequestClick(event)}>\r\n\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\tclassName=\"fa fa-handshake-o px-2\"\r\n\t\t\t\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t\t\t\t\tدرخواست دوستی\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t)}\r\n\t\t\t</Card.Footer>\r\n\t\t</Card>\r\n\t);\r\n};\r\n\r\nexport default PlayerInfoSideBar;\r\n","import SignInSideBar from \"../sidebars/SignInSideBar\";\r\nimport NoticeSideBar from \"../sidebars/NoticeSideBar\";\r\nimport { withRouter } from \"react-router\";\r\nimport PlayerInfoSideBar from \"../sidebars/PlayerInfoSideBar\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Fragment, useState, useEffect, useContext } from \"react\";\r\nimport { Col, Container, Row } from \"react-bootstrap\";\r\nimport { Devices, Routes } from \"../services/configs\";\r\nimport AutoSignIn from \"../users/AutoSignIn\";\r\nimport GlobalContext from \"../globals/state/GlobalContext\";\r\n\r\nconst MainLayout = (props) => {\r\n\tconst context = useContext(GlobalContext);\r\n\tconst { pathname } = props.location;\r\n\t//redux\r\n\tconst me = useSelector((state) => state.me);\r\n\tconst opponent = useSelector((state) => state.opponent);\r\n\r\n\tconst [leftSideBar, setLeftSideBar] = useState(null);\r\n\tconst [rightSideBar, setRightSideBar] = useState(null);\r\n\r\n\t//teste\r\n\t//determine sidebar\r\n\tconst {device} = context;\r\n\tuseEffect(() => {\r\n\t\tsetLeftSideBar(<NoticeSideBar />);\r\n\t\tconst setPrimaryRightSideBar = () => {\r\n\t\t\t// if (device !== Devices.Tablet)\r\n\t\t\t\tsetRightSideBar(\r\n\t\t\t\t\tme ? <PlayerInfoSideBar /> : <SignInSideBar />\r\n\t\t\t\t);\r\n\t\t\t// else setRightSideBar(null);\r\n\t\t};\r\n\t\tif (pathname === Routes.Client.SignUp) {\r\n\t\t\tsetRightSideBar(null);\r\n\t\t\tsetLeftSideBar(null);\r\n\t\t} else if (pathname === Routes.Client.GameDeck) {\r\n\t\t\t// EDIT THIS..\r\n\t\t\t// ON REFRESH -> rightSideBar is null!\r\n\t\t\t// SOMETIMES: ERROR: cannout read .fullname of undefined person\r\n\t\t\tsetPrimaryRightSideBar();\r\n\t\t\tif (opponent) {\r\n\t\t\t\tif (device !== Devices.SmartPhone) {\r\n\t\t\t\t\tsetLeftSideBar(<PlayerInfoSideBar person={opponent} />);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tsetLeftSideBar(null);\r\n\t\t\t\t\tsetRightSideBar(null);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tsetLeftSideBar(<NoticeSideBar />); //EDIT THIS\r\n\t\t\tsetPrimaryRightSideBar();\r\n\t\t}\r\n\t}, [me, opponent, pathname, device]);\r\n\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t<AutoSignIn />\r\n\t\t\t{context.device !== Devices.SmartPhone ? (\r\n\t\t\t\t<Row className=\"w-100 mx-auto p-0\">\r\n\t\t\t\t\t{context.device === Devices.Desktop && <Col lg={3}>{rightSideBar}</Col>}\r\n\t\t\t\t\t<Col\r\n\t\t\t\t\t\tclassName=\"mx-auto\"\r\n\t\t\t\t\t\tlg={pathname !== Routes.Client.SignUp ? null : 7}>\r\n\t\t\t\t\t\t{props.children}\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t{leftSideBar && (\r\n\t\t\t\t\t\t<Col className=\"p-0 pl-2\" lg={3} md={4}>\r\n\t\t\t\t\t\t\t{context.device === Devices.Tablet && rightSideBar}\r\n\t\t\t\t\t\t\t{leftSideBar}\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</Row>\r\n\t\t\t) : (\r\n\t\t\t\t<Container>\r\n\t\t\t\t\t{/* what to do for control panelk sidebar in smartphone */}\r\n\t\t\t\t\t{me ? (\r\n\t\t\t\t\t\t<Row className=\"w-100 mx-auto\">{rightSideBar}</Row>\r\n\t\t\t\t\t) : null}\r\n\t\t\t\t\t<Row className=\"w-100 mx-auto\">{leftSideBar}</Row>\r\n\t\t\t\t\t<Row className=\"w-100 mx-auto\">{props.children}</Row>\r\n\t\t\t\t</Container>\r\n\t\t\t)}\r\n\t\t</Fragment>\r\n\t);\r\n};\r\n\r\nexport default withRouter(MainLayout);\r\n","import {browserStorage, Routes} from '../configs';\r\n\r\nexport const createSocketRequest = (request, rname, msg) =>\r\n    JSON.stringify({\r\n        request,\r\n        rname,\r\n        token: browserStorage.TOKEN(),\r\n        msg,\r\n    });\r\n\r\nexport const connect = (room) => {\r\n    return new Promise((resolve, reject) => {\r\n        var server = new WebSocket(`${Routes.Server.WebSocketRoot}/${Routes.Server.wsGamePlayRoute}`);\r\n        server.onopen = () => {\r\n            server.send(createSocketRequest(\"join\", room.name, {gameType: room.type, scoreless: room.scoreless})); //temp\r\n            resolve(server);\r\n        };\r\n\r\n        server.onerror = (error) => {\r\n            // console.log(`WebSocket error: ${error}`);\r\n            server.close();\r\n            reject(error);\r\n        };\r\n\r\n        server.onclose = () => {\r\n            \r\n            resolve(null);\r\n            // this part needs editing ? maybe not\r\n        };\r\n    });\r\n};\r\n","//ONLY for class components: purpose: using redux in class components\r\nimport { connect } from \"react-redux\";\r\nimport { UpdateScoreboard, EnterRoom, CloseOngoingGame, RegisterMultiplayer } from \"./actions/game\";\r\nimport { LoadThisPlayer } from \"./actions/player\";\r\nimport { RegisterSinglePlayer } from './actions/game';\r\n\r\n// useSelector for functional components\r\n// state==>props : redux\r\n\r\nfunction withReduxDashboard(component) {\r\n    const mapStateToProps = (state) => ({\r\n        me: state.me,\r\n        opponent: state.opponent,\r\n        room: state.room,\r\n        scoreboard: state.scoreboard,\r\n        tools: state.tools,\r\n        game: state.game\r\n    });\r\n\r\n    const mapDispatchToProps = (dispatch) => ({\r\n        LoadThisPlayer: (userID) => dispatch(LoadThisPlayer(userID)),\r\n        EnterRoom: (room) => dispatch(EnterRoom(room)),\r\n        UpdateScoreboard: (details) => dispatch(UpdateScoreboard(details)),\r\n        RegisterMultiplayer: (gameID) => dispatch(RegisterMultiplayer(gameID)),\r\n        CloseOngoingGame: () => dispatch(CloseOngoingGame()),\r\n        RegisterSinglePlayer: (dimension, scoreless, difficulty) => dispatch(RegisterSinglePlayer(dimension, scoreless, difficulty))\r\n    });\r\n    return connect(mapStateToProps, mapDispatchToProps)(component);\r\n}\r\n\r\nexport default withReduxDashboard;","import { Card, Col, Row } from \"react-bootstrap\";\r\nimport { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { T3DLogic } from \"./GameLogics\";\r\n\r\nconst BriefScoreboard = ({ timeRemaining, players, turn }) => {\r\n    const [timeStamp, setTimeStamp] = useState(null);\r\n    const aThird = T3DLogic.Rules.TurnTimeOut / 3;\r\n    useEffect(() => {\r\n        let color = null,\r\n            icon = null;\r\n        if (timeRemaining) {\r\n            if (timeRemaining >= aThird) {\r\n                color = \"text-success\";\r\n                icon = (\r\n                    <i\r\n                        className=\"fa fa-hourglass-start px-2\"\r\n                        aria-hidden=\"true\"\r\n                    ></i>\r\n                );\r\n            } else {\r\n                color = \"text-danger\";\r\n                icon = (\r\n                    <i\r\n                        className=\"fa fa-hourglass-half px-2\"\r\n                        aria-hidden=\"true\"\r\n                    ></i>\r\n                );\r\n            }\r\n        } else {\r\n            color = \"text-dark\";\r\n            icon = (\r\n                <i className=\"fa fa-hourglass-end px-2\" aria-hidden=\"true\"></i>\r\n            );\r\n        }\r\n        setTimeStamp(\r\n            <div className={color}>\r\n                {icon}\r\n                {timeRemaining} : {players[turn].shape}\r\n            </div>\r\n        );\r\n    }, [timeRemaining, aThird, players, turn]);\r\n\r\n    return (\r\n        <Card.Header className=\"w-100 text-center\">\r\n            <Row style={{ fontSize: \"20px\" }}>\r\n                <Col\r\n                    style={{\r\n                        textAlign: \"right\",\r\n                        color: players[1].color,\r\n                    }}\r\n                >\r\n                    {players[1].shape} : {players[1].score}\r\n                </Col>\r\n                <Col>{timeStamp}</Col>\r\n                <Col\r\n                    style={{\r\n                        textAlign: \"left\",\r\n                        color: players[0].color,\r\n                    }}\r\n                >\r\n                    {players[0].score} : {players[0].shape}\r\n                </Col>\r\n            </Row>\r\n        </Card.Header>\r\n    );\r\n};\r\n\r\nexport default BriefScoreboard;\r\n","import { Fragment, useEffect, useState } from \"react\";\r\nimport { Button, Card, Row } from \"react-bootstrap\";\r\nimport BriefScoreboard from \"./BriefScoreboard\";\r\nimport \"../games.css\";\r\n\r\nconst TableDesign = ({\r\n    timeRemaining,\r\n    dimension,\r\n    players,\r\n    table,\r\n    turn,\r\n    onEachCellClick,\r\n}) => {\r\n    let dimens = [];\r\n    const [cell, setCell] = useState(null);\r\n    for (let i = 0; i < dimension; i++) dimens.push(i);\r\n\r\n    useEffect(() => {\r\n        const cellWidths = [70, 65, 60, 55, 50, 45, 40, 35, 30, 25];\r\n        const cellHeights = [45, 40, 35, 30, 29, 28];\r\n        const deviceWidth = window.innerWidth,\r\n            deviceHeight = window.innerHeight;\r\n        /* first decide cell height, margin nearly equals to height */\r\n        let width = cellWidths[cellWidths.length - 1],\r\n            height = cellHeights[cellHeights.length - 1],\r\n            margin = cellHeights[cellHeights.length - 1],\r\n            fontSize = 25;\r\n        for (const h of cellHeights) {\r\n            if (h * dimension * dimension <= deviceHeight * 0.75) {\r\n                margin = height = h;\r\n                break;\r\n            }\r\n        }\r\n        for (const w of cellWidths) {\r\n            if ((w + margin) * (dimension + 1) <= deviceWidth) {\r\n                width = w;\r\n                break;\r\n            }\r\n        }\r\n\r\n        //find better scaling for font size?\r\n        if (height < 30 || width < 40) fontSize = 15;\r\n        else if (height < 40 || width < 60) fontSize = 20;\r\n        else fontSize = 25;\r\n        setCell({ width, height, margin, fontSize });\r\n    }, [dimension]);\r\n    //prop drilling in BriefScoreBoard\r\n    return (\r\n        <Card bg=\"transparent\" border=\"dark\" className=\"w-100 mt-2 mx-auto\">\r\n            <BriefScoreboard\r\n                timeRemaining={timeRemaining}\r\n                turn={turn}\r\n                players={players}\r\n            />\r\n            <Card.Body className=\"game-border-card\">\r\n                {table && cell ? (\r\n                    dimens.map((floor) => (\r\n                        <Fragment>\r\n                            {dimens.map((row) => (\r\n                                <Row\r\n                                    style={{\r\n                                        direction: \"ltr\",\r\n                                        marginLeft: `${cell.margin * row}px`,\r\n                                    }}\r\n                                >\r\n                                    {dimens.map((column) => (\r\n                                        <Button\r\n                                            key={\r\n                                                floor * dimension * dimension +\r\n                                                row * dimension +\r\n                                                column\r\n                                            }\r\n                                            variant=\"border-dark\"\r\n                                            className=\"game-table-cells\"\r\n                                            style={{\r\n                                                width: `${cell.width}px`,\r\n                                                height: `${cell.height}px`,\r\n                                                fontSize: `${cell.fontSize}px`,\r\n                                                color: table[floor][row][column]\r\n                                                    ? players[\r\n                                                          table[floor][row][\r\n                                                              column\r\n                                                          ] - 1\r\n                                                      ].color\r\n                                                    : null,\r\n                                            }}\r\n                                            id={\r\n                                                floor * dimension * dimension +\r\n                                                row * dimension +\r\n                                                column\r\n                                            }\r\n                                            onClick={(event) =>\r\n                                                onEachCellClick(event)\r\n                                            }\r\n                                        >\r\n                                            {table[floor][row][column] &&\r\n                                                players[\r\n                                                    table[floor][row][column] -\r\n                                                        1\r\n                                                ].shape}\r\n                                        </Button>\r\n                                    ))}\r\n                                </Row>\r\n                            ))}\r\n                            <br />\r\n                        </Fragment>\r\n                    ))\r\n                ) : (\r\n                    <p className=\"text-center\"> در حال اتصال... </p>\r\n                )}\r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default TableDesign;\r\n","import { Component } from \"react\";\r\nimport \"../games.css\";\r\nimport {\r\n    connect,\r\n    createSocketRequest,\r\n} from \"../../services/ws/gamePlaySocketServices\";\r\nimport withReduxDashboard from \"../../globals/redux/withReduxDashboard\";\r\nimport { withRouter } from \"react-router\";\r\nimport TableDesign from \"./TableDesign\";\r\nimport { Routes } from \"../../services/configs\";\r\nimport { Attention, Notify } from \"../../tools/notification\";\r\nimport { toTimeShort } from \"../../tools/format\";\r\nimport { T3DLogic } from \"./GameLogics\";\r\nclass MultiGamePlay extends Component {\r\n    state = {\r\n        players: [\r\n            {\r\n                // ID: '',\r\n                shape: <i className=\"fa fa-times\" aria-hidden=\"true\" />, // \"X\" : some device may not support font-awsome\r\n                text: \"X\",\r\n                color: \"blue\",\r\n                lineColor: \"primary\",\r\n                score: 0,\r\n            },\r\n            {\r\n                // ID: '',\r\n                shape: <i className=\"fa fa-sun-o\" aria-hidden=\"true\" />, // \"O\" : some device may not support font-awsome\r\n                text: \"O\",\r\n                color: \"darkred\",\r\n                lineColor: \"danger\",\r\n                score: 0,\r\n            },\r\n        ], // maybe use player actual user name and change this item to an object of objects?\r\n        turn: 0, // start turn is decided by throwning dices\r\n        dimension: 3,\r\n        table: null,\r\n        myTurn: undefined, // change this\r\n        socketGamePlay: undefined,\r\n        playerOnline: true,\r\n        timeRemaining: 0, //create a config\r\n        deadlineID: null,\r\n        connectionCheckTimerID: null,\r\n    };\r\n\r\n    constructor() {\r\n        super();\r\n        this.cellButtons = [];\r\n    }\r\n\r\n    updateGameScorebaord = () => {\r\n        const { myTurn, players } = this.state;\r\n        const oppTurn = Number(!myTurn);\r\n\r\n        this.props.UpdateScoreboard({\r\n            me: {\r\n                index: myTurn,\r\n                shape: players[myTurn].shape,\r\n                score: players[myTurn].score,\r\n            },\r\n            opp: {\r\n                index: oppTurn,\r\n                shape: players[oppTurn].shape,\r\n                score: players[oppTurn].score,\r\n            },\r\n        });\r\n    };\r\n\r\n    synchronizeDeadline = (t0) => {\r\n        const remaining = T3DLogic.Rules.TurnTimeOut - (Date.now() - t0) / 1000;\r\n        this.setState({ timeRemaining: Math.floor(remaining) });\r\n        //is it needed to declare deadlineID as state?\r\n        if (this.state.deadlineID) clearInterval(this.state.deadlineID);\r\n        const deadlineID = setInterval(() => {\r\n            const { timeRemaining, deadlineID } = this.state;\r\n            if (timeRemaining > 0)\r\n                this.setState({ timeRemaining: timeRemaining - 1 });\r\n            else {\r\n                const { socketGamePlay } = this.state;\r\n                const { room } = this.props;\r\n                clearInterval(deadlineID);\r\n                this.setState({ deadlineID: null });\r\n                socketGamePlay.send(\r\n                    createSocketRequest(\"ban_move\", room.name, null)\r\n                );\r\n            }\r\n        }, 1000);\r\n        this.setState({ deadlineID });\r\n    };\r\n\r\n    updatePlayerStates = ({ turn, xScore, oScore }) => {\r\n        const players = [...this.state.players];\r\n        players[0].score = xScore;\r\n        players[1].score = oScore;\r\n        this.setState({\r\n            players,\r\n            turn,\r\n        });\r\n        this.updateGameScorebaord();\r\n    };\r\n\r\n    disableAllTimers = () => {\r\n        const { connectionCheckTimerID, deadlineID } = this.state;\r\n        clearTimeout(connectionCheckTimerID);\r\n        clearTimeout(deadlineID); //move time out timer\r\n    };\r\n\r\n    socketOnMessage = (response) => {\r\n        const { data } = response;\r\n        const { cmd, msg } = JSON.parse(data);\r\n        const { surrender } = this.props;\r\n        if (this.props.location.pathname === Routes.Client.GameDeck) {\r\n            if (cmd === \"START\") {\r\n                const startTime = toTimeShort(msg);\r\n                //edit !surrender part\r\n                const { players, myTurn } = this.state;\r\n                if (!surrender) {\r\n                    Notify(`بازی راس ساعت ${startTime} آغاز شد.`);\r\n                    Attention(`مهره ی شما: ${players[myTurn].text}`);\r\n                }\r\n            } else if (cmd === \"REMEMBER\") {\r\n                const { IDs, dimension, myTurn, gameID } = msg;\r\n                this.setState({ dimension, myTurn });\r\n\r\n                const { opponent, LoadThisPlayer, game, RegisterMultiplayer } =\r\n                    this.props;\r\n                const opponentID = IDs[Number(!myTurn)];\r\n                if (!surrender) {\r\n                    //ithink !surrender must be removed\r\n                    //if opponent is not null -> means this was called before and there's no need to run again\r\n                    !opponent && opponentID && LoadThisPlayer(opponentID);\r\n                    !game && gameID && RegisterMultiplayer(gameID);\r\n                }\r\n            } else if (cmd === \"LOAD\") {\r\n                this.updatePlayerStates(msg);\r\n                const { table, t0 } = msg;\r\n                this.setState({ table });\r\n                this.updatePlayerStates(msg);\r\n                this.updateGameScorebaord();\r\n                this.synchronizeDeadline(t0);\r\n            } else if (this.state.table) {\r\n                if (cmd === \"SCORES\") this.updatePlayerStates(msg);\r\n                else if (cmd === \"UPDATE\") {\r\n                    const { room, me } = this.props;\r\n                    const { dimension } = this.state;\r\n                    const { newMove, t0 } = msg;\r\n                    const cellID = Number(newMove.cellIndex);\r\n\r\n                    //*************** */\r\n                    //is this needed to check the move in client? considering that complete check has been made in client\r\n                    //and consder that: checking move in client may cause some bugs\r\n                    //for ex: new move is sent -> and 'cause of some error the cell is not empty\r\n                    //turn is not updated and this player can not make new moves to recieve server's table!!!\r\n                    this.verifyAndApplyTheMove(\r\n                        T3DLogic.getCellCoordinates(cellID, dimension),\r\n                        this.cellButtons[cellID]\r\n                    );\r\n                    //wrap it up this part of UPDATE and LOAD in a method\r\n                    this.updatePlayerStates(newMove);\r\n\r\n                    this.cellButtons[cellID].focus();\r\n                    this.updateGameScorebaord();\r\n\r\n                    // now inform the server that the move is recieved\r\n                    //force connect it?\r\n                    if (newMove.madeBy !== me.userID)\r\n                        this.state.socketGamePlay.send(\r\n                            createSocketRequest(\r\n                                \"move_recieved\",\r\n                                room.name,\r\n                                true\r\n                            )\r\n                        );\r\n                    // server time out is set and now setInterval for this client to show how much time left\r\n                    this.synchronizeDeadline(t0);\r\n                } else if (cmd === \"MOVE_MISSED\") {\r\n                    const { turn, t0 } = msg;\r\n                    //msg --> forced set turn\r\n                    this.setState({ turn });\r\n                    this.synchronizeDeadline(t0);\r\n                } else if (cmd === \"NOT_AUTHORIZED\") {\r\n                    Attention(\"لطفا وارد حساب کاربری خود شوید\");\r\n                    // signOut();\r\n                } else if (cmd === \"END\") {\r\n                    this.updatePlayerStates(msg);\r\n                    T3DLogic.endThisGame(this.state, this.onCloseGame);\r\n                    this.disableAllTimers();\r\n                } else if (cmd === \"CLOSE\") {\r\n                    Attention(\r\n                        \"بدلیل حاضر نبودن هیچ کدام از بازیکینان، بازی شما کنسل شد\"\r\n                    );\r\n                    this.onCloseGame();\r\n                } else if (cmd === \"REGISTER_GAME\") {\r\n                    const { gameID } = msg;\r\n                    gameID && this.props.RegisterMultiplayer(gameID);\r\n                } else {\r\n                    console.log(\"wrong socket request\");\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    forceConnectWS = async (nextJob) => {\r\n        const { room } = this.props;\r\n\r\n        try {\r\n            let socket = await connect(room);\r\n            socket.onmessage = this.socketOnMessage;\r\n            this.setState({ socketGamePlay: socket });\r\n            if (nextJob) nextJob();\r\n        } catch (err) {\r\n            console.log(err);\r\n            // **********************\r\n            //time out must be set with rising time out time to prevent server getting fucked up\r\n            setTimeout(() => {\r\n                console.log(\"rconnecting from GamePlay\");\r\n                this.forceConnectWS(nextJob);\r\n            }, 3000);\r\n        }\r\n    };\r\n\r\n    enableConnectionCheckTimer = () => {\r\n        return setInterval(() => {\r\n            if (window.navigator.onLine) {\r\n                if (!this.state.playerOnline) {\r\n                    // user comming bacvk online just now\r\n                    //player JUST became online\r\n                    this.setState({ playerOnline: true }); // toggle online status\r\n                    this.forceConnectWS(null); // reconnect to gamePlayWebSocket\r\n                }\r\n            } else if (this.state.playerOnline) {\r\n                //player JUST became offline\r\n                this.setState({ playerOnline: false });\r\n            }\r\n        }, 2500); //2.5 sec is it ok?\r\n    };\r\n\r\n    loadCurrentGame = () => {\r\n        const { room, surrender } = this.props;\r\n        console.log(room);\r\n        this.forceConnectWS(() => {\r\n            this.state.socketGamePlay.send(\r\n                createSocketRequest(\"load\", room.name, null)\r\n            );\r\n            if (surrender) {\r\n                this.state.socketGamePlay.send(\r\n                    createSocketRequest(\"surrender\", room.name, true)\r\n                );\r\n            }\r\n        });\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.cellButtons = document.getElementsByClassName(\"game-table-cells\"); // pay attension to searched className! may cause an error\r\n\r\n        const { room } = this.props;\r\n        this.setState({ dimension: room.type });\r\n        this.loadCurrentGame();\r\n\r\n        this.setState({\r\n            connectionCheckTimerID: this.enableConnectionCheckTimer(),\r\n        });\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.disableAllTimers();\r\n    }\r\n\r\n    onEachCellClick = (event) => {\r\n        const { dimension, turn, myTurn } = this.state;\r\n        const { opponent, room } = this.props;\r\n        if (opponent && turn === myTurn) {\r\n            try {\r\n                const selectedCellButton = event.target;\r\n\r\n                const cell = T3DLogic.getCellCoordinates(\r\n                    selectedCellButton.id,\r\n                    dimension\r\n                );\r\n                console.log(selectedCellButton.id, cell);\r\n                if (this.verifyAndApplyTheMove(cell, selectedCellButton)) {\r\n                    //this.forceConnectWS(() => {\r\n                    this.state.socketGamePlay.send(\r\n                        createSocketRequest(\r\n                            \"move\",\r\n                            room.name,\r\n                            selectedCellButton.id\r\n                        )\r\n                    );\r\n                    //});\r\n                }\r\n            } catch (err) {\r\n                console.log(err);\r\n                //load again here?\r\n            }\r\n        }\r\n    };\r\n\r\n    verifyAndApplyTheMove = (cell, cellButton) => {\r\n        const { turn } = this.state;\r\n        console.log(this.state.table);\r\n        let tempTable = [...this.state.table];\r\n        if (tempTable[cell.floor][cell.row][cell.column] === null) {\r\n            tempTable[cell.floor][cell.row][cell.column] = turn + 1; //maybe its better to use players actual Id huh?\r\n            this.setState({ table: tempTable });\r\n            // cellButton.value = players[turn].shape;\r\n            // cellButton.style.color = players[turn].color;\r\n            cellButton.style.opacity = 0.0;\r\n            setTimeout(() => {\r\n                cellButton.className = `game-table-cells player-${\r\n                    turn ? \"o\" : \"x\"\r\n                }-cell animate-new-move`;\r\n                cellButton.style.opacity = 1.0;\r\n            }, 100);\r\n\r\n            T3DLogic.inspectAreaAroundTheCell(\r\n                cell,\r\n                this.state,\r\n                this.connectScoreLines\r\n            );\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n\r\n    // method below: checks each possible line(according to the condition that user gives it),\r\n    // if the line is made colorifies the line and returns 1 ( as one single score for each line checked ), otherwise returns 0\r\n    connectScoreLines = (firstCell, step, index) => {\r\n        const { dimension, turn, players } = this.state;\r\n        const { room } = this.props;\r\n        for (let i = 0; i < dimension; i++) {\r\n            this.cellButtons[\r\n                firstCell + i * step\r\n            ].className = `game-table-cells btn btn-${players[index].lineColor}`;\r\n            !room.scoreless &&\r\n                setTimeout(() => {\r\n                    this.cellButtons[\r\n                        firstCell + i * step\r\n                    ].className = `game-table-cells player-${\r\n                        turn ? \"o\" : \"x\"\r\n                    }-cell`;\r\n                }, 1000 + i * 100);\r\n        }\r\n    };\r\n\r\n    onCloseGame = () => {\r\n        this.state.socketGamePlay.close();\r\n        this.setState({ socketGamePlay: null });\r\n        setTimeout(() => {\r\n            this.props.CloseOngoingGame();\r\n            this.props.history.replace(\"/\"); // in competition mode must be send back to competition page\r\n        }, 3000);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <TableDesign\r\n                dimension={this.state.dimension}\r\n                players={this.state.players}\r\n                table={this.state.table}\r\n                turn={this.state.turn}\r\n                timeRemaining={this.state.timeRemaining}\r\n                onEachCellClick={this.onEachCellClick}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(withReduxDashboard(MultiGamePlay));\r\n","import { Fragment, useState, useEffect, useContext } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Button, Form, InputGroup } from \"react-bootstrap\";\r\nimport LoadingBar from \"../commons/LoadingBar\";\r\nimport { Attention, Notify, OK } from \"../tools/notification\";\r\nimport {\r\n    CloseRandomSearch,\r\n    RepeatRandomSearch,\r\n} from \"../globals/redux/actions/tools\";\r\nimport { EnterRoom } from \"../globals/redux/actions/game\";\r\nimport GlobalContext from \"../globals/state/GlobalContext\";\r\nimport { Routes } from \"../services/configs\";\r\nconst RandomGame = () => {\r\n    const [dimension, setDimension] = useState(4);\r\n    const [isScoreless, setScoreless] = useState(false);\r\n    const me = useSelector((state) => state.me);\r\n    const [searching, setSearching] = useState(false);\r\n    const context = useContext(GlobalContext);\r\n    const dispatch = useDispatch();\r\n    const tools = useSelector((state) => state.tools);\r\n    const room = useSelector((state) => state.room);\r\n\r\n    const onStartGameClick = (event) => {\r\n        event.preventDefault();\r\n        if (me) {\r\n            dispatch(\r\n                EnterRoom({\r\n                    name: null,\r\n                    type: dimension,\r\n                    scoreless: isScoreless,\r\n                })\r\n            );\r\n            dispatch(RepeatRandomSearch());\r\n            setSearching(true);\r\n        }\r\n        // random game:\r\n        else {\r\n            Attention(\"ابتدا باید وارد حساب کاربری خود شوید\");\r\n            context.goTo(Routes.Client.SignUp);\r\n        }\r\n    };\r\n    const { randomSearchRepeats } = tools;\r\n\r\n    useEffect(() => {\r\n        if (searching) {\r\n            if (room.name) {\r\n                OK(\r\n                    \"یک حریف تصادفی پیدا شد ... در صورت تایید هر دو طرف بازی آغاز خواهد شد.\"\r\n                );\r\n                setSearching(false);\r\n            } else if (!randomSearchRepeats) {\r\n                //means no one has been found after a specific amount of time\r\n                Notify(\"حریفی پیدا نشد ... لحظاتی دیگر مجددا تلاش کنید\");\r\n                setSearching(false);\r\n            }\r\n        }\r\n    }, [searching, room.name, randomSearchRepeats]);\r\n    //on destroy\r\n    useEffect(() => {\r\n        return () => {\r\n            setSearching(false); //make sure preloader turns off\r\n            dispatch(CloseRandomSearch());\r\n        };\r\n    }, [dispatch]);\r\n\r\n    return (\r\n        <Fragment>\r\n            <LoadingBar loading={searching} />\r\n            <hr />\r\n            <Form onSubmit={(event) => onStartGameClick(event)}>\r\n                <Form.Group className=\"form-inline\">\r\n                    <Form.Label className=\"pb-2 w-25\">نوع بازی</Form.Label>\r\n                    <InputGroup\r\n                        style={{\r\n                            border: \"1px solid orange\",\r\n                            borderRadius: \"5px\",\r\n                            padding: \"2%\",\r\n                        }}\r\n                    >\r\n                        <InputGroup.Prepend className=\"mx-3\">\r\n                            <InputGroup.Radio\r\n                                value=\"0\"\r\n                                name=\"scoreless\"\r\n                                checked={!isScoreless}\r\n                                onChange={() => setScoreless(false)}\r\n                            />\r\n                            <InputGroup.Text>امتیازی</InputGroup.Text>\r\n                        </InputGroup.Prepend>\r\n                        <InputGroup.Prepend className=\"mx-3\">\r\n                            <InputGroup.Radio\r\n                                value=\"1\"\r\n                                name=\"scoreless\"\r\n                                checked={isScoreless}\r\n                                onChange={() => setScoreless(true)}\r\n                            />\r\n                            <InputGroup.Text>سرعتی</InputGroup.Text>\r\n                        </InputGroup.Prepend>\r\n                    </InputGroup>\r\n                </Form.Group>\r\n                <Form.Group className=\"form-inline\">\r\n                    <Form.Label className=\"pb-2 w-25\">ابعاد جدول</Form.Label>\r\n                    <InputGroup\r\n                        style={{\r\n                            border: \"1px solid orange\",\r\n                            borderRadius: \"5px\",\r\n                            padding: \"2%\",\r\n                        }}\r\n                    >\r\n                        <InputGroup.Prepend className=\"mx-3\">\r\n                            <InputGroup.Radio\r\n                                value=\"3\"\r\n                                name=\"tableDimension\"\r\n                                checked={dimension === 3}\r\n                                onChange={() => setDimension(3)}\r\n                            />\r\n                            <InputGroup.Text>3 * 3 * 3</InputGroup.Text>\r\n                        </InputGroup.Prepend>\r\n                        <InputGroup.Prepend className=\"mx-3\">\r\n                            <InputGroup.Radio\r\n                                value=\"4\"\r\n                                name=\"tableDimension\"\r\n                                checked={dimension === 4}\r\n                                onChange={() => setDimension(4)}\r\n                            />\r\n                            <InputGroup.Text>4 * 4 * 4</InputGroup.Text>\r\n                        </InputGroup.Prepend>\r\n                        <InputGroup.Prepend className=\"mx-3\">\r\n                            <InputGroup.Radio\r\n                                value=\"5\"\r\n                                name=\"tableDimension\"\r\n                                checked={dimension === 5}\r\n                                onChange={() => setDimension(5)}\r\n                            />\r\n                            <InputGroup.Text>5 * 5 * 5</InputGroup.Text>\r\n                        </InputGroup.Prepend>\r\n                    </InputGroup>\r\n                </Form.Group>\r\n                <hr />\r\n                <Button\r\n                    type=\"submit\"\r\n                    className=\"mt-4 animated-button\"\r\n                    block\r\n                    variant=\"success\"\r\n                >\r\n                    <i className=\"fa fa-search px-2\" aria-hidden=\"true\"></i>\r\n                    جستجو\r\n                </Button>\r\n            </Form>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default RandomGame;\r\n","import { Button, Container, Modal, Row, Alert } from \"react-bootstrap\";\r\nimport { useState, Fragment } from \"react\";\r\n\r\nconst ModalContesters = ({ contesters }) => {\r\n\tconst [show, setShow] = useState(false);\r\n\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t<Button\r\n\t\t\t\tblock\r\n\t\t\t\tonClick={() => setShow(true)}\r\n\t\t\t\tvariant=\"outline-secondary\">\r\n\t\t\t\tبازیکنان حاضر\r\n\t\t\t</Button>\r\n\r\n\t\t\t<Modal show={show} onHide={() => setShow(false)}>\r\n\t\t\t\t<Modal.Header closeButton></Modal.Header>\r\n\r\n\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t<Container>\r\n\t\t\t\t\t\t{contesters &&\r\n\t\t\t\t\t\t\tcontesters.map((contester) => (\r\n\t\t\t\t\t\t\t\t<Row className=\" mx-auto text-center animated-button\">\r\n\t\t\t\t\t\t\t\t\t<Alert\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"w-100 mx-auto text-center\"\r\n\t\t\t\t\t\t\t\t\t\tvariant=\"secondary\">\r\n\t\t\t\t\t\t\t\t\t\t{contester.fullname}\r\n\t\t\t\t\t\t\t\t\t</Alert>\r\n\t\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\t\tblock\r\n\t\t\t\t\t\t\t\tclassName=\"text-center animated-button\"\r\n\t\t\t\t\t\t\t\tonClick={() => setShow(false)}\r\n\t\t\t\t\t\t\t\tvariant=\"outline-danger\">\r\n\t\t\t\t\t\t\t\tبستن\r\n\t\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\t\tclassName=\"fa fa-sign-in px-2\"\r\n\t\t\t\t\t\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t</Container>\r\n\t\t\t\t</Modal.Body>\r\n\t\t\t</Modal>\r\n\t\t</Fragment>\r\n\t);\r\n};\r\n\r\nexport default ModalContesters;\r\n","import { Card, Alert, Badge, Row, Col, Button } from \"react-bootstrap\";\r\nimport { Status } from \"../services/configs\";\r\nimport { OK, Sorry } from \"../tools/notification\";\r\nimport leagueServices from \"../services/http/leagueServices\";\r\nimport { useState, useEffect, useContext } from \"react\";\r\nimport ModalContesters from \"./ModalContesters\";\r\nimport GlobalContext from \"./../globals/state/GlobalContext\";\r\n\r\nconst SingleLeagueCard = ({ league, reload }) => {\r\n\tconst Summaries = [\r\n\t\t\"بصورت تصادفی تمامی بازیکنان با هم مسابقه می دهند و بازنده ی هر بازی از جام حذف شده و برنده به مرحله ی بعد صعود می کند. قهرمان این جام فردی است که تمامی حریفانش را شکست دهد.\",\r\n\t\t\"هر بازیکن، با تمامی بازیکنان دیگر، بازی مستقل کرده و بسته به نتیجه ای که کسب می کنند امتیازاتی کسب می کنند. قهرمان این کسابقات، بازیکنی است که در جدول رده بندی نفر اول باشد.\",\r\n\t\t\"این مسابقه، ترکیبی از جام حذفی و لیگ اصلی است. در دور مقدماتی، بازیکنان در گروه بندی اختصاص یافته ی خود، رقابت می کنند. نفر اول و دوم هر گروه به دور دوم این مسابقات که ماهیت حذفی دارد صعود می کنند.\",\r\n\t];\r\n\tconst Colors = [\"dark\", \"primary\", \"success\", \"warning\"];\r\n\tconst [showMore, toggleShow] = useState(false); //show showMore or not?\r\n\tconst [ready, setReady] = useState(false); // if league is ready to play\r\n\tconst context = useContext(GlobalContext);\r\n\r\n\tconst join = async () => {\r\n\t\ttry {\r\n\t\t\tconst { status } = await leagueServices.joinLeague(league.leagueID);\r\n\t\t\tif (status === Status.Successful) {\r\n\t\t\t\tOK(` شما با موفقیت به لیگ ${league.title} ملحق شدید.`);\r\n\t\t\t\treload();\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log(err);\r\n\t\t\tif (err.response.status === Status.MethodNotAllowed)\r\n\t\t\t\tSorry(\r\n\t\t\t\t\t\"پیوستن به این لیگ مجاز نیست. ظرفیت این لیگ تکمیل شده است.\"\r\n\t\t\t\t);\r\n\t\t\telse if (!Status.isErrorExpected(err))\r\n\t\t\t\tSorry(\r\n\t\t\t\t\t\"خطا در برقراری ارتباط ... لطفا ارتباط خود را با اینترنت بررسی کنید.\"\r\n\t\t\t\t);\r\n\t\t}\r\n\t};\r\n\r\n\tconst enter = () => {\r\n\t\t// ask server whether the client is really a contester or not\r\n\t\t// re route the client to league route\r\n\t\t// dispatch a redux contaning leagueID of the league is currntly openning\r\n\t\tcontext.openLeaguePage(league.leagueID);\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tif (\r\n\t\t\tleague &&\r\n\t\t\tleague.contesters &&\r\n\t\t\tleague.contesters.length === league.capacity &&\r\n\t\t\tleague.started\r\n\t\t\t// && !league.finished\r\n\t\t) {\r\n\t\t\t// if capacity is full,\r\n\t\t\t// check if player is in the league => if so then add an option for opening league room\r\n\t\t\tsetReady(true);\r\n\t\t}\r\n\t}, [league]);\r\n\r\n\treturn (\r\n\t\t<div\r\n\t\t\tclassName={`bg-transparent single-league-card border-${\r\n\t\t\t\tColors[league.Mode]\r\n\t\t\t}`}>\r\n\t\t\t<Card.Body\r\n\t\t\t\tonClick={(e) => toggleShow(!showMore)}\r\n\t\t\t\tclassName=\"expand-opacity-animation\">\r\n\t\t\t\t<Card.Title className=\"text-center\">{league.title}</Card.Title>\r\n\t\t\t\t<hr />\r\n\t\t\t\t{!showMore && (\r\n\t\t\t\t\t<Card.Text className=\"league-description-text text-right\">\r\n\t\t\t\t\t\t{Summaries[league.Mode]}\r\n\t\t\t\t\t</Card.Text>\r\n\t\t\t\t)}\r\n\t\t\t\t{showMore && (\r\n\t\t\t\t\t<Alert\r\n\t\t\t\t\t\tclassName=\"text-right w-100\"\r\n\t\t\t\t\t\tpill=\"true\"\r\n\t\t\t\t\t\tvariant=\"info\">\r\n\t\t\t\t\t\t<span className=\"text-center\">\r\n\t\t\t\t\t\t\tظرفیت :\r\n\t\t\t\t\t\t\t<Badge\r\n\t\t\t\t\t\t\t\tstyle={{ fontSize: \"16px\" }}\r\n\t\t\t\t\t\t\t\tclassName=\"mx-2 p-2\"\r\n\t\t\t\t\t\t\t\tvariant=\"primary\"\r\n\t\t\t\t\t\t\t\tpill>\r\n\t\t\t\t\t\t\t\t{league.capacity}\r\n\t\t\t\t\t\t\t</Badge>\r\n\t\t\t\t\t\t\tنفر\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t<hr />\r\n\t\t\t\t\t\t<span className=\"text-center\">\r\n\t\t\t\t\t\t\tجایزه نفر اول :\r\n\t\t\t\t\t\t\t<Badge\r\n\t\t\t\t\t\t\t\tstyle={{ fontSize: \"16px\" }}\r\n\t\t\t\t\t\t\t\tclassName=\"mx-2 p-2\"\r\n\t\t\t\t\t\t\t\tvariant=\"primary\"\r\n\t\t\t\t\t\t\t\tpill>\r\n\t\t\t\t\t\t\t\t{league.prize}\r\n\t\t\t\t\t\t\t</Badge>\r\n\t\t\t\t\t\t\tامتیاز\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t<hr />\r\n\t\t\t\t\t\t<span className=\"text-center\">\r\n\t\t\t\t\t\t\tتعداد شرکت کنندگان :\r\n\t\t\t\t\t\t\t<Badge\r\n\t\t\t\t\t\t\t\tstyle={{ fontSize: \"16px\" }}\r\n\t\t\t\t\t\t\t\tclassName=\"mx-2 p-2\"\r\n\t\t\t\t\t\t\t\tvariant=\"primary\"\r\n\t\t\t\t\t\t\t\tpill>\r\n\t\t\t\t\t\t\t\t{league.contesters.length}\r\n\t\t\t\t\t\t\t</Badge>\r\n\t\t\t\t\t\t\tنفر\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t</Alert>\r\n\t\t\t\t)}\r\n\t\t\t</Card.Body>\r\n\t\t\t{showMore && (\r\n\t\t\t\t<Card.Footer>\r\n\t\t\t\t\t{!ready ? (\r\n\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\tblock\r\n\t\t\t\t\t\t\t\t\tvariant=\"outline-success\"\r\n\t\t\t\t\t\t\t\t\tonClick={join}>\r\n\t\t\t\t\t\t\t\t\tپیوستن\r\n\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t\t<ModalContesters\r\n\t\t\t\t\t\t\t\t\tcontesters={league.contesters}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tblock\r\n\t\t\t\t\t\t\t\tclassName=\"animated-button\"\r\n\t\t\t\t\t\t\t\tvariant=\"primary\"\r\n\t\t\t\t\t\t\t\tonClick={enter}>\r\n\t\t\t\t\t\t\t\tورود به لیگ\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</Card.Footer>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default SingleLeagueCard;\r\n","import { Col, Row, Container } from \"react-bootstrap\";\r\nimport \"./leagues.css\";\r\nimport { useEffect, useState } from \"react\";\r\nimport leagueServices from \"../services/http/leagueServices\";\r\nimport { Status } from \"../services/configs\";\r\nimport { Sorry } from \"../tools/notification\";\r\nimport SingleLeagueCard from \"./SingleLeagueCard\";\r\nimport NoItems from \"../commons/NoItems\";\r\nconst Leagues = () => {\r\n\tconst [leagues, setLeagues] = useState([]);\r\n\tconst [reload, triggerReload] = useState(false); //a trigger for run reload competition and leagues when needed\r\n\tuseEffect(() => {\r\n\t\t(async () => {\r\n\t\t\ttry {\r\n\t\t\t\tconst { data, status } = await leagueServices.listLeagues();\r\n\t\t\t\tif (status === Status.Successful) setLeagues([...data.leagues]);\r\n\t\t\t} catch (err) {\r\n\t\t\t\tif (!Status.isErrorExpected(err))\r\n\t\t\t\t\tSorry(\r\n\t\t\t\t\t\t\"خطا در برقراری ارتباط ... لطفا ارتباط خود را با اینترنت بررسی کنید.\"\r\n\t\t\t\t\t);\r\n\t\t\t}\r\n\t\t})();\r\n\t}, [reload]);\r\n\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t<hr />\r\n\t\t\t{leagues.length ? (\r\n\t\t\t\t<Row>\r\n\t\t\t\t\t{leagues.map((league) => (\r\n\t\t\t\t\t\t<Col className=\"mb-5\" lg={6} md={6} sm={12} xs={12}>\r\n\t\t\t\t\t\t\t<SingleLeagueCard\r\n\t\t\t\t\t\t\t\treload={() => triggerReload(!reload)}\r\n\t\t\t\t\t\t\t\tleague={league}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</Row>\r\n\t\t\t) : (\r\n\t\t\t\t<NoItems>در حال حاضر لیگی برگزار نمی گردد</NoItems>\r\n\t\t\t)}\r\n\t\t</Container>\r\n\t);\r\n};\r\n\r\nexport default Leagues;\r\n","import { T3DLogic } from \"./GameLogics\";\r\nclass ArtificialIntelligence {\r\n    static LEVELS = { Noob: 0, Ordinary: 1, Pro: 2 };\r\n\r\n    constructor(turn, table, level = this.LEVELS.Ordinary, dimenstion = 4) {\r\n        // check level value\r\n        this.level = level;\r\n        this.dimension = dimenstion;\r\n        // this.weights = [...table]; // non-zero cell weights are determined in this list\r\n        // this.table = [...table];\r\n        this.weights = T3DLogic.initiate(dimenstion).table; // non-zero cell weights are determined in this list\r\n        this.table = [...table];\r\n        this.turn = turn;\r\n        this.moves = [];\r\n\r\n        // put a random cell in weights as the ai's first move\r\n    }\r\n\r\n    update = (cell, player) => {\r\n        // save new moves and update ai state\r\n        this.moves.unshift({ ...cell, by: player }); // add new move to the beginning of the array moves\r\n        this.table[cell.floor][cell.row][cell.column] = player + 1;\r\n        this.weigh(cell);\r\n    };\r\n\r\n    weigh = ({ floor, row, column }) => {\r\n        /* update weights of each cell that has intersection with this cell\r\n            note: weight meaning:\r\n                if this cell is full => weight = +-(dimension+1)^3 \r\n                if it has no intersection (or equal intersections with both ai and players cell)=> weight = 0\r\n                if it has intersections => weight = (number of all rival's intersections) - (number of all ai intersections)\r\n                this is beacause we want to put more importance on defending rather than attacking\r\n        */\r\n        const playerInIntersection = this.table[floor][row][column]; // remember: turn is always one less\r\n        const sign = this.turn + 1 === playerInIntersection ? -1 : +1; // connection with ai => sign is negative\r\n        // connection with human player => sign is positive\r\n        // this is just to put more importance on defence than attacking\r\n\r\n        this.weights[floor][row][column] =\r\n            sign *\r\n            ((this.dimension + 1) *\r\n                (this.dimension + 1) *\r\n                (this.dimension + 1));\r\n        // ***NOTE: YOU CAN SKIP THIS UNTIL EMPTIES HAS REACHED TO A CERTAIN VALUE***\r\n        for (let i = 0; i < this.dimension; i++) {\r\n            const value = this.turn + 1 === playerInIntersection ? 0 : +1; // connection with ai => sign is negative\r\n\r\n            if (!this.table[floor][row][i])\r\n                this.weights[floor][row][i] += value;\r\n            if (!this.table[floor][i][column])\r\n                this.weights[floor][i][column] += value;\r\n            if (!this.table[i][row][column])\r\n                this.weights[i][row][column] += value;\r\n            if (row === column) {\r\n                if (!this.table[floor][i][i])\r\n                    this.weights[floor][i][i] += value;\r\n                if (row === floor && !this.table[i][i][i])\r\n                    this.weights[i][i][i] += value;\r\n            }\r\n            if (row + column + 1 === this.dimension) {\r\n                if (!this.table[floor][i][this.dimension - i - 1])\r\n                    this.weights[floor][i][this.dimension - i - 1] += value;\r\n                if (row === floor && !this.table[i][i][this.dimension - i - 1])\r\n                    this.weights[i][i][this.dimension - i - 1] += value;\r\n            }\r\n            if (floor === column && !this.table[i][row][i])\r\n                this.weights[i][row][i] += value;\r\n            if (\r\n                floor + column + 1 === this.dimension &&\r\n                !this.table[i][row][this.dimension - i - 1]\r\n            )\r\n                this.weights[i][row][this.dimension - i - 1] += value;\r\n            if (floor === row && !this.table[i][i][column])\r\n                this.weights[i][i][column] += value;\r\n            if (\r\n                floor + row + 1 === this.dimension &&\r\n                !this.table[i][this.dimension - i - 1][column]\r\n            )\r\n                this.weights[i][this.dimension - i - 1][column] += value;\r\n        }\r\n    };\r\n\r\n    heaviest = () => {\r\n        let floor = -1,\r\n            row = -1,\r\n            column = -1;\r\n        let maxWeight = 0;\r\n        // find the heaviest cell (cell with greatest weight)\r\n        // if there are multi => returns the last heaviest one\r\n        const maxPossibleWeight = Math.pow(this.dimension, 3);\r\n        for (let f = 0; f < this.dimension; f++) {\r\n            for (let r = 0; r < this.dimension; r++) {\r\n                for (let c = 0; c < this.dimension; c++) {\r\n                    const weight = Math.abs(this.weights[f][r][c]);\r\n                    if (\r\n                        weight <= maxPossibleWeight && // this condistion means that the cell is empty\r\n                        weight >= maxWeight\r\n                    ) {\r\n                        floor = f;\r\n                        row = r;\r\n                        column = c;\r\n                        maxWeight = Math.abs(this.weights[floor][row][column]);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return { floor, row, column };\r\n    };\r\n    reaction = () => {\r\n        switch (this.level) {\r\n            case ArtificialIntelligence.LEVELS.Noob:\r\n                // a noob ai just checks 2 last moves\r\n                // last move is made by player\r\n                // do .strike on player moves => defencing\r\n                // the one to last move is made by ai\r\n                // do .strike on ai move means => attacking\r\n                return this.strike() || this.random(); // if there is no strike to do, then do a random move\r\n\r\n            case ArtificialIntelligence.LEVELS.Ordinary:\r\n                // when no strike:=>  weigh all empty cells\r\n                // select a nonzero :\r\n                return this.strike() || this.heaviest() || this.random(); // if there is no strike to do, then do a random move\r\n\r\n            case ArtificialIntelligence.LEVELS.Pro: {\r\n                // :todo\r\n                return null;\r\n            }\r\n            default:\r\n                // todo\r\n                break;\r\n        }\r\n    };\r\n\r\n    strike = () => {\r\n        // depends on whose moves you send this method does defence or attack\r\n        const movesToCheck =\r\n            this.level !== ArtificialIntelligence.LEVELS.Noob\r\n                ? this.moves\r\n                : this.moves.slice(0, 2);\r\n        for (const move of movesToCheck) {\r\n            const { floor, row, column } = move;\r\n            const playerInTheCell = this.table[floor][row][column];\r\n            let count = 0,\r\n                empty = -1; // index of the empty cell in a specific line (floor, row, column line)\r\n\r\n            for (var i = 0; i < this.dimension; i++) {\r\n                if (this.table[floor][row][i] === playerInTheCell) count++;\r\n                // inspect in a row\r\n                else if (!this.table[floor][row][i]) empty = i;\r\n            }\r\n            if (empty >= 0 && count === this.dimension - 1)\r\n                return { floor, row, column: empty };\r\n\r\n            for (i = 0, count = 0, empty = -1; i < this.dimension; i++) {\r\n                if (this.table[floor][i][column] === playerInTheCell) count++;\r\n                // inspect in a column\r\n                else if (!this.table[floor][i][column]) empty = i;\r\n            }\r\n            if (empty >= 0 && count === this.dimension - 1)\r\n                return { floor, row: empty, column };\r\n\r\n            for (i = 0, count = 0, empty = -1; i < this.dimension; i++) {\r\n                if (this.table[i][row][column] === playerInTheCell) count++;\r\n                // inspect in a altitude line\r\n                else if (!this.table[i][row][column]) empty = i;\r\n            }\r\n            if (empty >= 0 && count === this.dimension - 1)\r\n                return { floor: empty, row, column };\r\n\r\n            for (i = 0, count = 0, empty = -1; i < this.dimension; i++) {\r\n                if (\r\n                    row === column &&\r\n                    this.table[floor][i][i] === playerInTheCell\r\n                )\r\n                    count++;\r\n                // inspect in a 2D main diagonal line through the cell's floor\r\n                else if (!this.table[floor][i][i]) empty = i;\r\n            }\r\n            if (empty >= 0 && count === this.dimension - 1)\r\n                return { floor, row: empty, column: empty };\r\n\r\n            for (i = 0, count = 0, empty = -1; i < this.dimension; i++) {\r\n                if (\r\n                    row === floor &&\r\n                    row === column &&\r\n                    this.table[i][i][i] === playerInTheCell\r\n                )\r\n                    count++;\r\n                // inspect in a 3D main diagonal line through the whole this.table\r\n                else if (!this.table[i][i][i]) empty = i;\r\n            }\r\n            if (empty >= 0 && count === this.dimension - 1)\r\n                return {\r\n                    floor: empty,\r\n                    row: empty,\r\n                    column: empty,\r\n                };\r\n\r\n            for (i = 0, count = 0, empty = -1; i < this.dimension; i++) {\r\n                if (\r\n                    row + column + 1 === this.dimension &&\r\n                    this.table[floor][i][this.dimension - i - 1] ===\r\n                        playerInTheCell\r\n                )\r\n                    count++;\r\n                // inpect in a 2D side Diagonal line through the cell's floor\r\n                else if (!this.table[floor][i][this.dimension - i - 1])\r\n                    empty = i;\r\n            }\r\n            if (empty >= 0 && count === this.dimension - 1)\r\n                return {\r\n                    floor,\r\n                    row: empty,\r\n                    column: this.dimension - empty - 1,\r\n                };\r\n\r\n            for (i = 0, count = 0, empty = -1; i < this.dimension; i++) {\r\n                if (\r\n                    row + column + 1 === this.dimension &&\r\n                    row === floor &&\r\n                    this.table[i][i][this.dimension - i - 1] === playerInTheCell\r\n                )\r\n                    count++;\r\n                // inspect in a 3D side diagonal line through the whole this.table\r\n                else if (!this.table[i][i][this.dimension - i - 1]) empty = i;\r\n            }\r\n            if (empty >= 0 && count === this.dimension - 1)\r\n                return {\r\n                    floor: empty,\r\n                    row: empty,\r\n                    column: this.dimension - empty - 1,\r\n                };\r\n\r\n            for (i = 0, count = 0, empty = -1; i < this.dimension; i++) {\r\n                if (\r\n                    floor === column &&\r\n                    this.table[i][row][i] === playerInTheCell\r\n                )\r\n                    count++;\r\n                else if (!this.table[i][row][i]) empty = i;\r\n            }\r\n            if (empty >= 0 && count === this.dimension - 1)\r\n                return {\r\n                    floor: empty,\r\n                    row,\r\n                    column: empty,\r\n                };\r\n\r\n            for (i = 0, count = 0, empty = -1; i < this.dimension; i++) {\r\n                if (\r\n                    floor + column + 1 === this.dimension &&\r\n                    this.table[i][row][this.dimension - i - 1] ===\r\n                        playerInTheCell\r\n                )\r\n                    count++;\r\n                else if (!this.table[i][row][this.dimension - i - 1]) empty = i;\r\n            }\r\n            if (empty >= 0 && count === this.dimension - 1)\r\n                return {\r\n                    floor: empty,\r\n                    row,\r\n                    column: this.dimension - empty - 1,\r\n                };\r\n\r\n            for (i = 0, count = 0, empty = -1; i < this.dimension; i++) {\r\n                if (\r\n                    floor === row &&\r\n                    this.table[i][i][column] === playerInTheCell\r\n                )\r\n                    count++;\r\n                else if (!this.table[i][i][column]) empty = i;\r\n            }\r\n            if (empty >= 0 && count === this.dimension - 1)\r\n                return {\r\n                    floor: empty,\r\n                    row: empty,\r\n                    column,\r\n                };\r\n\r\n            for (i = 0, count = 0, empty = -1; i < this.dimension; i++) {\r\n                if (\r\n                    floor + row + 1 === this.dimension &&\r\n                    this.table[i][this.dimension - i - 1][column] ===\r\n                        playerInTheCell\r\n                )\r\n                    count++;\r\n                else if (!this.table[i][this.dimension - i - 1][column])\r\n                    empty = i;\r\n            }\r\n            if (empty >= 0 && count === this.dimension - 1)\r\n                return {\r\n                    floor: empty,\r\n                    row: this.dimension - empty - 1,\r\n                    column,\r\n                };\r\n        }\r\n        return null;\r\n    };\r\n\r\n    defend = () => {};\r\n\r\n    attack = () => {};\r\n\r\n    random = (dimension) => {\r\n        let floor = 0,\r\n            row = 0,\r\n            column = 0;\r\n        do {\r\n            [floor, row, column] = [1, 2, 3].map((test) =>\r\n                Math.floor(Math.random() * this.dimension)\r\n            );\r\n        } while (this.table[floor][row][column]);\r\n        return { floor, row, column };\r\n    };\r\n}\r\n\r\nexport default ArtificialIntelligence;\r\n","import { Form } from \"react-bootstrap\";\r\nimport { Fragment, useContext } from \"react\";\r\nimport { InputGroup } from \"react-bootstrap\";\r\nimport { useState } from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { RegisterSinglePlayer } from \"./../globals/redux/actions/game\";\r\nimport GlobalContext from \"./../globals/state/GlobalContext\";\r\nimport { Routes } from \"../services/configs\";\r\nimport ArtificialIntelligence from \"./gameplay/ArtificialIntelligence\";\r\nconst SinglePlayer = () => {\r\n    // This game is a game between a player and the artificial intelligense\r\n    const [dimension, setDimension] = useState(4);\r\n    const [isScoreless, setScoreless] = useState(false);\r\n    const [difficulty, setDifficulty] = useState(1);\r\n    const dispatch = useDispatch();\r\n    const context = useContext(GlobalContext);\r\n\r\n    const onStartSinglePlayerClick = async (event) => {\r\n        event.preventDefault();\r\n        try {\r\n            await dispatch(\r\n                RegisterSinglePlayer(dimension, isScoreless, difficulty)\r\n            );\r\n            context.goTo(Routes.Client.SingleGameplay);\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    };\r\n    return (\r\n        <Fragment>\r\n            <hr />\r\n            <Form onSubmit={(event) => onStartSinglePlayerClick(event)}>\r\n                <Form.Group className=\"form-inline\">\r\n                    <Form.Label className=\"pb-2 w-25\">نوع بازی</Form.Label>\r\n                    <InputGroup\r\n                        style={{\r\n                            border: \"1px solid orange\",\r\n                            borderRadius: \"5px\",\r\n                            padding: \"2%\",\r\n                        }}\r\n                    >\r\n                        <InputGroup.Prepend className=\"mx-3\">\r\n                            <InputGroup.Radio\r\n                                value=\"0\"\r\n                                name=\"scoreless\"\r\n                                checked={!isScoreless}\r\n                                onChange={() => setScoreless(false)}\r\n                            />\r\n                            <InputGroup.Text>امتیازی</InputGroup.Text>\r\n                        </InputGroup.Prepend>\r\n                        <InputGroup.Prepend className=\"mx-3\">\r\n                            <InputGroup.Radio\r\n                                value=\"1\"\r\n                                name=\"scoreless\"\r\n                                checked={isScoreless}\r\n                                onChange={() => setScoreless(true)}\r\n                            />\r\n                            <InputGroup.Text>سرعتی</InputGroup.Text>\r\n                        </InputGroup.Prepend>\r\n                    </InputGroup>\r\n                </Form.Group>\r\n                <Form.Group className=\"form-inline\">\r\n                    <Form.Label className=\"pb-2 w-25\">ابعاد جدول</Form.Label>\r\n                    <InputGroup\r\n                        style={{\r\n                            border: \"1px solid orange\",\r\n                            borderRadius: \"5px\",\r\n                            padding: \"2%\",\r\n                        }}\r\n                    >\r\n                        <InputGroup.Prepend className=\"mx-3\">\r\n                            <InputGroup.Radio\r\n                                value=\"3\"\r\n                                name=\"tableDimension\"\r\n                                checked={dimension === 3}\r\n                                onChange={() => setDimension(3)}\r\n                            />\r\n                            <InputGroup.Text>3 * 3 * 3</InputGroup.Text>\r\n                        </InputGroup.Prepend>\r\n                        <InputGroup.Prepend className=\"mx-3\">\r\n                            <InputGroup.Radio\r\n                                value=\"4\"\r\n                                name=\"tableDimension\"\r\n                                checked={dimension === 4}\r\n                                onChange={() => setDimension(4)}\r\n                            />\r\n                            <InputGroup.Text>4 * 4 * 4</InputGroup.Text>\r\n                        </InputGroup.Prepend>\r\n                        <InputGroup.Prepend className=\"mx-3\">\r\n                            <InputGroup.Radio\r\n                                value=\"5\"\r\n                                name=\"tableDimension\"\r\n                                checked={dimension === 5}\r\n                                onChange={() => setDimension(5)}\r\n                            />\r\n                            <InputGroup.Text>5 * 5 * 5</InputGroup.Text>\r\n                        </InputGroup.Prepend>\r\n                    </InputGroup>\r\n                </Form.Group>\r\n                <Form.Group className=\"form-inline\">\r\n                    <Form.Label className=\"pb-2 w-25\">درجه سختی</Form.Label>\r\n                    <InputGroup\r\n                        style={{\r\n                            border: \"1px solid orange\",\r\n                            borderRadius: \"5px\",\r\n                            padding: \"2%\",\r\n                        }}\r\n                    >\r\n                        <InputGroup.Prepend className=\"mx-3\">\r\n                            <InputGroup.Radio\r\n                                value=\"0\"\r\n                                name=\"difficulty\"\r\n                                checked={\r\n                                    difficulty ===\r\n                                    ArtificialIntelligence.LEVELS.Noob\r\n                                }\r\n                                onChange={() =>\r\n                                    setDifficulty(\r\n                                        ArtificialIntelligence.LEVELS.Noob\r\n                                    )\r\n                                }\r\n                            />\r\n                            <InputGroup.Text>راحت</InputGroup.Text>\r\n                        </InputGroup.Prepend>\r\n                        <InputGroup.Prepend className=\"mx-3\">\r\n                            <InputGroup.Radio\r\n                                value=\"1\"\r\n                                name=\"difficulty\"\r\n                                checked={\r\n                                    difficulty ===\r\n                                    ArtificialIntelligence.LEVELS.Ordinary\r\n                                }\r\n                                onChange={() =>\r\n                                    setDifficulty(\r\n                                        ArtificialIntelligence.LEVELS.Ordinary\r\n                                    )\r\n                                }\r\n                            />\r\n                            <InputGroup.Text>\r\n                                متوسط\r\n                            </InputGroup.Text>\r\n                        </InputGroup.Prepend>\r\n                        <InputGroup.Prepend className=\"mx-3\">\r\n                            <InputGroup.Radio\r\n                                value=\"1\"\r\n                                name=\"difficulty\"\r\n                                checked={\r\n                                    difficulty ===\r\n                                    ArtificialIntelligence.LEVELS.Pro\r\n                                }\r\n                                onChange={() =>\r\n                                    setDifficulty(\r\n                                        ArtificialIntelligence.LEVELS.Pro\r\n                                    )\r\n                                }\r\n                            />\r\n                            <InputGroup.Text>سخت</InputGroup.Text>\r\n                        </InputGroup.Prepend>\r\n                    </InputGroup>\r\n                </Form.Group>\r\n                <hr />\r\n                <Button\r\n                    type=\"submit\"\r\n                    className=\"mt-4 animated-button\"\r\n                    block\r\n                    variant=\"success\"\r\n                >\r\n                    <i\r\n                        className=\"fa fa-street-view px-2\"\r\n                        aria-hidden=\"true\"\r\n                    ></i>\r\n                    شروع بازی\r\n                </Button>\r\n            </Form>\r\n        </Fragment>\r\n    );\r\n};\r\nexport default SinglePlayer;\r\n","import MultiGamePlay from \"./gameplay/MultiGamePlay\";\r\nimport { useSelector } from \"react-redux\";\r\nimport RandomGame from \"./RandomGame\";\r\nimport {\r\n  Tab,\r\n  Tabs,\r\n  Card,\r\n  Button,\r\n  Row,\r\n  Col,\r\n  Container,\r\n  Alert,\r\n} from \"react-bootstrap\";\r\nimport { Fragment, useState } from \"react\";\r\nimport Leagues from \"../leagues/Leagues\";\r\nimport SinglePlayer from \"./SinglePlayer\";\r\n\r\nconst GameDeck = () => {\r\n  const room = useSelector((state) => state.room);\r\n  const game = useSelector((state) => state.game);\r\n  const [continueGame, setContinueGame] = useState(false);\r\n  const [surrender, setSurrender] = useState(false);\r\n\r\n  const onSurrenderClick = () => {\r\n    setSurrender(true);\r\n    setContinueGame(true);\r\n  };\r\n\r\n  //***** */ show opponent record before game start choice\r\n  return (\r\n    <Fragment>\r\n      {continueGame && room.name ? (\r\n        <MultiGamePlay surrender={surrender} />\r\n      ) : (\r\n        <Card border=\"secondary\" bg=\"transparent\" className=\"game-deck-card\">\r\n          <Card.Body>\r\n            <Tabs\r\n              transition={false}\r\n              variant=\"pills\"\r\n              // transition={Fade}\r\n              className=\"mb-3\"\r\n            >\r\n              {Boolean(room.name) && (\r\n                <Tab eventKey=\"currentGame\" title=\"بازی کنونی\">\r\n                  <Container>\r\n                    <hr />\r\n                    <Row className=\"justify-content-center\">\r\n                      <Col>\r\n                        <Alert\r\n                          className=\"text-center\"\r\n                          variant=\"primary\"\r\n                        >{`نوع بازی: ${\r\n                          room.scoreless ? \"سرعتی\" : \"امتیازی\"\r\n                        }`}</Alert>\r\n                      </Col>\r\n                      <Col>\r\n                        <Alert\r\n                          className=\"text-center\"\r\n                          variant=\"primary\"\r\n                        >{`ابعاد بازی: ${room.type} * ${room.type} * ${room.type}`}</Alert>\r\n                      </Col>\r\n                    </Row>\r\n                    <hr />\r\n                    <Row>\r\n                      <Col>\r\n                        <Button\r\n                          type=\"submit\"\r\n                          className=\"mt-4 animated-button\"\r\n                          block\r\n                          variant=\"primary\"\r\n                          onClick={() => setContinueGame(true)}\r\n                        >\r\n                          <i\r\n                            className=\"fa fa-gamepad-o px-2\"\r\n                            aria-hidden=\"true\"\r\n                          ></i>\r\n                          {game ? \"ادامه\" : \"شروع\"}\r\n                        </Button>\r\n                      </Col>\r\n                      <Col>\r\n                        <Button\r\n                          type=\"submit\"\r\n                          className=\"mt-4 animated-button\"\r\n                          block\r\n                          variant=\"danger\"\r\n                          onClick={onSurrenderClick}\r\n                        >\r\n                          <i\r\n                            className=\"fa fa-gamepad-o px-2\"\r\n                            aria-hidden=\"true\"\r\n                          ></i>\r\n                          {game ? \"تسلیم\" : \"لغو\"}\r\n                        </Button>\r\n                      </Col>\r\n                    </Row>\r\n                  </Container>\r\n                </Tab>\r\n              )}\r\n              <Tab\r\n                eventKey=\"randomGame\"\r\n                disabled={Boolean(room.name)}\r\n                title=\"بازی تصادفی\"\r\n              >\r\n                <RandomGame />\r\n              </Tab>\r\n              <Tab\r\n                eventKey=\"leagues\"\r\n                disabled={Boolean(room.name)}\r\n                title=\"لیگ ها\"\r\n              >\r\n                <Leagues />\r\n              </Tab>\r\n              <Tab\r\n                eventKey=\"singleplayer\"\r\n                disabled={Boolean(room.name)}\r\n                title=\"تک نفره\"\r\n              >\r\n                <SinglePlayer />\r\n              </Tab>\r\n            </Tabs>\r\n          </Card.Body>\r\n        </Card>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default GameDeck;\r\n","import './info.css'\r\nimport { Card } from 'react-bootstrap';\r\n\r\nconst GameGuide = () => {\r\n    return ( \r\n        <Card border=\"warning\" className=\"simple-single-card\" >\r\n            <Card.Header className=\"text-center\">راهنمای بازی</Card.Header>\r\n            <Card.Body className=\"text-right\">\r\n                <Card.Text>دانشگاه علم و صنعت ایران</Card.Text>\r\n                <Card.Text>E-mail: <a href=\"https://mail.google.com\">thcplusplus@gmail.com</a></Card.Text>\r\n                <Card.Text>Phone Number: 0000000000000</Card.Text>\r\n                <Card.Text>اطلاعات تماس استاد</Card.Text>\r\n                <Card.Text>instagram: ......</Card.Text>\r\n                <Card.Text>blah blah blah</Card.Text>\r\n            </Card.Body>\r\n        </Card>\r\n     );\r\n}\r\n \r\nexport default GameGuide;","import { Card } from 'react-bootstrap';\r\nimport './info.css'\r\n\r\nconst ContactUs = () => {\r\n    return ( \r\n        <Card border=\"dark\" className=\"simple-single-card\" >\r\n            <Card.Header className=\"text-center\">اطلاعات تماس</Card.Header>\r\n            <Card.Body className=\"text-right\">\r\n                <Card.Text>دانشگاه علم و صنعت ایران</Card.Text>\r\n                <Card.Text>E-mail: <a href=\"https://mail.google.com\">thcplusplus@gmail.com</a></Card.Text>\r\n                <Card.Text>Phone Number: 0000000000000</Card.Text>\r\n                <Card.Text>اطلاعات تماس استاد</Card.Text>\r\n                <Card.Text>instagram: ......</Card.Text>\r\n                <Card.Text>blah blah blah</Card.Text>\r\n            </Card.Body>\r\n        </Card>\r\n     );\r\n}\r\n \r\nexport default ContactUs;","import \"./scores.css\";\r\nimport { Component } from \"react\";\r\nimport ScoresTable from \"./ScoresTable\";\r\nimport gameServices from \"../../services/http/gameServices\";\r\nimport Configs, { Status } from \"../../services/configs\";\r\nimport { Button, Col, Container, Row } from \"react-bootstrap\";\r\nimport { Sorry } from \"../../tools/notification\";\r\n\r\nclass ScoresTableContainer extends Component {\r\n\tstate = {\r\n\t\tliveScores: [],\r\n\t\tfinalScores: [],\r\n\t\tshowLiveOnes: false,\r\n\t\tloading: false,\r\n\t};\r\n\r\n\tcomponentDidMount() {\r\n\t\t// get all game results , live or final, handling promises\r\n\t\t// client and server side for this Module seriously need to be edited\r\n\t\t(async () => {\r\n\t\t\tthis.setState({ loading: true }); // use preloader here?\r\n\t\t\tconst { data, status } = await gameServices.getAllGames();\r\n\t\t\tif (status === Configs.Status.Successful) return data.allGames;\r\n\t\t\treturn [];\r\n\t\t})()\r\n\t\t\t.then((result) => {\r\n\t\t\t\tresult = [...result.reverse()];\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tliveScores: result.filter((game) => game.isLive),\r\n\t\t\t\t\tfinalScores: result.filter((game) => !game.isLive),\r\n\t\t\t\t\tloading: false,\r\n\t\t\t\t});\r\n\t\t\t\t//EDIT EDIT EDIT\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\t//******* handle errors */\r\n\t\t\t\t// console.log(err);\r\n\t\t\t\tif (!Status.isErrorExpected(err))\r\n\t\t\t\t\tSorry(\r\n\t\t\t\t\t\t\"بارگذاری لیست بازی ها موفقیت آمیز نبود. لطفا لحظاتی بعد مجددا تلاش کنید.\"\r\n\t\t\t\t\t);\r\n\t\t\t\tthis.setState({ finalScores: [], loading: false });\r\n\t\t\t});\r\n\t}\r\n\r\n\tbtnShowLiveScores = () => {\r\n\t\tthis.setState({ showLiveOnes: true });\r\n\t};\r\n\r\n\tbtnShowFinalScores = () => {\r\n\t\tthis.setState({ showLiveOnes: false });\r\n\t};\r\n\r\n\trender() {\r\n\t\t// game replay? is it a good idea DataBase Size-Wise ? ===> if true: see 1st page of the notebook\r\n\t\t/* add a NextGames button maybe? (گزینه بازی های اینده) */\r\n\t\tlet { liveScores, finalScores, showLiveOnes } = this.state;\r\n\r\n\t\t// DESIGN : USE <Tabs> ???\r\n\t\treturn (\r\n\t\t\t<Container>\r\n\t\t\t\t<Row className=\"scores-mode-select-layout m-0 p-0\">\r\n\t\t\t\t\t<Col className=\"w-100 m-0 p-0 pl-1\">\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tvariant={\r\n\t\t\t\t\t\t\t\tshowLiveOnes\r\n\t\t\t\t\t\t\t\t\t? \"outline-success\"\r\n\t\t\t\t\t\t\t\t\t: \"outline-primary\"\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tclassName=\"scores-mode-select-button\"\r\n\t\t\t\t\t\t\tonClick={this.btnShowLiveScores}>\r\n\t\t\t\t\t\t\tنتایج زنده\r\n\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\tclassName=\"fa fa-play-circle px-3\"\r\n\t\t\t\t\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col className=\"w-100 m-0 p-0 \">\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tvariant={\r\n\t\t\t\t\t\t\t\t!showLiveOnes\r\n\t\t\t\t\t\t\t\t\t? \"outline-success\"\r\n\t\t\t\t\t\t\t\t\t: \"outline-primary\"\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tclassName=\"scores-mode-select-button\"\r\n\t\t\t\t\t\t\tonClick={this.btnShowFinalScores}>\r\n\t\t\t\t\t\t\tنتایج نهایی\r\n\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\tclassName=\"fa fa-check-circle-o px-3\"\r\n\t\t\t\t\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t\t<hr />\r\n\r\n\t\t\t\t<Row>\r\n\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t{/* this single column is to make mode select buttons and ScoresTable same width */}\r\n\t\t\t\t\t\t<ScoresTable\r\n\t\t\t\t\t\t\tscores={showLiveOnes ? liveScores : finalScores}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t</Container>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default ScoresTableContainer;\r\n","import { Button, Form, Modal, Row, Col } from \"react-bootstrap\";\r\nimport { Component, Fragment } from \"react\";\r\nimport userServices from \"../services/http/userServices\";\r\nimport LoadingBar from \"../commons/LoadingBar\";\r\nimport Configs, { browserStorage, Routes } from \"../services/configs\";\r\nimport { Sorry } from \"./../tools/notification\";\r\nimport GlobalContext from './../globals/state/GlobalContext';\r\n\r\nclass ModalSignIn extends Component {\r\n\t// *********************Objectives***********************\r\n\t// 1. handle errors particularly\r\n\tstatic contextType = GlobalContext;\r\n\r\n\tstate = {\r\n\t\tshowModal: false,\r\n\t\tstudentID: \"\",\r\n\t\tpassword: \"\",\r\n\t\tloading: false,\r\n\t};\r\n\r\n\tonCloseClick = () => this.setState({ showModal: false });\r\n\tonShowClick = () => this.setState({ showModal: true });\r\n\r\n\tonSignInSubmitted = async (event) => {\r\n\t\tevent.preventDefault();\r\n\t\tthis.setState({ loading: true });\r\n\t\tconst { studentID, password } = this.state;\r\n\t\tconst user = { studentID: Number(studentID), password };\r\n\t\ttry {\r\n\t\t\tconst { status, data } = await userServices.signIn(user);\r\n\t\t\tif (status === Configs.Status.Successful) {\r\n\t\t\t\tbrowserStorage.save(data.token);\r\n\t\t\t\tthis.context.goTo(Routes.Client.Root);\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\t// check nonserver errors\r\n\t\t\tthis.setState({ password: \"\" });\r\n\t\t\tif (!Configs.Status.isErrorExpected(err))\r\n\t\t\t\tSorry(\"ورود با مشکل مواجه شد. لطفا ارتباط اینترنت خود را بررسی کنید.\");\r\n\t\t}\r\n\t\tthis.setState({ loading: false });\r\n\t};\r\n\r\n\tonForgotPasswordClick = () => {};\r\n\r\n\trender() {\r\n\t\tconst { showModal, studentID, password, loading } = this.state;\r\n\r\n\t\treturn (\r\n\t\t\t<Fragment>\r\n\t\t\t\t<LoadingBar loading={loading} />\r\n\t\t\t\t<Button variant=\"outline-primary\" onClick={this.onShowClick}>\r\n\t\t\t\t\t<i className=\"fa fa-user px-2\" aria-hidden=\"true\"></i>\r\n\t\t\t\t\tورود کاربران\r\n\t\t\t\t</Button>\r\n\r\n\t\t\t\t<Modal\r\n\t\t\t\t\tbackdrop=\"static\"\r\n\t\t\t\t\tshow={showModal}\r\n\t\t\t\t\tonHide={this.onCloseClick}>\r\n\t\t\t\t\t<Modal.Header closeButton></Modal.Header>\r\n\r\n\t\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t\t<Form\r\n\t\t\t\t\t\t\tclassName=\"m-4 text-right\"\r\n\t\t\t\t\t\t\tonSubmit={(event) => this.onSignInSubmitted(event)}>\r\n\r\n\t\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\tclassName=\"text-center txt-shaking\"\r\n\t\t\t\t\t\t\t\t\tplaceholder=\"شماره دانشجویی\"\r\n\t\t\t\t\t\t\t\t\tautoComplete=\"username\"\r\n\t\t\t\t\t\t\t\t\tvalue={studentID}\r\n\t\t\t\t\t\t\t\t\tonChange={(e) =>\r\n\t\t\t\t\t\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t\t\t\t\t\tstudentID: e.target.value,\r\n\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t/>\r\n<br />\r\n\r\n\t\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\t\t\t\tclassName=\"text-center txt-shaking\"\r\n\t\t\t\t\t\t\t\t\tplaceholder=\"رمز عبور\"\r\n\t\t\t\t\t\t\t\t\tautoComplete=\"current-password\"\r\n\t\t\t\t\t\t\t\t\tvalue={password}\r\n\t\t\t\t\t\t\t\t\tonChange={(e) =>\r\n\t\t\t\t\t\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t\t\t\t\t\tpassword: e.target.value,\r\n\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<hr />\r\n\t\t\t\t\t\t\t<Row className=\"p-0\">\r\n\t\t\t\t\t\t\t\t<Col className=\"text-center\">\r\n\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\t\t\t\tblock\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"text-center\"\r\n\t\t\t\t\t\t\t\t\t\tvariant=\"outline-success\">\r\n\t\t\t\t\t\t\t\t\t\tورود\r\n\t\t\t\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"fa fa-sign-in px-2\"\r\n\t\t\t\t\t\t\t\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t<Col className=\"text-center\">\r\n\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\tblock\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"text-center\"\r\n\t\t\t\t\t\t\t\t\t\tvariant=\"outline-warning\"\r\n\t\t\t\t\t\t\t\t\t\tonClick={this.onForgotPasswordClick}>\r\n\t\t\t\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"fa fa-recycle px-2\"\r\n\t\t\t\t\t\t\t\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t\t\t\t\t\t\t\t\tفراموشی رمز\r\n\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t</Form>\r\n\t\t\t\t\t</Modal.Body>\r\n\t\t\t\t</Modal>\r\n\t\t\t</Fragment>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default ModalSignIn;\r\n","import React, { Component } from \"react\";\r\nimport ModalSignIn from \"./ModalSignIn\";\r\nimport \"./users.css\";\r\nimport userServices from \"../services/http/userServices\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport LoadingBar from \"../commons/LoadingBar\";\r\nimport Configs, { browserStorage } from \"../services/configs\";\r\nimport { Card, Form, Button, Row, Col } from \"react-bootstrap\";\r\nimport { Sorry, OK, Attention } from \"../tools/notification\";\r\nimport ReCAPTCHA from \"react-google-recaptcha\";\r\n\r\nclass SignUp extends Component {\r\n\t// *********************Objectives***********************\r\n\t// 1. handle errors particularly\r\n\t// 2. first and last name must be persian text so make the direction correct and force persian chars\r\n\tstate = {\r\n\t\tstudentID: \"\",\r\n\t\tpassword: \"\",\r\n\t\tconfirmPassword: \"\",\r\n\t\tfirstname: \"\",\r\n\t\tlastname: \"\",\r\n\t\temail: \"\",\r\n\t\tloading: false,\r\n\t};\r\n\r\n\tcheckConfirmPassword = (event) => {\r\n\t\tthis.setState({ confirmPassword: event.target.value });\r\n\t\tif (this.state.password !== event.target.value) {\r\n\t\t\tevent.target.setCustomValidity(\r\n\t\t\t\t\"تایید رمز عبور باید با خود رمز عبور مطابقت کامل داشته باشد\"\r\n\t\t\t);\r\n\t\t\t//console.log(password, confirmPassword);\r\n\t\t} else event.target.setCustomValidity(\"\");\r\n\t};\r\n\tonSignUpSubmit = async (event) => {\r\n\t\tevent.preventDefault();\r\n\t\tconst {\r\n\t\t\tstudentID,\r\n\t\t\tpassword,\r\n\t\t\tconfirmPassword,\r\n\t\t\tfirstname,\r\n\t\t\tlastname,\r\n\t\t\temail,\r\n\t\t} = this.state;\r\n\t\tif (firstname.trim().length < 3 || lastname.trim().length < 3) {\r\n\t\t\tSorry(\"نام و نام خانوادگی باید حداقل شام سه حرف فارسی باشد\");\r\n\t\t\tthis.setState({\r\n\t\t\t\tfirstname: firstname.trim(),\r\n\t\t\t\tlastname: lastname.trim(),\r\n\t\t\t});\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (password === confirmPassword) {\r\n\t\t\ttry {\r\n\t\t\t\tthis.setState({ loading: true });\r\n\t\t\t\tconst newUser = {\r\n\t\t\t\t\tstudentID: Number(studentID),\r\n\t\t\t\t\tpassword,\r\n\t\t\t\t\temail,\r\n\t\t\t\t\tfullname: (firstname + \" \" + lastname).replace(/\\s+/g, \" \"), // correct? (iterative?)\r\n\t\t\t\t};\r\n\r\n\t\t\t\tconst { status, data } = await userServices.signUp(newUser);\r\n\r\n\t\t\t\tif (status === Configs.Status.CreatedSuccessfully) {\r\n\t\t\t\t\t//console.log(data);\r\n\t\t\t\t\tOK(\"ثبت نام با موفقیت انجام شد\");\r\n\t\t\t\t\tbrowserStorage.save(data.token);\r\n\t\t\t\t\tthis.props.history.replace(\"/\");\r\n\t\t\t\t\t// this.props.history.replace('/signIn')\r\n\t\t\t\t\t// ******* change server to return user token and auto sign in\r\n\t\t\t\t}\r\n\t\t\t} catch (err) {\r\n\t\t\t\t// console.log(err);\r\n\t\t\t\tthis.setState({ loading: false });\r\n\t\t\t\tif (err && err.response && err.response.status === Configs.Status.Conflict) {\r\n\t\t\t\t\tAttention(\r\n\t\t\t\t\t\t\"اگر رمز عبور خود را فراموش کرده اید، از گزینه بازیابی رمز عبور در صفحه ی ورود استفاده نمایید\"\r\n\t\t\t\t\t);\r\n\t\t\t\t} else if (!Configs.Status.isErrorExpected(err)) {\r\n\t\t\t\t\tSorry(\r\n\t\t\t\t\t\t\"ثبت نام با مشکل رو به رو شد. لطفا دوباره تلاش کتنید\"\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tSorry(\"رمز عبورها مطابقت ندارند\");\r\n\t\t}\r\n\t\tthis.setState({ loading: false });\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst {\r\n\t\t\tstudentID,\r\n\t\t\tpassword,\r\n\t\t\tconfirmPassword,\r\n\t\t\tfirstname,\r\n\t\t\tlastname,\r\n\t\t\temail,\r\n\t\t\tloading,\r\n\t\t} = this.state;\r\n\r\n\t\treturn (\r\n\t\t\t<Card border=\"success\" className=\"sign-up-card animated-form\">\r\n\t\t\t\t<LoadingBar loading={loading} />\r\n\t\t\t\t<Card.Header className=\"bg-transparent text-center border-success\">\r\n\t\t\t\t\tفرم ثبت نام\r\n\t\t\t\t</Card.Header>\r\n\t\t\t\t<Card.Body>\r\n\t\t\t\t\t<Form onSubmit={(event) => this.onSignUpSubmit(event)}>\r\n\t\t\t\t\t\t<Row className=\"mb-3\">\r\n\t\t\t\t\t\t\t<Col md={3} sm={12} xs={12}>\r\n\t\t\t\t\t\t\t\t<Form.Label>نام</Form.Label>\r\n\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\tpattern=\"[آ-ی ]{3,}\" // persian characters and space\r\n\t\t\t\t\t\t\t\t\tonInput={(e) =>\r\n\t\t\t\t\t\t\t\t\t\te.target.setCustomValidity(\"\")\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tonInvalid={(e) =>\r\n\t\t\t\t\t\t\t\t\t\te.target.setCustomValidity(\r\n\t\t\t\t\t\t\t\t\t\t\t\"نام باید با حروف فارسی و با حداقل طول سه حرف باشد\"\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tclassName=\"sign-up-textbox animated-textbox text-center\"\r\n\t\t\t\t\t\t\t\t\tplaceholder=\"First Name\"\r\n\t\t\t\t\t\t\t\t\tvalue={firstname}\r\n\t\t\t\t\t\t\t\t\trequired=\"required\"\r\n\t\t\t\t\t\t\t\t\tonChange={(e) =>\r\n\t\t\t\t\t\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t\t\t\t\t\tfirstname: e.target.value,\r\n\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t</Row>\r\n\r\n\t\t\t\t\t\t<Row className=\"mb-3\">\r\n\t\t\t\t\t\t\t<Col md={3} sm={12} xs={12}>\r\n\t\t\t\t\t\t\t\t<Form.Label>نام خانوادگی</Form.Label>\r\n\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\tclassName=\"sign-up-textbox animated-textbox text-center\"\r\n\t\t\t\t\t\t\t\t\tpattern=\"[آ-ی ]{3,}\" // persian characters and space\r\n\t\t\t\t\t\t\t\t\tonInput={(e) =>\r\n\t\t\t\t\t\t\t\t\t\te.target.setCustomValidity(\"\")\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tonInvalid={(e) =>\r\n\t\t\t\t\t\t\t\t\t\te.target.setCustomValidity(\r\n\t\t\t\t\t\t\t\t\t\t\t\"نام خانوادگی باید با حروف فارسی و با حداقل طول سه حرف باشد\"\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tplaceholder=\"Last Name\"\r\n\t\t\t\t\t\t\t\t\tvalue={lastname}\r\n\t\t\t\t\t\t\t\t\trequired=\"required\"\r\n\t\t\t\t\t\t\t\t\tonChange={(e) =>\r\n\t\t\t\t\t\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t\t\t\t\t\tlastname: e.target.value,\r\n\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t</Row>\r\n\r\n\t\t\t\t\t\t<Row className=\"mb-3\">\r\n\t\t\t\t\t\t\t<Col md={3} sm={12} xs={12}>\r\n\t\t\t\t\t\t\t\t<Form.Label>شماره دانشجویی</Form.Label>\r\n\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\tpattern=\"[0-9]{8}\"\r\n\t\t\t\t\t\t\t\t\tonInput={(e) =>\r\n\t\t\t\t\t\t\t\t\t\te.target.setCustomValidity(\"\")\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tonInvalid={(e) =>\r\n\t\t\t\t\t\t\t\t\t\te.target.setCustomValidity(\r\n\t\t\t\t\t\t\t\t\t\t\t\"شماره دانشجویی باید یک عدد 8 رقمی باشد\"\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tclassName=\"sign-up-textbox animated-textbox text-center\"\r\n\t\t\t\t\t\t\t\t\tplaceholder=\"Student ID\"\r\n\t\t\t\t\t\t\t\t\tvalue={studentID}\r\n\t\t\t\t\t\t\t\t\tautoComplete=\"username\"\r\n\t\t\t\t\t\t\t\t\trequired=\"required\"\r\n\t\t\t\t\t\t\t\t\tonChange={(e) =>\r\n\t\t\t\t\t\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t\t\t\t\t\tstudentID: e.target.value,\r\n\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t</Row>\r\n\r\n\t\t\t\t\t\t<Row className=\"mb-3\">\r\n\t\t\t\t\t\t\t<Col md={3} sm={12} xs={12}>\r\n\t\t\t\t\t\t\t\t<Form.Label>ایمیل</Form.Label>\r\n\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\t\ttype=\"email\"\r\n\t\t\t\t\t\t\t\t\tpattern=\".{6,}\"\r\n\t\t\t\t\t\t\t\t\tonInput={(e) =>\r\n\t\t\t\t\t\t\t\t\t\te.target.setCustomValidity(\"\")\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tonInvalid={(e) =>\r\n\t\t\t\t\t\t\t\t\t\te.target.setCustomValidity(\r\n\t\t\t\t\t\t\t\t\t\t\t\"ورودی باید فرمت معتبر ایمیل را رعایت کرده و حداقل 6 کاراکتر باشد\"\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tclassName=\"sign-up-textbox animated-textbox text-center\"\r\n\t\t\t\t\t\t\t\t\tplaceholder=\"E-mail\"\r\n\t\t\t\t\t\t\t\t\tvalue={email}\r\n\t\t\t\t\t\t\t\t\trequired=\"required\"\r\n\t\t\t\t\t\t\t\t\tonChange={(e) =>\r\n\t\t\t\t\t\t\t\t\t\tthis.setState({ email: e.target.value })\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t</Row>\r\n\r\n\t\t\t\t\t\t<Row className=\"mb-3\">\r\n\t\t\t\t\t\t\t<Col md={3} sm={12} xs={12}>\r\n\t\t\t\t\t\t\t\t<Form.Label>رمز عبور</Form.Label>\r\n\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\t\t\t\tpattern=\".{6,15}\"\r\n\t\t\t\t\t\t\t\t\tonInput={(e) =>\r\n\t\t\t\t\t\t\t\t\t\te.target.setCustomValidity(\"\")\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tonInvalid={(e) =>\r\n\t\t\t\t\t\t\t\t\t\te.target.setCustomValidity(\r\n\t\t\t\t\t\t\t\t\t\t\t\"رمز عبور باید حداقل 6 کاراکتر و حداکثر 15 کاراکتر داشته باشد\"\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tclassName=\"sign-up-textbox animated-textbox text-center\"\r\n\t\t\t\t\t\t\t\t\tplaceholder=\"Password\"\r\n\t\t\t\t\t\t\t\t\tvalue={password}\r\n\t\t\t\t\t\t\t\t\tautoComplete=\"new-password\"\r\n\t\t\t\t\t\t\t\t\trequired=\"required\"\r\n\t\t\t\t\t\t\t\t\tonChange={(e) =>\r\n\t\t\t\t\t\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t\t\t\t\t\tpassword: e.target.value,\r\n\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t</Row>\r\n\r\n\t\t\t\t\t\t<Row className=\"mb-3\">\r\n\t\t\t\t\t\t\t<Col md={3} sm={12} xs={12}>\r\n\t\t\t\t\t\t\t\t<Form.Label>تایید رمز عبور</Form.Label>\r\n\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\t\t\t\tclassName=\"sign-up-textbox animated-textbox text-center\"\r\n\t\t\t\t\t\t\t\t\tplaceholder=\"Confirm Password\"\r\n\t\t\t\t\t\t\t\t\tvalue={confirmPassword}\r\n\t\t\t\t\t\t\t\t\trequired=\"required\"\r\n\t\t\t\t\t\t\t\t\tonChange={(event) =>\r\n\t\t\t\t\t\t\t\t\t\tthis.checkConfirmPassword(event)\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t<hr />\r\n\t\t\t\t\t\t<Row className=\"justify-content-center my-3\">\r\n\t\t\t\t\t\t\t<ReCAPTCHA sitekey=\"Your client site key\" />\r\n\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t<Row className=\"mb-3\">\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\tclassName=\"btn btn-success btn-block mt-4 animated-button\">\r\n\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\tclassName=\"fa fa-user-plus px-2\"\r\n\t\t\t\t\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t\t\t\t\t\tثبت نام\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t</Form>\r\n\t\t\t\t</Card.Body>\r\n\t\t\t\t<Card.Footer className=\"border-primary bg-transparent\">\r\n\t\t\t\t\tاگر قبلا ثبت نام کردی، به صفحه ی <ModalSignIn /> برو !\r\n\t\t\t\t</Card.Footer>\r\n\t\t\t</Card>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default withRouter(SignUp);\r\n","import { useSelector } from 'react-redux';\r\nconst SingleRankCard = ({rowNumber, playerID, name, records }) => {\r\n    const me = useSelector(state => state.me);\r\n\r\n    return (\r\n        <tr className={!me || playerID !== me.userID ? \"\" : \"bg-success\"}>\r\n            <th scope=\"row\">{rowNumber}</th>\r\n            <td>{name}</td>\r\n            <td>{records.points}</td>\r\n            <td>{records.wins}</td>\r\n            <td>{records.loses}</td>\r\n            <td>{records.draws}</td>\r\n        </tr>\r\n    );\r\n};\r\n\r\nexport default SingleRankCard;\r\n","import { Card } from \"react-bootstrap\";\r\nimport SingleRankCard from \"./SingleRankCard\";\r\n\r\nconst Rankings = ({ players, rankByProgress }) => {\r\n\treturn (\r\n\t\t<Card border=\"dark\" style={{ width: \"100%\", borderRadius: \"5px\" }}>\r\n\t\t\t<Card.Header className=\"text-center\">رده بندی</Card.Header>\r\n\t\t\t<table className=\"table table-striped table-bordered table-hover text-center\">\r\n\t\t\t\t<thead className=\"bg-info\">\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<th scope=\"col\">#</th>\r\n\t\t\t\t\t\t<th scope=\"col\">نام بازیکن</th>\r\n\t\t\t\t\t\t<th scope=\"col\">امتیاز</th>\r\n\t\t\t\t\t\t<th scope=\"col\">تعداد برد</th>\r\n\t\t\t\t\t\t<th scope=\"col\">تعداد باخت</th>\r\n\t\t\t\t\t\t<th scope=\"col\">تعداد تساوی</th>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t</thead>\r\n\t\t\t\t<tbody>\r\n\t\t\t\t\t{players.map((player) => (\r\n\t\t\t\t\t\t<SingleRankCard\r\n\t\t\t\t\t\t\tkey={player.userID}\r\n\t\t\t\t\t\t\trowNumber={\r\n\t\t\t\t\t\t\t\tplayers.findIndex(\r\n\t\t\t\t\t\t\t\t\t(p) => p.userID === player.userID\r\n\t\t\t\t\t\t\t\t) + 1\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tplayerID={player.userID}\r\n\t\t\t\t\t\t\tname={player.fullname}\r\n\t\t\t\t\t\t\trecords={rankByProgress ? player.progress : player.records} />\r\n\t\t\t\t\t))}\r\n\t\t\t\t</tbody>\r\n\t\t\t</table>\r\n\t\t</Card>\r\n\t);\r\n};\r\n\r\nexport default Rankings;\r\n","import { Component } from \"react\";\r\nimport Rankings from \"./Rankings\";\r\nimport userServices from \"../../services/http/userServices\";\r\nimport LoadingBar from \"../../commons/LoadingBar\";\r\nimport Configs, { Status } from \"../../services/configs\";\r\nimport { Row } from \"react-bootstrap\";\r\nimport { Sorry } from \"../../tools/notification\";\r\n\r\nclass RankingsContainer extends Component {\r\n\tstate = { players: [], loading: false };\r\n\r\n\tcomponentDidMount() {\r\n\t\t(async () => {\r\n\t\t\tthis.setState({ loading: true });\r\n\t\t\tconst { data, status } = await userServices.getAllPlayers();\r\n\t\t\tif (status === Configs.Status.Successful) return data.players;\r\n\t\t\treturn [];\r\n\t\t})()\r\n\t\t\t.then((result) => {\r\n\t\t\t\tlet tempPlayers = [...result];\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tplayers: tempPlayers.sort(\r\n\t\t\t\t\t\t//sort priorities: 1. more points 2. more wins 3. less loses\r\n\t\t\t\t\t\t(p1, p2) =>\r\n\t\t\t\t\t\t\tp2.records.points - p1.records.points ||\r\n\t\t\t\t\t\t\tp2.records.wins - p1.records.wins ||\r\n\t\t\t\t\t\t\tp1.records.loses - p2.records.loses\r\n\t\t\t\t\t),\r\n\t\t\t\t\tloading: false,\r\n\t\t\t\t});\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\t//******* handle errors */\r\n\t\t\t\t// console.log(err);\r\n\t\t\t\tif (!Status.isErrorExpected(err))\r\n\t\t\t\t\tSorry(\r\n\t\t\t\t\t\t\"بارگذاری جدول رده بندی موفقیت آمیز نبود. لطفا ارتباط اینترنتی خود را بررسی کنید.\"\r\n\t\t\t\t\t);\r\n\t\t\t\tthis.setState({ players: [], loading: false });\r\n\t\t\t});\r\n\t}\r\n\trender() {\r\n\t\tconst { players, loading } = this.state;\r\n\t\treturn (\r\n\t\t\t<Row className=\"mx-auto mt-3\">\r\n\t\t\t\t{loading ? <LoadingBar loading={loading} /> : null}\r\n\t\t\t\t<Row className=\"w-100 mx-auto\">\r\n\t\t\t\t\t<Rankings players={players} />\r\n\t\t\t\t</Row>\r\n\t\t\t</Row>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default RankingsContainer;\r\n","import { Card, Col, Form, Row, Button } from \"react-bootstrap\";\r\nimport LoadingBar from \"../../commons/LoadingBar\";\r\nimport '../profile.css';\r\nimport { useState, useEffect } from 'react';\r\n\r\nconst EditStudent = ({userID}) => {\r\n    const [fullname, setFullname] = useState(\"\");\r\n\tconst [studentID, setStudentID] = useState(\"\");\r\n\tconst [email, setEmail] = useState(\"\");\r\n\tconst [password, setPassword] = useState(\"\");\r\n\tconst [loading, setLoading] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        setLoading(true);\r\n        //find student via userID\r\n\r\n        setLoading(false)\r\n    }, [])\r\n    const saveChanges = (event) => {\r\n        event.preventDefaults();\r\n    }\r\n\treturn (\r\n\t\t<Form onSubmit={(e) => saveChanges(e)}>\r\n\t\t\t<LoadingBar loading={loading} />\r\n\r\n\t\t\t<Form.Group className=\"form-inline\">\r\n\t\t\t\t<Form.Label className=\"w-25 text-center\">\r\n\t\t\t\t\tشماره دانشجویی\r\n\t\t\t\t</Form.Label>\r\n\t\t\t\t<Form.Control\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tclassName=\"account-info-textbox w-75\"\r\n\t\t\t\t\tplaceholder=\"Student ID\"\r\n\t\t\t\t\tvalue={studentID}\r\n\t\t\t\t/>\r\n\t\t\t</Form.Group>\r\n\t\t\t<Form.Group className=\"form-inline\">\r\n\t\t\t\t<Form.Label className=\"w-25 text-center\">نام کاربر</Form.Label>\r\n\t\t\t\t<Form.Control\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tclassName=\"account-info-textbox w-75\"\r\n\t\t\t\t\tpattern=\"[آ-ی ]{6,}\" // persian characters and space\r\n\t\t\t\t\tonInput={(e) => e.target.setCustomValidity(\"\")}\r\n\t\t\t\t\tonInvalid={(e) =>\r\n\t\t\t\t\t\te.target.setCustomValidity(\r\n\t\t\t\t\t\t\t\"نام خانوادگی باید با حروف فارسی و با حداقل طول سه حرف باشد\"\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t}\r\n\t\t\t\t\tplaceholder=\"Full Name\"\r\n\t\t\t\t\tvalue={fullname}\r\n\t\t\t\t\trequired=\"required\"\r\n\t\t\t\t\tonChange={(e) => setFullname(e.target.value)}\r\n\t\t\t\t/>\r\n\t\t\t</Form.Group>\r\n\r\n\t\t\t<Form.Group className=\"form-inline\">\r\n\t\t\t\t<Form.Label className=\"w-25 text-center\">ایمیل</Form.Label>\r\n\t\t\t\t<Form.Control\r\n\t\t\t\t\ttype=\"email\"\r\n                    disabled\r\n\t\t\t\t\tclassName=\"account-info-textbox w-75\"\r\n\t\t\t\t\tplaceholder=\"E-mail\"\r\n\t\t\t\t\tvalue={email}\r\n\t\t\t\t/>\r\n\t\t\t</Form.Group>\r\n\t\t\t<Card.Footer className=\"p-1 m-0\">\r\n\t\t\t\t<Row>\r\n                <Col lg={2} md={2} sm={4} xs={4}>\r\n\t\t\t\t\t\t<Form.Label className=\"text-center w-100 mt-3\">\r\n\t\t\t\t\t\t\tرمزعبور فعلی\r\n\t\t\t\t\t\t</Form.Label>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col lg={7} md={7} sm={8} xs={8}>\r\n\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\t\tclassName=\"text-left account-info-textbox animated-textbox\"\r\n\t\t\t\t\t\t\tplaceholder=\"Password\"\r\n\t\t\t\t\t\t\tvalue={password}\r\n\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\tonInput={(e) => e.target.setCustomValidity(\"\")}\r\n\t\t\t\t\t\t\tonInvalid={(e) =>\r\n\t\t\t\t\t\t\t\te.target.setCustomValidity(\r\n\t\t\t\t\t\t\t\t\t\"جهت اعمال هر گونه تغییر در حساب کاربری تان باید رمز عبور خود را وارد نمایید\"\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tonChange={(e) => setPassword(e.target.value)}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col lg={3} md={3} sm={12} xs={12}>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\tblock\r\n\t\t\t\t\t\t\tvariant=\"success\"\r\n\t\t\t\t\t\t\tclassName=\"mt-2 w-100\">\r\n\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\tclassName=\"fa fa-floppy-o px-2\"\r\n\t\t\t\t\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t\t\t\t\t\tثبت تغییرات\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t</Card.Footer>\r\n\t\t</Form>\r\n\t);\r\n};\r\n\r\nexport default EditStudent;\r\n","import { Button, Card, Col, Form, Row, Tabs } from \"react-bootstrap\";\r\nimport { Tab } from \"react-bootstrap\";\r\nimport EditStudent from \"./EditStudent\";\r\nimport \"../profile.css\";\r\nimport { useState } from \"react\";\r\nconst StudentsManagement = () => {\r\n\tconst [userID, setUserID] = useState(null);\r\n    const [lookFor, setLookFor] = useState(\"\");\r\n\r\n    const searchForStudent = (event) => {\r\n        event.preventDefaults();\r\n        // search data base and find student name\r\n        // return student userID\r\n        // then in each tab request data associated with the userid\r\n    }\r\n\treturn (\r\n\t\t<Card border=\"secondary\" bg=\"transparent\" className=\"big-single-card\">\r\n\t\t\t{!userID && <Card.Header>\r\n\t\t\t\t<Form onSubmit={e => searchForStudent(e)}>\r\n\t\t\t\t\t<Row className=\" w-100\">\r\n\t\t\t\t\t\t<Col lg={10} md={10} sm={9} xs={9}>\r\n\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\tplaceholder=\"نام دانشجو\"\r\n                                value={lookFor}\r\n                                onChange={e => setLookFor(e.target.value)}\r\n\t\t\t\t\t\t\t\tclassName=\"account-info-textbox mt-0 animated-textbox\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t<Col className=\"text-left\" lg={2} md={2} sm={3} xs={3}>\r\n\t\t\t\t\t\t\t<Button className=\"animated-button\" block variant=\"warning\">\r\n\t\t\t\t\t\t\t<i className=\"fa fa-search\" aria-hidden=\"true\"></i>\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t</Form>\r\n\t\t\t</Card.Header>}\r\n\t\t\t{userID && (\r\n\t\t\t\t<Card.Body>\r\n\t\t\t\t\t<Tabs\r\n\t\t\t\t\t\tdefaultActiveKey=\"strecords\"\r\n\t\t\t\t\t\tvariant=\"pills\"\r\n\t\t\t\t\t\t// transition={Fade}\r\n\t\t\t\t\t\tclassName=\"mb-3\">\r\n\t\t\t\t\t\t<Tab eventKey=\"strecords\" title=\"رکوردها\">\r\n\t\t\t\t\t\t\t<hr />\r\n\t\t\t\t\t\t</Tab>\r\n\t\t\t\t\t\t<Tab eventKey=\"stedit\" title=\"ویرایش دانشجو\">\r\n\t\t\t\t\t\t\t<hr />\r\n\t\t\t\t\t\t\t<EditStudent userID={userID}/>\r\n\t\t\t\t\t\t</Tab>\r\n\t\t\t\t\t\t<Tab eventKey=\"stfriends\" title=\"روابط\">\r\n\t\t\t\t\t\t\t<hr />\r\n\t\t\t\t\t\t</Tab>\r\n\t\t\t\t\t\t<Tab eventKey=\"stdelete\" title=\"حذف\">\r\n\t\t\t\t\t\t\t<hr />\r\n\t\t\t\t\t\t</Tab>\r\n\t\t\t\t\t</Tabs>\r\n\t\t\t\t</Card.Body>\r\n\t\t\t)}\r\n\t\t</Card>\r\n\t);\r\n};\r\n\r\nexport default StudentsManagement;\r\n","import { useState } from \"react\";\r\nimport { Row, Col, Form, Button, Card } from \"react-bootstrap\";\r\nimport LoadingBar from \"../../commons/LoadingBar\";\r\nimport { Sorry, OK } from \"./../../tools/notification\";\r\nimport leagueServices from \"./../../services/http/leagueServices\";\r\nimport { Status } from \"../../services/configs\";\r\n\r\nconst LeaguesManager = () => {\r\n    const [Mode, setMode] = useState(0);\r\n    const [title, setTitle] = useState(\"\");\r\n    const [capacity, setCapacity] = useState(20);\r\n    const [prize, setPrize] = useState(50);\r\n    const [password, setPassword] = useState(\"\");\r\n    const [loading, setLoading] = useState(\"\");\r\n    const [dimension, setDimension] = useState(4);\r\n    const [isScoreless, setScoreless] = useState(false);\r\n\r\n    const create = async (event) => {\r\n        event.preventDefault();\r\n        try {\r\n            setLoading(true);\r\n\r\n            const { status } = await leagueServices.createLeague(\r\n                password,\r\n                Mode,\r\n                isScoreless,\r\n                dimension,\r\n                title,\r\n                capacity,\r\n                prize\r\n            );\r\n            if (status === Status.CreatedSuccessfully)\r\n                OK(`لیگ ${title} با موفقیت ساخته شد.`);\r\n        } catch (err) {\r\n            if (!Status.isErrorExpected(err))\r\n                Sorry(\r\n                    \"خطا در برقراری ارتباط ... لطفا ارتباط خود را با اینترنت بررسی کنید.\"\r\n                );\r\n            setLoading(false);\r\n        }\r\n        setLoading(false);\r\n    };\r\n    const Modes = { Kickout: 0, Main: 1, Championship: 2, Custom: 3 };\r\n\r\n    return (\r\n        <Form onSubmit={(e) => create(e)}>\r\n            <LoadingBar loading={loading} />\r\n            <Card\r\n                border=\"success\"\r\n                bg=\"transparent\"\r\n                className=\"mx-auto notice-manager-card\"\r\n            >\r\n                <Card.Header  bg=\"transparent\" className=\"text-center mx-auto w-100 m-0 p-0 pb-1\">\r\n                    <Row className=\"m-0 p-0\">\r\n                        <Col lg={2} md={2} sm={4} xs={4}>\r\n                            <Form.Label className=\"text-center w-100 my-2\">\r\n                                رمزعبور فعلی\r\n                            </Form.Label>\r\n                        </Col>\r\n                        <Col lg={7} md={7} sm={8} xs={8}>\r\n                            <Form.Control\r\n                                type=\"password\"\r\n                                className=\"text-left account-info-textbox animated-textbox\"\r\n                                placeholder=\"Password\"\r\n                                value={password}\r\n                                onChange={(e) => setPassword(e.target.value)}\r\n                                required\r\n                                onInput={(e) => e.target.setCustomValidity(\"\")}\r\n                                onInvalid={(e) =>\r\n                                    e.target.setCustomValidity(\r\n                                        \"جهت اعمال هر گونه تغییر در حساب کاربری تان باید رمز عبور خود را وارد نمایید\"\r\n                                    )\r\n                                }\r\n                            />\r\n                        </Col>\r\n                        <Col lg={3} md={3} sm={12} xs={12}>\r\n                            <Button\r\n                                type=\"submit\"\r\n                                block\r\n                                variant=\"primary\"\r\n                                className=\"mt-2 animated-button\"\r\n                            >\r\n                                <i\r\n                                    className=\"fa fa-floppy-o px-2\"\r\n                                    aria-hidden=\"true\"\r\n                                ></i>\r\n                                ساخت لیگ\r\n                            </Button>\r\n                        </Col>\r\n                    </Row>\r\n                </Card.Header>\r\n                <Card.Body style={{ overflowY: \"auto\" }} className=\"text-right\">\r\n                    <Row className=\"my-1\">\r\n                        <Form.Control\r\n                            type=\"text\"\r\n                            className=\"account-info-textbox animated-textbox\"\r\n                            pattern=\"[آ-ی ]{3,}\" // persian characters and space\r\n                            onInput={(e) => e.target.setCustomValidity(\"\")}\r\n                            onInvalid={(e) =>\r\n                                e.target.setCustomValidity(\r\n                                    \"نام لیگ باید با حروف فارسی و با حداقل طول سه حرف باشد\"\r\n                                )\r\n                            }\r\n                            placeholder=\"نام لیگ\"\r\n                            value={title}\r\n                            required=\"required\"\r\n                            onChange={(e) => setTitle(e.target.value)}\r\n                        />\r\n                    </Row>\r\n                    <hr />\r\n                    <Row className=\"my-1 justify-content-center\">\r\n                        <Form.Label className=\"text-center\">نوع لیگ</Form.Label>\r\n                    </Row>\r\n                    <hr />\r\n                    <Row className=\"m-0 p-0 justify-content-center\">\r\n                        <Col className=\"my-1 text-center\" xs={3}>\r\n                            <Button\r\n                                variant={\r\n                                    Mode === Modes.Kickout\r\n                                        ? \"success\"\r\n                                        : \"outline-secondary\"\r\n                                }\r\n                                onClick={() => setMode(Modes.Kickout)}\r\n                                block\r\n                            >\r\n                                حذفی\r\n                            </Button>\r\n                        </Col>\r\n                        <Col className=\"my-1 text-center\" xs={3}>\r\n                            <Button\r\n                                variant={\r\n                                    Mode === Modes.Main\r\n                                        ? \"success\"\r\n                                        : \"outline-secondary\"\r\n                                }\r\n                                onClick={() => setMode(Modes.Main)}\r\n                                block\r\n                            >\r\n                                امتیازی\r\n                            </Button>\r\n                        </Col>\r\n                        <Col className=\"my-1 text-center\" xs={3}>\r\n                            <Button\r\n                                variant={\r\n                                    Mode === Modes.Championship\r\n                                        ? \"success\"\r\n                                        : \"outline-secondary\"\r\n                                }\r\n                                block\r\n                                onClick={() => setMode(Modes.Championship)}\r\n                            >\r\n                                قهرمانان\r\n                            </Button>\r\n                        </Col>\r\n                        <Col className=\"my-1 text-center\" xs={3}>\r\n                            <Button\r\n                                variant={\r\n                                    Mode === Modes.Custom\r\n                                        ? \"success\"\r\n                                        : \"outline-secondary\"\r\n                                }\r\n                                block\r\n                                onClick={() => setMode(Modes.Custom)}\r\n                            >\r\n                                کاستوم\r\n                            </Button>\r\n                        </Col>\r\n                    </Row>\r\n                    <hr />\r\n                    <Row className=\"my-1 justify-content-center\">\r\n                        <Form.Label className=\"text-center\">\r\n                            نوع بازی ها\r\n                        </Form.Label>\r\n                    </Row>\r\n                    <hr />\r\n                    <Row className=\"my-1 justify-content-center\">\r\n                        <Col className=\"my-1 text-center\" xs={3}>\r\n                            <Button\r\n                                variant={\r\n                                    dimension === 3\r\n                                        ? \"success\"\r\n                                        : \"outline-secondary\"\r\n                                }\r\n                                onClick={() => setDimension(3)}\r\n                                block\r\n                            >\r\n                                3 * 3 * 3\r\n                            </Button>\r\n                        </Col>\r\n                        <Col className=\"my-1 text-center\" xs={3}>\r\n                            <Button\r\n                                variant={\r\n                                    dimension === 4\r\n                                        ? \"success\"\r\n                                        : \"outline-secondary\"\r\n                                }\r\n                                onClick={() => setDimension(4)}\r\n                                block\r\n                            >\r\n                                4 * 4 * 4\r\n                            </Button>\r\n                        </Col>\r\n                        <Col className=\"my-1 text-center\" xs={3}>\r\n                            <Button\r\n                                variant={\r\n                                    dimension === 5\r\n                                        ? \"success\"\r\n                                        : \"outline-secondary\"\r\n                                }\r\n                                block\r\n                                onClick={() => setDimension(5)}\r\n                            >\r\n                                5 * 5 * 5\r\n                            </Button>\r\n                        </Col>\r\n                    </Row>\r\n                    <hr />\r\n                    <Row className=\"my-1  justify-content-center\">\r\n                        <Col className=\"my-1 text-center\" xs={3}>\r\n                            <Button\r\n                                variant={\r\n                                    isScoreless\r\n                                        ? \"success\"\r\n                                        : \"outline-secondary\"\r\n                                }\r\n                                onClick={() => setScoreless(true)}\r\n                                block\r\n                            >\r\n                                سرعتی\r\n                            </Button>\r\n                        </Col>\r\n                        <Col className=\"my-1 text-center\" xs={3}>\r\n                            <Button\r\n                                variant={\r\n                                    !isScoreless\r\n                                        ? \"success\"\r\n                                        : \"outline-secondary\"\r\n                                }\r\n                                onClick={() => setScoreless(false)}\r\n                                block\r\n                            >\r\n                                امتیازی\r\n                            </Button>\r\n                        </Col>\r\n                    </Row>\r\n                    <hr />\r\n                    <Row className=\"my-1 justify-content-center\">\r\n                        <Form.Label className=\"text-center\">تنظیمات</Form.Label>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col className=\"my-1 text-center\">\r\n                            <hr />\r\n\r\n                            <Row className=\"justify-content-around\">\r\n                                <Form.Label className=\"text-center\">\r\n                                    ظرفیت\r\n                                </Form.Label>\r\n                            </Row>\r\n                            <hr />\r\n                            <Form.Control\r\n                                type=\"number\"\r\n                                className=\"account-info-textbox animated-textbox text-center\"\r\n                                placeholder=\"ظرفیت\"\r\n                                value={capacity}\r\n                                required=\"required\"\r\n                                onChange={(e) => setCapacity(e.target.value)}\r\n                            />\r\n                        </Col>\r\n                        <Col className=\"my-1 text-center\">\r\n                            <hr />\r\n                            <Row className=\"justify-content-around\">\r\n                                <Form.Label className=\"text-center\">\r\n                                    جایزه(امتیاز)\r\n                                </Form.Label>\r\n                            </Row>\r\n                            <hr />\r\n                            <Form.Control\r\n                                type=\"number\"\r\n                                className=\"account-info-textbox animated-textbox text-center\"\r\n                                placeholder=\"جایزه\"\r\n                                value={prize}\r\n                                required=\"required\"\r\n                                onChange={(e) => setPrize(e.target.value)}\r\n                            />\r\n                        </Col>\r\n                    </Row>\r\n                </Card.Body>\r\n            </Card>\r\n        </Form>\r\n    );\r\n};\r\n\r\nexport default LeaguesManager;\r\n","import { Card, Row } from \"react-bootstrap\";\r\nimport \"./matches.css\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport { toTimeShort } from \"../../tools/format\";\r\nimport leagueServices from \"../../services/http/leagueServices\";\r\nimport { browserStorage, Status } from \"../../services/configs\";\r\nimport { Sorry } from \"../../tools/notification\";\r\n\r\nconst attendThisGame = async () => {\r\n    // trig event in GlobbalSocket to create the room for game\r\n    try {\r\n        const { status, data } = await leagueServices.attendLeagueGame(\r\n            browserStorage.LEAGUE()\r\n        );\r\n        if (status === Status.Successful) {\r\n            const { gameID } = data;\r\n            console.log(\"gameID = \", gameID);\r\n            // redirect to gameId\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        if (!Status.isErrorExpected(err))\r\n            Sorry(\r\n                \"خطا در برقراری ارتباط ... لطفا ارتباط خود را با اینترنت بررسی کنید.\"\r\n            );\r\n    }\r\n};\r\n\r\nconst SingleMatchCard = ({ Type, date, playerX, playerO, schedule }) => {\r\n    const me = useSelector((state) => state.me);\r\n    const [onClickForThis, setOnClickForThis] = useState(false);\r\n    const [cardColor, setCardColor] = useState(null);\r\n\r\n    // change this structure to remove using of context\r\n\r\n    useEffect(() => {\r\n        const now = new Date();\r\n\r\n        if (\r\n            me &&\r\n            (me.userID.toString() === playerX.userID.toString() ||\r\n                me.userID.toString() === playerO.userID.toString())\r\n        ) {\r\n            if (now >= new Date(schedule)) {\r\n                // if its due is passed, make the cardf red indicating the player has lost the game\r\n                // other wise add a onClick and color to the corresponding card\r\n                setCardColor(\"success\");\r\n                setOnClickForThis(true);\r\n            }\r\n        }\r\n    }, [schedule, playerX, playerO, me]);\r\n    return (\r\n        <Card\r\n            bg={cardColor}\r\n            onClick={onClickForThis ? attendThisGame : null}\r\n            border=\"primary\"\r\n            className=\"single-match-card\"\r\n        >\r\n            <Card.Body>\r\n                <Row className=\"text-center mx-auto\">\r\n                    <span className=\"col-lg-5 col-md-6 text-right\">\r\n                        {playerX.fullname}\r\n                    </span>\r\n                    <span className=\"col-lg-2 col-md-2 text-center\">\r\n                        {toTimeShort(schedule)}\r\n                    </span>\r\n                    <span className=\"col-lg-5 col-md-6 text-left\">\r\n                        {playerO.fullname}\r\n                    </span>\r\n                </Row>\r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default SingleMatchCard;\r\n","import { Card } from \"react-bootstrap\";\r\nimport {  Fragment } from \"react\";\r\nimport SingleMatchCard from \"./SingleMatchCard\";\r\n\r\nimport \"./matches.css\";\r\nconst MatchesTable = ({ongoing}) => {\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t{Boolean(ongoing.length) ? (\r\n\t\t\t\tongoing.map((match) => (\r\n\t\t\t\t\t<SingleMatchCard\r\n\t\t\t\t\t\t// key={match.gameID}\r\n\t\t\t\t\t\tschedule={match.schedule}\r\n\t\t\t\t\t\tplayerX={match.players[0]}\r\n\t\t\t\t\t\tplayerO={match.players[1]} />\r\n\t\t\t\t))\r\n\t\t\t) : (\r\n\t\t\t\t<Card className=\"bg-transparent mx-auto mt-3\" border=\"danger\">\r\n\t\t\t\t\t<Card.Body className=\"text-center\">\r\n\t\t\t\t\t\t<Card.Text>هیچ قرعه ای انجام نگرفته است</Card.Text>\r\n\t\t\t\t\t</Card.Body>\r\n\t\t\t\t</Card>\r\n\t\t\t)}\r\n\t\t</Fragment>\r\n\t);\r\n};\r\n\r\nexport default MatchesTable;\r\n","import { useSelector } from \"react-redux\";\r\nimport MatchesTable from \"./matches/MatchesTable\";\r\nimport { Tab, Tabs, Card } from \"react-bootstrap\";\r\nimport Rankings from \"../tables/rankings/Rankings\";\r\n\r\nconst LeagueHome = () => {\r\n\tconst league = useSelector((state) => state.league);\r\n\r\n\treturn (\r\n\t\t<Card\r\n\t\t\tborder=\"primary\"\r\n\t\t\tbg=\"transparent\"\r\n\t\t\tclassName=\"single-league-card\">\r\n\t\t\t{Boolean(league) && (\r\n\t\t\t\t<Card.Body>\r\n\t\t\t\t\t<Tabs\r\n\t\t\t\t\t\tdefaultActiveKey=\"draws\"\r\n\t\t\t\t\t\tvariant=\"pills\"\r\n\t\t\t\t\t\t// transition={Fade}\r\n\t\t\t\t\t\tclassName=\"mb-3\">\r\n\t\t\t\t\t\t<Tab eventKey=\"draws\" title=\"بازی ها\">\r\n\t\t\t\t\t\t\t<hr />\r\n\t\t\t\t\t\t\t<MatchesTable ongoing={league.ongoing} />\r\n\t\t\t\t\t\t</Tab>\r\n\t\t\t\t\t\t<Tab eventKey=\"table\" title=\"جدول\">\r\n\t\t\t\t\t\t\t<hr />\r\n\t\t\t\t\t\t\t<Rankings\r\n\t\t\t\t\t\t\t\tplayers={league.contesters}\r\n\t\t\t\t\t\t\t\trankByProgress={true}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Tab>\r\n\t\t\t\t\t\t<Tab eventKey=\"details\" title=\"جزییات\">\r\n\t\t\t\t\t\t\t<hr />\r\n\t\t\t\t\t\t</Tab>\r\n\t\t\t\t\t</Tabs>\r\n\t\t\t\t</Card.Body>\r\n\t\t\t)}\r\n\t\t</Card>\r\n\t);\r\n};\r\n\r\nexport default LeagueHome;\r\n","import { Row, Col } from \"react-bootstrap\";\r\nimport LeagueHome from \"./../leagues/LeagueHome\";\r\nimport { EnterLeague, ExitLeague } from \"./../globals/redux/actions/league\";\r\nimport { browserStorage } from \"../services/configs\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport LoadingBar from \"../commons/LoadingBar\";\r\nimport AutoSignIn from \"../users/AutoSignIn\";\r\nconst LeagueLayout = () => {\r\n\t// right side => player record inside the league\r\n\t// left sidebar => my upcomming games\r\n\t// middle section => all games in this round\r\n\t// not started games will have empty score badges\r\n\t// started games score will be written, but the whole score card will be with minimum height, no game info button is needed\r\n\tconst dispatch = useDispatch();\r\n\tconst [loading, setLoading] = useState(false);\r\n\r\n\tuseEffect(() => {\r\n\t\t// this form of dispatching is used to support preloaders\r\n\t\t(async () => {\r\n\t\t\ttry {\r\n\t\t\t\tsetLoading(true);\r\n\t\t\t\tawait dispatch(EnterLeague(browserStorage.LEAGUE()));\r\n\t\t\t\t// profile unmounted\r\n\t\t\t} catch (err) {\r\n\t\t\t\tsetLoading(false);\r\n\t\t\t}\r\n\t\t\tsetLoading(false);\r\n\t\t})();\r\n\r\n\t\treturn () => {\r\n\t\t\t// remove chat list from redux to save memory\r\n\t\t\tdispatch(ExitLeague());\r\n\t\t};\r\n\t}, [dispatch]);\r\n\r\n\treturn (\r\n\t\t<Row>\r\n            <AutoSignIn />\r\n\t\t\t<LoadingBar loading={loading} />\r\n\t\t\t<Col xs={12} sm={12} md={4} lg={3}></Col>\r\n\t\t\t<Col>\r\n\t\t\t\t<LeagueHome />\r\n\t\t\t</Col>\r\n\t\t\t<Col xs={0} sm={0} md={0} lg={3}></Col>\r\n\t\t</Row>\r\n\t);\r\n};\r\n\r\nexport default LeagueLayout;\r\n","import { Component } from \"react\";\r\nimport withReduxDashboard from \"../../globals/redux/withReduxDashboard\";\r\nimport TableDesign from \"./TableDesign\";\r\nimport GlobalContext from \"../../globals/state/GlobalContext\";\r\nimport { T3DLogic } from \"./GameLogics\";\r\nimport { Routes } from \"../../services/configs\";\r\nimport ArtificialIntelligence from \"./ArtificialIntelligence\";\r\n\r\nclass SingleGamePlay extends Component {\r\n    static contextType = GlobalContext;\r\n\r\n    state = {\r\n        players: [\r\n            {\r\n                // ID: '',\r\n                shape: <i className=\"fa fa-times\" aria-hidden=\"true\" />, // \"X\" : some device may not support font-awsome\r\n                color: \"blue\",\r\n                lineColor: \"primary\",\r\n                score: 0,\r\n            },\r\n            {\r\n                // ID: '',\r\n                shape: <i className=\"fa fa-sun-o\" aria-hidden=\"true\" />, // \"O\" : some device may not support font-awsome\r\n                color: \"darkred\",\r\n                lineColor: \"danger\",\r\n                score: 0,\r\n            },\r\n        ], // maybe use player actual user name and change this item to an object of objects?\r\n        turn: 1, // after calling rescheduleDeadline in componentDidMount => turn ===0\r\n        dimension: 4,\r\n        table: null,\r\n        empties: 64,\r\n        myTurn: undefined, // change this\r\n        timeRemaining: 0, //create a config\r\n        deadlineID: null,\r\n        ai: null,\r\n    };\r\n\r\n    constructor() {\r\n        super();\r\n        this.cellButtons = [];\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { game } = this.props;\r\n        if (game) {\r\n            this.cellButtons =\r\n                document.getElementsByClassName(\"game-table-cells\"); // pay attension to searched className! may cause an error\r\n            const { dimension, table, myTurn, empties } = game;\r\n            const ai = new ArtificialIntelligence(\r\n                Number(!myTurn),\r\n                table,\r\n                game.difficulty,\r\n                dimension\r\n            );\r\n            this.setState({ table, myTurn, dimension, empties, ai });\r\n            this.rescheduleDeadline();\r\n            setTimeout(() => {\r\n                this.updateGameScorebaord();\r\n            }, 2000);\r\n        } else {\r\n            this.context.goTo(Routes.Client.GameDeck);\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        const { deadlineID } = this.state;\r\n        clearTimeout(deadlineID); //move time out timer\r\n        // edit this later; SINGLE GAME PLAYER MUST ALSO BE SAVED UPON EXIT\r\n        this.props.CloseOngoingGame();\r\n    }\r\n    updateGameScorebaord = () => {\r\n        const { myTurn, players } = this.state;\r\n        const oppTurn = Number(!myTurn);\r\n\r\n        this.props.UpdateScoreboard({\r\n            me: {\r\n                index: myTurn,\r\n                shape: players[myTurn].shape,\r\n                score: players[myTurn].score,\r\n            },\r\n            opp: {\r\n                index: oppTurn,\r\n                shape: players[oppTurn].shape,\r\n                score: players[oppTurn].score,\r\n            },\r\n        });\r\n    };\r\n\r\n    rescheduleDeadline = () => {\r\n        const { turn } = this.state;\r\n        this.setState({\r\n            timeRemaining: Math.floor(T3DLogic.Rules.TurnTimeOut),\r\n            turn: (turn + 1) % 2,\r\n        });\r\n        //is it needed to declare deadlineID as state?\r\n        if (this.state.deadlineID) clearInterval(this.state.deadlineID);\r\n        const deadlineID = setInterval(() => {\r\n            const { timeRemaining, turn, myTurn } = this.state;\r\n            if (turn !== myTurn) this.react();\r\n            else if (timeRemaining > 0)\r\n                this.setState({ timeRemaining: timeRemaining - 1 });\r\n            else this.rescheduleDeadline();\r\n        }, 1000);\r\n        this.setState({ deadlineID });\r\n    };\r\n\r\n    react = () => {\r\n        try {\r\n            const { table, dimension, turn, myTurn, ai } = this.state;\r\n            const nextMove = ai.reaction(table);\r\n            if (nextMove && turn !== myTurn) {\r\n                const verified = this.verifyAndApplyTheMove(\r\n                    nextMove,\r\n                    this.cellButtons[\r\n                        T3DLogic.getButtonCoordinates(dimension, nextMove)\r\n                    ]\r\n                );\r\n                if (verified) {\r\n                    ai.update(nextMove, ai.turn);\r\n                } else {\r\n                    // sth went wrong (cell was full)\r\n                }\r\n            } else {\r\n                //error happened\r\n            }\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    };\r\n    onEachCellClick = (event) => {\r\n        const { dimension, turn, myTurn, ai } = this.state;\r\n        console.log(this.state);\r\n        if (turn === myTurn) {\r\n            try {\r\n                const selectedCellButton = event.target;\r\n\r\n                const cell = T3DLogic.getCellCoordinates(\r\n                    selectedCellButton.id,\r\n                    dimension\r\n                );\r\n                if (this.verifyAndApplyTheMove(cell, selectedCellButton)) {\r\n                    ai.update(cell, myTurn);\r\n                    // setTimeout(() => this.react(), 1000);\r\n                }\r\n            } catch (err) {\r\n                console.log(err);\r\n            }\r\n        } else {\r\n            // ??wtf\r\n        }\r\n    };\r\n\r\n    verifyAndApplyTheMove = (cell, cellButton) => {\r\n        const { turn } = this.state;\r\n\r\n        let tempTable = [...this.state.table];\r\n        cellButton.focus();\r\n        if (tempTable[cell.floor][cell.row][cell.column] === null) {\r\n            tempTable[cell.floor][cell.row][cell.column] = turn + 1; //maybe its better to use players actual Id huh?\r\n            this.setState({ table: tempTable });\r\n\r\n            cellButton.style.opacity = 0.0;\r\n            setTimeout(() => {\r\n                cellButton.className = `game-table-cells player-${\r\n                    turn ? \"o\" : \"x\"\r\n                }-cell animate-new-move`;\r\n                cellButton.style.opacity = 1.0;\r\n            }, 100);\r\n            --this.state.empties;\r\n\r\n            T3DLogic.inspectAreaAroundTheCell(\r\n                cell,\r\n                this.state,\r\n                this.connectScoreLines\r\n            );\r\n            if (this.state.empties <= 0)\r\n                T3DLogic.endThisGame(this.state, this.onCloseGame);\r\n            else this.rescheduleDeadline();\r\n\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n\r\n    // method below: checks each possible line(according to the condition that user gives it),\r\n    // if the line is made colorifies the line and returns 1 ( as one single score for each line checked ), otherwise returns 0\r\n    connectScoreLines = (firstCell, step, index) => {\r\n        const { dimension, turn } = this.state;\r\n        const players = [...this.state.players];\r\n        const { game } = this.props;\r\n        for (let i = 0; i < dimension; i++) {\r\n            this.cellButtons[\r\n                firstCell + i * step\r\n            ].className = `game-table-cells btn btn-${players[index].lineColor}`;\r\n            !game.scoreless &&\r\n                setTimeout(() => {\r\n                    this.cellButtons[\r\n                        firstCell + i * step\r\n                    ].className = `game-table-cells player-${\r\n                        turn ? \"o\" : \"x\"\r\n                    }-cell`;\r\n                }, 1000 + i * 100);\r\n        }\r\n        ++players[index].score;\r\n        this.setState({ players });\r\n        this.updateGameScorebaord();\r\n        if (game.scoreless) this.state.empties = 0;\r\n    };\r\n\r\n    /***************END THIS GAME IS IN GAMELOGICS */\r\n    onCloseGame = () => {\r\n        clearTimeout(this.state.deadlineID);\r\n        setTimeout(() => {\r\n            this.props.CloseOngoingGame();\r\n            this.context.goTo(\"/\");\r\n        }, 3000);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <TableDesign\r\n                dimension={this.state.dimension}\r\n                players={this.state.players}\r\n                table={this.state.table}\r\n                turn={this.state.turn}\r\n                timeRemaining={this.state.timeRemaining}\r\n                onEachCellClick={this.onEachCellClick}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default withReduxDashboard(SingleGamePlay);\r\n","\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport { Routes } from '../services/configs';\r\nimport ProfilePanelLayout from './../layouts/ProfilePanelLayout';\r\nimport MyGamesAndFriends from './../profile/friendgames/MyGamesAndFriends';\r\nimport NoticeManager from './../profile/admin/NoticeManager';\r\nimport ChatRoom from './../chat/ChatRoom';\r\nimport AcountManager from './../profile/edit/AcountManager';\r\nimport MainLayout from '../layouts/MainLayout';\r\nimport GameDeck from './../games/GameDeck';\r\nimport GameGuide from './../informations/GameGuide';\r\nimport ContactUs from './../informations/ContactUs';\r\nimport ScoresTableContainer from './../tables/scores/ScoresTableContainer';\r\nimport SignUp from '../users/SignUp';\r\nimport RankingsContainer from '../tables/rankings/RankingsContainer';\r\nimport StudentsManagement from '../profile/admin/StudentsManagement';\r\nimport LeaguesManager from './../profile/admin/LeaguesManager';\r\nimport LeagueLayout from './../layouts/LeagueLayout';\r\nimport SingleGamePlay from '../games/gameplay/SingleGamePlay';\r\nconst MainRouter = () => {\r\n\treturn (\r\n\t\t<Switch>\r\n\t\t\t<Route path={`${Routes.Client.Profile}/:path?`} exact>\r\n\t\t\t\t<ProfilePanelLayout>\r\n\t\t\t\t\t<Switch>\r\n\t\t\t\t\t\t<Route path={Routes.Client.MyGamesAndFriends}>\r\n\t\t\t\t\t\t\t<MyGamesAndFriends />\r\n\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t\t<Route path={Routes.Client.ChatRoom}>\r\n\t\t\t\t\t\t\t<ChatRoom />\r\n\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t\t<Route exact path={Routes.Client.Profile}>\r\n\t\t\t\t\t\t\t<AcountManager />\r\n\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t</Switch>\r\n\t\t\t\t</ProfilePanelLayout>\r\n\t\t\t</Route>\r\n\t\t\t<Route path={`${Routes.Client.Admin}/:path?`} exact>\r\n\t\t\t\t<ProfilePanelLayout>\r\n\t\t\t\t\t<Switch>\r\n\t\t\t\t\t\t<Route path={Routes.Client.Notices}>\r\n\t\t\t\t\t\t\t<NoticeManager />\r\n\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t\t<Route path={Routes.Client.LeaguesManager}>\r\n\t\t\t\t\t\t\t<LeaguesManager />\r\n\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t\t<Route path={Routes.Client.StudentManagement}>\r\n\t\t\t\t\t\t\t<StudentsManagement />\r\n\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t</Switch>\r\n\t\t\t\t</ProfilePanelLayout>\r\n\t\t\t</Route>\r\n\t\t\t<Route path={`${Routes.Client.League}/:path?`} exact>\r\n\t\t\t\t<LeagueLayout>\r\n\t\t\t\t\t<Switch>\r\n\t\t\t\t\t\t<Route path={Routes.Client.League}>\r\n\t\t\t\t\t\t\t<LeaguesManager />\r\n\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t</Switch>\r\n\t\t\t\t</LeagueLayout>\r\n\t\t\t</Route>\r\n\t\t\t<Route>\r\n\t\t\t\t<MainLayout>\r\n\t\t\t\t\t<Switch>\r\n\t\t\t\t\t\t<Route path={Routes.Client.SignUp}>\r\n\t\t\t\t\t\t\t<SignUp />\r\n\t\t\t\t\t\t</Route>\r\n\r\n\t\t\t\t\t\t<Route path={Routes.Client.GameDeck}>\r\n\t\t\t\t\t\t\t<GameDeck />\r\n\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t\t<Route path={Routes.Client.SingleGameplay}>\r\n\t\t\t\t\t\t\t<SingleGamePlay />\r\n\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t\t<Route path={Routes.Client.Rankings}>\r\n\t\t\t\t\t\t\t<RankingsContainer />\r\n\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t\t<Route path={Routes.Client.GameGuide}>\r\n\t\t\t\t\t\t\t<GameGuide />/\r\n\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t\t<Route path={Routes.Client.ContactUs}>\r\n\t\t\t\t\t\t\t<ContactUs />\r\n\t\t\t\t\t\t</Route>\r\n\r\n\t\t\t\t\t\t<Route path={Routes.Client.Root} exact>\r\n\t\t\t\t\t\t\t<ScoresTableContainer />\r\n\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t</Switch>\r\n\t\t\t\t</MainLayout>\r\n\t\t\t</Route>\r\n\t\t</Switch>\r\n\t);\r\n};\r\n\r\nexport default MainRouter;\r\n","export const UpdateStatistics = (players, games) => {\r\n\treturn async (dispatch, getState) => {\r\n\t\tawait dispatch({\r\n\t\t\ttype: \"UPDATE_STATISTICS\",\r\n\t\t\tpayload: { players, games },\r\n\t\t});\r\n\t};\r\n};\r\n\r\nexport const MessagePushed = () => {\r\n\treturn async (dispatch) => {\r\n\t\tawait dispatch({ type: \"MEESAGE_PUSHED\" });\r\n\t};\r\n};\r\n\r\nexport const ResetMessages = () => {\r\n\treturn async (dispatch) => {\r\n\t\tawait dispatch({ type: \"RESET_MESSAGES\" });\r\n\t};\r\n};","import { useContext, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { withRouter } from \"react-router\";\r\nimport { MessagePushed } from \"../globals/redux/actions\";\r\nimport { browserStorage, Routes } from \"../services/configs\";\r\nimport { Attention, Invitation, NewMsg } from \"./notification\";\r\nimport jwtdecode from \"jwt-decode\";\r\nimport { AcceptInvitation } from \"../globals/redux/actions/tools\";\r\nimport { RejectGameInvitation } from \"./../globals/redux/actions/tools\";\r\nimport GlobalContext from \"../globals/state/GlobalContext\";\r\n\r\nconst NotificationCenter = ({ location }) => {\r\n\tconst message = useSelector((state) => state.message);\r\n\tconst { pathname } = location;\r\n\tconst tools = useSelector((state) => state.tools);\r\n\tconst dispatch = useDispatch();\r\n\tconst context = useContext(GlobalContext);\r\n\t// check TOKEN EXPIRE time and notify user before he starts a game to re login\r\n\tconst { gameInvitation } = tools;\r\n\tconst { goTo } = context;\r\n\tuseEffect(() => {\r\n\t\ttry {\r\n\t\t\tif (message && message.recieved && !message.recieved.pushed) {\r\n\t\t\t\tif (pathname !== Routes.Client.ChatRoom) {\r\n\t\t\t\t\tif (pathname !== Routes.Client.GameDeck) {\r\n\t\t\t\t\t\t// then just only push when message sender is the opponent\r\n\t\t\t\t\t\t//return;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tNewMsg(message.recieved, () =>\r\n\t\t\t\t\t\tgoTo(Routes.Client.ChatRoom)\r\n\t\t\t\t\t);\r\n\t\t\t\t\t//prevent recieved message from getting stuck in notificatioon loop\r\n\t\t\t\t\tdispatch(MessagePushed());\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (gameInvitation) {\r\n\t\t\t\tInvitation(\r\n\t\t\t\t\tgameInvitation,\r\n\t\t\t\t\t() => {\r\n\t\t\t\t\t\tdispatch(AcceptInvitation(gameInvitation.ID, gameInvitation.type));\r\n\t\t\t\t\t},\r\n\t\t\t\t\t() => {\r\n\t\t\t\t\t\tdispatch(RejectGameInvitation());\r\n\t\t\t\t\t}\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\tconst decoded_token = jwtdecode(browserStorage.TOKEN());\r\n\r\n\t\t\tconst toMin = (mili) => mili / 1000 / 60;\r\n\t\t\tif (decoded_token) {\r\n\t\t\t\tconst { exp, iat } = decoded_token;\r\n\t\t\t\tconst expirationLength = (exp - iat) / 60;\r\n\t\t\t\tconst criticalNow = toMin(Date.now()) + expirationLength / 4;\r\n\t\t\t\t// ex: expiration is at 60 min\r\n\t\t\t\t// after converting all values to minutes\r\n\t\t\t\t// critical point is about 15 minutes to expiration\r\n\t\t\t\t// so if toMin(now) + 15min passes expiration date -> inform user to take action\r\n\t\t\t\tif (criticalNow >= exp / 60) {\r\n\t\t\t\t\tAttention(\r\n\t\t\t\t\t\t\"نشست شما در شرف انقضاست ... برای پیش گیری از بروز مشکل لطفا دوباره وارد حساب خود شوید\"\r\n\t\t\t\t\t);\r\n\t\t\t\t\t// ...some action\r\n\t\t\t\t\t// implement onClick for this toast\r\n\t\t\t\t\t// like rerouting to sing in model and etc\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log(err);\r\n\t\t}\r\n\t}, [message, pathname, gameInvitation, goTo, dispatch]);\r\n\r\n\treturn null;\r\n};\r\n\r\nexport default withRouter(NotificationCenter);\r\n","import { browserStorage, Routes } from \"../configs\";\r\nimport { Fragment, useCallback, useContext, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { UpdateStatistics, ResetMessages } from \"../../globals/redux/actions\";\r\nimport { RecieveMessageFrom } from \"../../globals/redux/actions/message\";\r\nimport { Modal, Button, Row, Col, Badge } from \"react-bootstrap\";\r\nimport { Attention, OK, Sorry, Notify } from \"../../tools/notification\";\r\nimport NotificationCenter from \"../../tools/NotificationCenter\";\r\nimport GlobalContext from \"./../../globals/state/GlobalContext\";\r\nimport {\r\n\tEndFriendlyInvitation,\r\n\tEndFriendRequest,\r\n\tRecieveGameInvitation,\r\n\tReloadRecords,\r\n\tRepeatRandomSearch,\r\n\tCloseRandomSearch,\r\n\tEmptyGameInvitations,\r\n} from \"./../../globals/redux/actions/tools\";\r\nimport { EnterRoom } from \"../../globals/redux/actions/game\";\r\nimport { LoadThisPlayer } from \"./../../globals/redux/actions/player\";\r\nconst GlobalSocketManager = () => {\r\n\t// I actually used .jsx format to make this Component EventBased\r\n\t// On Each event called socket will do some specific operation\r\n\t// events are actually useEffects bound to special state changes\r\n\tconst context = useContext(GlobalContext);\r\n\tconst [socketGlobal, setSocketGlobal] = useState(null);\r\n\tconst [incommingFriendRequest, setIncommingFriendRequest] = useState(null);\r\n\tconst [showFriendshipModal, setShowFriendshipModal] = useState(false);\r\n\tconst me = useSelector((state) => state.me);\r\n\tconst tools = useSelector((state) => state.tools);\r\n\tconst room = useSelector((state) => state.room);\r\n\tconst message = useSelector((state) => state.message);\r\n\tconst [clientOnline, toggleClientOnline] = useState(true);\r\n\tconst dispatch = useDispatch();\r\n\tconst pack = useCallback((request, msg = null) => {\r\n\t\treturn JSON.stringify({\r\n\t\t\ttoken: browserStorage.TOKEN(),\r\n\t\t\trequest,\r\n\t\t\tmsg,\r\n\t\t});\r\n\t}, []);\r\n\tconst [reconnectingTimerID, setReconnectingTimerID] = useState(null);\r\n\r\n\tconst iamSignedIn = me && me.userID;\r\n\tconst iamBusy = room && room.name;\r\n\tconst connect = useCallback(\r\n\t\t(nextReconnectingTimeout = 5000) => {\r\n\t\t\tconsole.log(\r\n\t\t\t\t\"global websocket connect called -> new socket returned\"\r\n\t\t\t);\r\n\t\t\tif (!iamSignedIn) return null; //to make sure just site user trigger this connection\r\n\t\t\treturn new Promise((resolve, reject) => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tvar socket = new WebSocket(\r\n\t\t\t\t\t\t`${Routes.Server.WebSocketRoot}/${Routes.Server.wsGlobalRoute}`\r\n\t\t\t\t\t);\r\n\t\t\t\t\tsocket.onopen = () => {\r\n\t\t\t\t\t\tsocket.send(pack(\"online\")); //temp\r\n\t\t\t\t\t\tresolve(socket);\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\tsocket.onmessage = (response) => {\r\n\t\t\t\t\t\tconst { data } = response;\r\n\t\t\t\t\t\tconst { command, msg } = JSON.parse(data);\r\n\t\t\t\t\t\tswitch (command) {\r\n\t\t\t\t\t\t\tcase \"ONLINE\": {\r\n\t\t\t\t\t\t\t\tconst { players, games } = msg;\r\n\t\t\t\t\t\t\t\tdispatch(UpdateStatistics(players, games)); //playing temp\r\n\t\t\t\t\t\t\t\tmsg.room && msg.room.name && dispatch(EnterRoom(msg.room));\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tcase \"NOT_AUTHORIZED\": {\r\n\t\t\t\t\t\t\t\tSorry(\r\n\t\t\t\t\t\t\t\t\t\"نشست شما منقضی شده، لطفا دوباره وارد حساب کاربری خود شوید\"\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\tcontext.signOut();\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tcase \"FIND_RESULT\": {\r\n\t\t\t\t\t\t\t\t//response from random game request\r\n\t\t\t\t\t\t\t\tconst { found, stats } = msg;\r\n\t\t\t\t\t\t\t\tif (found) {\r\n\t\t\t\t\t\t\t\t\tdispatch(EnterRoom(found));\r\n\t\t\t\t\t\t\t\t\tdispatch(CloseRandomSearch());\r\n\t\t\t\t\t\t\t\t\tmsg.opponent &&\r\n\t\t\t\t\t\t\t\t\t\tdispatch(LoadThisPlayer(msg.opponent));\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t//search again 5s later\r\n\t\t\t\t\t\t\t\t\t// **********************\r\n\t\t\t\t\t\t\t\t\t//time out must be set with rising time out time to prevent server getting fucked up\r\n\t\t\t\t\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\t\t\t\t\tif (!iamBusy)\r\n\t\t\t\t\t\t\t\t\t\t\tdispatch(RepeatRandomSearch());\r\n\t\t\t\t\t\t\t\t\t}, 5000);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tif (stats)\r\n\t\t\t\t\t\t\t\t\t//double check if stats is sent by server, this is for avoiding further crashes\r\n\t\t\t\t\t\t\t\t\tdispatch(\r\n\t\t\t\t\t\t\t\t\t\tUpdateStatistics(\r\n\t\t\t\t\t\t\t\t\t\t\tstats.players,\r\n\t\t\t\t\t\t\t\t\t\t\tstats.games\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tcase \"GAME_CANCELLED\": {\r\n\t\t\t\t\t\t\t\tcontext.cancelGame();\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tcase \"FRIENDSHIP_REQUEST\": {\r\n\t\t\t\t\t\t\t\t//if (msg.askerID === opponentID) {\r\n\t\t\t\t\t\t\t\t//if both mes are in game then ask immidiately\r\n\t\t\t\t\t\t\t\tsetIncommingFriendRequest(msg);\r\n\t\t\t\t\t\t\t\tsetShowFriendshipModal(true);\r\n\r\n\t\t\t\t\t\t\t\t/*else {\r\n\t\t\t\t\t\t\t\t//if the friend request is comming from some one else then manage it differently\r\n\t\t\t\t\t\t\t\t//...\r\n\t\t\t\t\t\t\t}*/\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tcase \"FRIENDSHIP_RESPONSE\": {\r\n\t\t\t\t\t\t\t\tconst { answer, targetName } = msg;\r\n\t\t\t\t\t\t\t\t//if(answer) dispatch(TriggerRecordUpdate());\r\n\t\t\t\t\t\t\t\tif (answer) {\r\n\t\t\t\t\t\t\t\t\tOK(\r\n\t\t\t\t\t\t\t\t\t\t`${targetName} درخواست دوستی شما را پذیرفت`\r\n\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\t\t\t\t\t//reload for changing friendship status in the game => delay is set for restin assure that database is updated\r\n\t\t\t\t\t\t\t\t\t\tdispatch(ReloadRecords());\r\n\t\t\t\t\t\t\t\t\t}, 2000);\r\n\t\t\t\t\t\t\t\t} else\r\n\t\t\t\t\t\t\t\t\tAttention(\r\n\t\t\t\t\t\t\t\t\t\t`${targetName} درخواست دوستی شما را رد کرد`\r\n\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\tdispatch(EndFriendRequest());\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tcase \"TARGET_OFFLINE\": {\r\n\t\t\t\t\t\t\t\t//... while chatting or game request\r\n\t\t\t\t\t\t\t\tSorry(\r\n\t\t\t\t\t\t\t\t\t\"کاربر مورد نظر در حال حاضر آفلاین می باشد. لطفا بعدا تلاش کنید.\"\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\tdispatch(EndFriendlyInvitation());\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tcase \"YOUR_BUSY\": {\r\n\t\t\t\t\t\t\t\tSorry(\r\n\t\t\t\t\t\t\t\t\t\"شما هنوز بازی اخیر خود را به اتمام نرسانده اید. پس از پایان آن دوباره تلاش کنید.\"\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\tdispatch(EndFriendlyInvitation());\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tcase \"TARGET_BUSY\": {\r\n\t\t\t\t\t\t\t\t//... while chatting or game request\r\n\t\t\t\t\t\t\t\tNotify(\r\n\t\t\t\t\t\t\t\t\t\"در حال حاضر کاربر مشغول انجام بازی دیگری است و درخواست شما امکان پذیر نیست\"\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\tdispatch(EndFriendlyInvitation());\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tcase \"FRIENDLY_GAME\": {\r\n\t\t\t\t\t\t\t\t// ... trigger and show responding form\r\n\t\t\t\t\t\t\t\tconst { askerID, askerName, gameType } = msg;\r\n\t\t\t\t\t\t\t\tdispatch(\r\n\t\t\t\t\t\t\t\t\tRecieveGameInvitation(\r\n\t\t\t\t\t\t\t\t\t\taskerID,\r\n\t\t\t\t\t\t\t\t\t\taskerName,\r\n\t\t\t\t\t\t\t\t\t\tgameType\r\n\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tcase \"INVITATION_ACCEPTED\": {\r\n\t\t\t\t\t\t\t\t// ... friend responded to your request\r\n\t\t\t\t\t\t\t\t// ... if true -> room info has ben sent to you\r\n\t\t\t\t\t\t\t\t// needed to check room state? done in server\r\n\t\t\t\t\t\t\t\tdispatch(EndFriendlyInvitation());\r\n\t\t\t\t\t\t\t\tcontext.redirectToGamePlay(msg); //msg -> room\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tcase \"CHAT\": {\r\n\t\t\t\t\t\t\t\tdispatch(\r\n\t\t\t\t\t\t\t\t\tRecieveMessageFrom(\r\n\t\t\t\t\t\t\t\t\t\tmsg.name,\r\n\t\t\t\t\t\t\t\t\t\tmsg.friendID,\r\n\t\t\t\t\t\t\t\t\t\tmsg.text\r\n\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tdefault: {\r\n\t\t\t\t\t\t\t\t//... whatever\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tresolve(socket);\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\tsocket.onerror = (error) => {\r\n\t\t\t\t\t\tsocket.close();\r\n\t\t\t\t\t\treject(error);\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\tsocket.onclose = () => {\r\n\t\t\t\t\t\t// reconnectr or what?\r\n\t\t\t\t\t\tconsole.log(\r\n\t\t\t\t\t\t\t`Reconnecting to global socket in ${\r\n\t\t\t\t\t\t\t\tnextReconnectingTimeout / 1000\r\n\t\t\t\t\t\t\t} seconds`\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t\tconst timerID = setTimeout(() => {\r\n\t\t\t\t\t\t\t(async () => {\r\n\t\t\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\t\t\tlet socket = iamSignedIn\r\n\t\t\t\t\t\t\t\t\t\t? await connect(\r\n\t\t\t\t\t\t\t\t\t\t\t\tnextReconnectingTimeout * 2\r\n\t\t\t\t\t\t\t\t\t\t  )\r\n\t\t\t\t\t\t\t\t\t\t: null;\r\n\t\t\t\t\t\t\t\t\tsetSocketGlobal(socket);\r\n\t\t\t\t\t\t\t\t} catch (err) {\r\n\t\t\t\t\t\t\t\t\tconsole.log(err);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t})();\r\n\t\t\t\t\t\t}, nextReconnectingTimeout);\r\n\t\t\t\t\t\tsetReconnectingTimerID(timerID);\r\n\t\t\t\t\t\tresolve(null);\r\n\t\t\t\t\t\t// this part needs editing ? maybe not\r\n\t\t\t\t\t};\r\n\t\t\t\t} catch (err) {\r\n\t\t\t\t\tconsole.log(`global websocket error: ${err}`);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t},\r\n\t\t[dispatch, pack, iamSignedIn, iamBusy]\r\n\t);\r\n\r\n\t// EVENT NAME: PlayerUpdateEvent\r\n\t// happens when player sign in status changes => set ups global socket connection and then if signed in=> reads number of online users in page\r\n\tuseEffect(() => {\r\n\t\t//updates every time record changes or common user data changes, good or what?\r\n\t\tif (clientOnline && iamSignedIn) {\r\n\t\t\t(async () => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tlet socket = iamSignedIn ? await connect() : null;\r\n\t\t\t\t\tsetSocketGlobal(socket);\r\n\t\t\t\t} catch (err) {\r\n\t\t\t\t\tconsole.log(err);\r\n\t\t\t\t}\r\n\t\t\t})();\r\n\t\t}\r\n\t}, [clientOnline, iamSignedIn, connect]);\r\n\r\n\tuseEffect(() => {\r\n\t\treturn () => {\r\n\t\t\treconnectingTimerID && clearTimeout(reconnectingTimerID);\r\n\t\t};\r\n\t}, [reconnectingTimerID]);\r\n\tconst { fullname } = me ? me : { fullname: null };\r\n\tconst {\r\n\t\tfriendRequestTarget,\r\n\t\tfriendlyGameTarget,\r\n\t\trandomSearchRepeats,\r\n\t\tacceptedGame,\r\n\t} = tools;\r\n\t// EVENT NAME: RandomGameInitiated Event\r\n\t// happens when user clicks on 'Random Game\" Tab search button => sends opponent search request to server\r\n\tuseEffect(() => {\r\n\t\tif (randomSearchRepeats) {\r\n\t\t\tif (room.type) {\r\n\t\t\t\t//is it necessary?\r\n\t\t\t\t//completely making sure we're on right stage\r\n\t\t\t\tif (!room.name && iamSignedIn && socketGlobal)\r\n\t\t\t\t\tsocketGlobal.send(\r\n\t\t\t\t\t\tpack(\"find\", {\r\n\t\t\t\t\t\t\tgameType: room.type,\r\n\t\t\t\t\t\t\tscoreless: room.scoreless,\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t);\r\n\t\t\t} else if (!room.name) {\r\n\t\t\t\t//room --> {null,null} --> means room has been reset hand u need to remove\r\n\t\t\t\tif (socketGlobal) socketGlobal.send(pack(\"close_game\"));\r\n\t\t\t}\r\n\t\t}\r\n\t}, [iamSignedIn, room, randomSearchRepeats, socketGlobal, pack]);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (friendRequestTarget) {\r\n\t\t\t//friendRequestTarget either contains null => no request, or contains target ID for friendship\r\n\t\t\tif (socketGlobal)\r\n\t\t\t\tsocketGlobal.send(\r\n\t\t\t\t\tpack(\"friendship\", {\r\n\t\t\t\t\t\ttargetID: friendRequestTarget,\r\n\t\t\t\t\t\taskerName: fullname,\r\n\t\t\t\t\t})\r\n\t\t\t\t);\r\n\t\t}\r\n\t\tif (acceptedGame) {\r\n\t\t\tif (socketGlobal)\r\n\t\t\t\tsocketGlobal.send(\r\n\t\t\t\t\tpack(\"respond_friendlygame\", {\r\n\t\t\t\t\t\tanswer: true,\r\n\t\t\t\t\t\tinviterID: acceptedGame.inviterID,\r\n\t\t\t\t\t\tgameType: acceptedGame.type,\r\n\t\t\t\t\t})\r\n\t\t\t\t);\r\n\t\t\tdispatch(EmptyGameInvitations());\r\n\t\t} else if (friendlyGameTarget) {\r\n\t\t\tif (socketGlobal)\r\n\t\t\t\tsocketGlobal.send(\r\n\t\t\t\t\tpack(\"friendly_game\", {\r\n\t\t\t\t\t\ttargetID: friendlyGameTarget.targetID,\r\n\t\t\t\t\t\tgameType: friendlyGameTarget.type,\r\n\t\t\t\t\t\taskerName: fullname,\r\n\t\t\t\t\t})\r\n\t\t\t\t);\r\n\t\t}\r\n\t}, [\r\n\t\tdispatch,\r\n\t\tfriendRequestTarget,\r\n\t\tfriendlyGameTarget,\r\n\t\tacceptedGame,\r\n\t\tsocketGlobal,\r\n\t\tpack,\r\n\t\tfullname,\r\n\t]);\r\n\r\n\tconst respondToFriendshipRequest = (answer) => {\r\n\t\t// handle multiple requests *************\r\n\r\n\t\t//target reponds to requester\r\n\t\tif (socketGlobal)\r\n\t\t\tsocketGlobal.send(\r\n\t\t\t\tpack(\"respond_friendship\", {\r\n\t\t\t\t\tanswer,\r\n\t\t\t\t\ttargetName: me.fullname,\r\n\t\t\t\t\taskerID: incommingFriendRequest.askerID,\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t\t// if(answer) dispatch(TriggerRecordUpdate());\r\n\t\tsetShowFriendshipModal(false);\r\n\t\tsetIncommingFriendRequest(null);\r\n\t\tif (answer)\r\n\t\t\t// if request accepted => reload friendship status after some seconds, delay is set to make sure friends are linked in database\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tdispatch(ReloadRecords());\r\n\t\t\t}, 5000);\r\n\r\n\t\t// dispatch(SendFriendRequestTo(null)); //reset friend request targetID to prevent any future problm\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tif (message.sent && socketGlobal) {\r\n\t\t\t//if destination is determined, otherwise => means no message has been sent\r\n\t\t\tsocketGlobal.send(pack(\"chat\", message.sent));\r\n\t\t\tdispatch(ResetMessages());\r\n\t\t}\r\n\t}, [message.sent, socketGlobal, pack, dispatch]);\r\n\r\n\t// if online status changes\r\n\tsetInterval(() => {\r\n\t\tif (window.navigator.onLine) {\r\n\t\t\t//client online\r\n\t\t\tif (!clientOnline)\r\n\t\t\t\t//this means -> client JUST became online\r\n\t\t\t\ttoggleClientOnline(true); //change connection status\r\n\t\t} else {\r\n\t\t\t// clients offline\r\n\t\t\tif (clientOnline)\r\n\t\t\t\t//this means -> client JUST became offline now\r\n\t\t\t\ttoggleClientOnline(false); //change connection status\r\n\t\t}\r\n\t}, 5000);\r\n\r\n\t// is it really necessary though ?????\r\n\t// move UI to notification center\r\n\treturn (\r\n\t\t//this is just for firendship request in games\r\n\t\t<Fragment>\r\n\t\t\t<NotificationCenter />\r\n\t\t\t<Modal\r\n\t\t\t\tshow={showFriendshipModal}\r\n\t\t\t\tonHide={() => respondToFriendshipRequest(false)}>\r\n\t\t\t\t<Modal.Header closeButton />\r\n\t\t\t\t<Modal.Body className=\"text-right\">\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\t{!incommingFriendRequest ? null : (\r\n\t\t\t\t\t\t\t<Badge\r\n\t\t\t\t\t\t\t\tstyle={{ fontSize: \"18px\", margin: \"2%\" }}\r\n\t\t\t\t\t\t\t\tpill\r\n\t\t\t\t\t\t\t\tvariant=\"warning\">\r\n\t\t\t\t\t\t\t\t{incommingFriendRequest.askerName}\r\n\t\t\t\t\t\t\t</Badge>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\tبه شما پیشنهاد دوستی داده است.\r\n\t\t\t\t\t</p>\r\n\t\t\t\t\t<p>اگر تمایل به دوستی ندارید میتواند درخواست را رد کنید.</p>\r\n\t\t\t\t</Modal.Body>\r\n\t\t\t\t<Modal.Footer className=\"w-100 text-right\">\r\n\t\t\t\t\t<Row className=\"w-100\">\r\n\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tvariant=\"success\"\r\n\t\t\t\t\t\t\t\tblock\r\n\t\t\t\t\t\t\t\tonClick={() =>\r\n\t\t\t\t\t\t\t\t\trespondToFriendshipRequest(true)\r\n\t\t\t\t\t\t\t\t}>\r\n\t\t\t\t\t\t\t\tپذیرفتن\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tblock\r\n\t\t\t\t\t\t\t\tvariant=\"danger\"\r\n\t\t\t\t\t\t\t\tonClick={() =>\r\n\t\t\t\t\t\t\t\t\trespondToFriendshipRequest(false)\r\n\t\t\t\t\t\t\t\t}>\r\n\t\t\t\t\t\t\t\tرد\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t</Modal.Footer>\r\n\t\t\t</Modal>\r\n\t\t</Fragment>\r\n\t);\r\n};\r\n\r\nexport default GlobalSocketManager;\r\n","import { ToastContainer } from \"react-toastify\";\r\nimport NavigationBar from \"./commons/NavigationBar\";\r\nimport GlobalStates from \"./globals/state/GlobalStates\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport MainRouter from \"./commons/MainRouter\";\r\nimport { useSelector } from \"react-redux\";\r\nimport GlobalSocketManager from \"./services/ws/GlobalSocketManager\";\r\n\r\nconst App = () => {\r\n\tconst me = useSelector((state) => state.me);\r\n\treturn (\r\n\t\t<BrowserRouter>\r\n\t\t\t<ToastContainer />\r\n\t\t\t<GlobalStates>\r\n\t\t\t\t{me && <GlobalSocketManager />}\r\n\t\t\t\t<NavigationBar />\r\n\t\t\t\t<MainRouter />\r\n\t\t\t</GlobalStates>\r\n\t\t</BrowserRouter>\r\n\t);\r\n};\r\n\r\nexport default App;\r\n","import { combineReducers } from \"redux\";\r\nimport { meReducer } from \"./me\";\r\nimport { opponentReducer } from \"./opponent\";\r\nimport { roomReducer } from './room';\r\nimport { scoreboardReducer } from './scoreboard';\r\nimport { toolsReducer } from \"./tools\";\r\nimport { statisticsReducer } from \"./statistics\";\r\nimport { messageReducer } from './message';\r\nimport { interactionsReducer } from './interactions';\r\nimport { leagueReducer } from './league';\r\nimport { gameReducer } from \"./game\";\r\n\r\nexport const reducers = combineReducers({\r\n    me: meReducer,\r\n    opponent: opponentReducer,\r\n    room: roomReducer,\r\n    scoreboard: scoreboardReducer,\r\n    tools: toolsReducer,\r\n    statistics: statisticsReducer,\r\n    message: messageReducer,\r\n    interactions: interactionsReducer,\r\n    league: leagueReducer,\r\n    game: gameReducer\r\n});","export const meReducer = (state = null, action) => {\r\n    switch (action.type) {\r\n        case \"LOAD_MINE\":\r\n            return {...action.payload};\r\n        case \"RESET_MINE\":\r\n            return null;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","export const opponentReducer = (state = null, action) => {\r\n    switch (action.type) {\r\n        case \"LOAD_OPPONENT\":\r\n            return {...action.payload};\r\n        case \"RESET_OPPONENT\":\r\n            return null;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","export const roomReducer = (state = {name: null, type: null, scoreless: null}, action) => {\r\n    switch (action.type) {\r\n        case \"ENTER_ROOM\":\r\n            return {...action.payload};\r\n        case \"EXIT_ROOM\":\r\n            return {name: null, type: null, scoreless: null}\r\n        default:\r\n            return state;\r\n    }\r\n};","// simple scoreboard for player's live games\r\n\r\nexport const scoreboardReducer = (state = {me: null, opp: null}, action) => {\r\n    switch (action.type) {\r\n        case \"UPDATE_SCOREBOARD\":\r\n            return {...action.payload}; // payload === {me: {shape: , score: }, opp: 0} // null for ended or not started games : {me: null, opp: null}\r\n        case \"CLEAN_SCOREBOARD\":\r\n            return {me: null, opp: null};\r\n        default:\r\n            return state;\r\n    }\r\n};","export const toolsReducer = (\r\n\tstate = {\r\n\t\trandomSearchRepeats: 0,\r\n\t\tfriendRequestTarget: null,\r\n\t\tfriendlyGameTarget: null,\r\n\t\tgameInvitation: null,\r\n\t\tacceptedGame: null,\r\n\t\trecordReloadTrigger: false,\r\n\t},\r\n\taction\r\n) => {\r\n\tswitch (action.type) {\r\n\t\tcase \"UPDATE_TOOLS\":\r\n\t\t\treturn { ...action.payload };\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n","export const statisticsReducer = (state = { players: 0, games: 0 }, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase \"UPDATE_STATISTICS\":\r\n\t\t\treturn { ...action.payload };\r\n\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n","export const messageReducer = (\r\n\tstate = { sent: null, recieved: null },\r\n\taction\r\n) => {\r\n\tswitch (action.type) {\r\n\t\tcase \"RECIEVE_MESSAGE\": {\r\n\t\t\treturn {\r\n\t\t\t\trecieved: { ...action.payload, pushed: false },\r\n\t\t\t\tsent: state.sent,\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase \"SEND_MESSAGE\": {\r\n\t\t\treturn {\r\n\t\t\t\tsent: { ...action.payload, pushed: true },\r\n\t\t\t\trecieved: state.recieved,\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase \"MEESAGE_PUSHED\":\r\n\t\t\treturn {\r\n\t\t\t\tsent: state.sent,\r\n\t\t\t\trecieved: {...state.recieved, pushed: true},\r\n\t\t\t};\r\n\t\tcase \"RESET_MESSAGES\":\r\n\t\t\treturn { sent: null, recieved: null };\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n","export const interactionsReducer = (state = [], action) => {\r\n    switch (action.type) {\r\n        case \"LOAD_INTERACTIONS\":\r\n            return [...action.payload];\r\n        case \"RESET_INTERACTIONS\":\r\n            return [];\r\n        default:\r\n            return state;\r\n    }\r\n};","export const leagueReducer = (state = null, action) => {\r\n    switch (action.type) {\r\n        case \"ENTER_LEAGUE\":\r\n            return {...action.payload};\r\n        case \"EXIT_LEAGUE\":\r\n            return null;\r\n        default:\r\n            return state;\r\n    }\r\n};","export const gameReducer = (state = null, action) => {\r\n    switch (action.type) {\r\n        case \"REGISTER_GAME\":\r\n            return {...action.payload };\r\n        case \"RESET_GAME\":\r\n            return null;\r\n        default:\r\n            return state;\r\n    }\r\n};","import { applyMiddleware, compose, createStore } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { reducers } from \"../reducers\";\r\n\r\nexport const store = createStore(\r\n\treducers,\r\n\t// compose(\r\n\t\tapplyMiddleware(thunk),\r\n\t// \twindow.__REDUX_DEVTOOLS_EXTENSION__ &&\r\n\t// \t\twindow.__REDUX_DEVTOOLS_EXTENSION__()//temp: enable chrome redux manager extension\r\n\t// )\r\n\t\r\n);\r\n\r\n//dispatch\r\nstore.subscribe(() => console.log(store.getState()));\r\n","import { render } from \"react-dom\";\r\nimport App from \"./App.js\";\r\nimport { Provider } from \"react-redux\";\r\nimport { store } from \"./globals/redux/store/index\";\r\n\r\nrender(\r\n\t<Provider store={store}>\r\n\t\t\t<App />\r\n\t</Provider>,\r\n\tdocument.getElementById(\"root\")\r\n);\r\n","const ClientRoutes = require('./client');\r\nconst ServerRoutes = require('./server');\r\nconst Status = require('./status');\r\nconst browserStorage = require('./browser');\r\nconst GameSetting = require('./gamesetting');\r\n//all configs\r\nmodule.exports = {\r\n    browserStorage,\r\n    Routes: { Server: ServerRoutes, Client: ClientRoutes },\r\n    Status,\r\n    GameSetting,\r\n    Devices:{ SmartPhone: 2, Tablet: 1, Desktop: 0 },\r\n}"],"sourceRoot":""}